{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/styles/main.scss?160e","webpack:///./src/.fable/fable-library.3.2.11/Util.js","webpack:///./src/.fable/fable-library.3.2.11/Types.js","webpack:///./src/.fable/fable-library.3.2.11/Reflection.js","webpack:///./src/.fable/Fable.SimpleXml.3.2.0/AST.fs.js","webpack:///./src/.fable/fable-library.3.2.11/Int32.js","webpack:///./src/.fable/fable-library.3.2.11/Numeric.js","webpack:///./src/.fable/fable-library.3.2.11/lib/long.js","webpack:///./src/.fable/fable-library.3.2.11/Long.js","webpack:///./src/.fable/fable-library.3.2.11/Date.js","webpack:///./src/.fable/fable-library.3.2.11/RegExp.js","webpack:///./src/.fable/fable-library.3.2.11/String.js","webpack:///./src/.fable/fable-library.3.2.11/System.Text.js","webpack:///./src/.fable/fable-library.3.2.11/Option.js","webpack:///./src/.fable/fable-library.3.2.11/Array.js","webpack:///./src/.fable/fable-library.3.2.11/List.js","webpack:///./src/.fable/fable-library.3.2.11/FSharp.Collections.js","webpack:///./src/.fable/fable-library.3.2.11/FSharp.Core.js","webpack:///./src/.fable/fable-library.3.2.11/Seq.js","webpack:///./src/.fable/fable-library.3.2.11/Char.js","webpack:///./src/.fable/fable-library.3.2.11/Unicode.13.0.0.js","webpack:///./src/Fable.IO.fs.js","webpack:///./src/.fable/fable-library.3.2.11/BigInt/n.js","webpack:///./src/.fable/fable-library.3.2.11/lib/big.js","webpack:///./src/.fable/fable-library.3.2.11/Decimal.js","webpack:///./src/.fable/fable-library.3.2.11/BigInt/z.js","webpack:///./src/.fable/fable-library.3.2.11/BigInt.js","webpack:///./src/.fable/fable-library.3.2.11/Range.js","webpack:///./src/.fable/fable-library.3.2.11/Map.js","webpack:///./src/.fable/fable-library.3.2.11/Choice.js","webpack:///./src/HtmlCharRefs.fs.js","webpack:///./src/TextConversions.fs.js","webpack:///./src/Fable.Collections.fs.js","webpack:///./src/HtmlParser.fs.js","webpack:///./src/.fable/fable-library.3.2.11/AsyncBuilder.js","webpack:///./src/.fable/fable-library.3.2.11/Async.js","webpack:///./src/.fable/Fable.Elmish.3.0.0/cmd.fs.js","webpack:///./src/.fable/Fable.SimpleHttp.3.0.0/Types.fs.js","webpack:///./src/.fable/Fable.SimpleHttp.3.0.0/Http.fs.js","webpack:///./src/.fable/Fable.Parsimmon.4.1.0/Parsimmon.fs.js","webpack:///./src/.fable/Fable.SimpleXml.3.2.0/Parser.fs.js","webpack:///./src/.fable/Fable.SimpleXml.3.2.0/SimpleXml.fs.js","webpack:///./src/Xml2Feliz.fs.js","webpack:///./src/.fable/fable-library.3.2.11/Set.js","webpack:///./src/BulmaExampleParser.fs.js","webpack:///./src/.fable/Feliz.1.16.0/Interop.fs.js","webpack:///./src/.fable/Feliz.Bulma.2.4.0/ElementBuilders.fs.js","webpack:///./src/Html2Feliz.fs.js","webpack:///./src/.fable/Fable.Elmish.3.0.0/prelude.fs.js","webpack:///./src/.fable/Fable.Elmish.3.0.0/ring.fs.js","webpack:///./src/.fable/Fable.Elmish.3.0.0/program.fs.js","webpack:///./src/.fable/Fable.Elmish.React.3.0.1/common.fs.js","webpack:///./src/.fable/Fable.Elmish.React.3.0.1/react.fs.js","webpack:///./src/App.fs.js","webpack:///./src/.fable/Fable.Parsimmon.4.1.0/Parsimmon.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","sameConstructor","y","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","done","Error","getEnumerator","GetEnumerator","iterator","toIterator","en","hasNext","undefined","Lazy","factory","isValueCreated","createdValue","padWithZeros","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","compare","CompareTo","isComparable","compareObjects","min","comparer","max","createObj","fields","obj","kv","WeakMap","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","concat","seqToString","self","callStack","cons","entries","join","String","Union","fieldStr","withParens","indexOf","unionToString","tag","other","cases","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","FSharpRef","contentsOrGetter","setter","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","gen","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","class_type","record_type","anonRecord_type","union_type","caseNames","tuple_type","option_type","generic","list_type","array_type","string_type","bool_type","int32_type","endsWith","XmlElement","Namespace","Name","Attributes","Content","Children","SelfClosing","IsTextNode","IsComment","XmlElement$reflection","XmlDocument","Declaration","Root","NumberStyles","getRange","unsigned","bitsize","isValid","style","res","exec","replace","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","sign","validResponse","tryParse","defValue","contents","Number","parseInt","isNaN","umin","umax","parse","_a","op_UnaryNegation_Int32","symbol","isNumeric","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","isLong","toJSON","substr","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","substring","radixToPower","size","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Addition","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","pattern","options","flags","RegExp","escape","matches","reg","lastIndex","global","fsFormatRegExp","interpolateRegExp","formatRegExp","isLessThan","numericCompare","printf","input","cont","strParts","strIdx","matchIndex","index","createPrinter","_strParts","_matches","_result","padArg","arg","_padLength","precision","padLength","formatReplacement","interpolate","valIdx","continuePrint","toText","toFail","toLowerCase","toUpperCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_","idx","intPart","decimalPart","isNullOrEmpty","isNullOrWhiteSpace","delimiter","xs","from","isRight","search","split","splitters","removeEmpty","arguments","splits","startIndex","StringBuilder","capacity","buf","StringBuilder_$ctor_Z18115A39","StringBuilder__Append_Z721C83C5","Some","some","defaultArg","opt","defaultValue","mapping","Helpers_allocateArrayFromCons","indexNotFound","differentLengths","fill","target","targetIndex","start","mapIndexed","source","initialize","initializer","reverse","array","choose","chooser","matchValue","value_2","equalsWith","array1","array2","length1","length2","compareWith","e1","e2","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","xt","yt","i_mut","h_mut","_key","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","it","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","toArray","fold","folder","state","acc","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","ofSeq","xs_3","root","node","enumerator","Dispose","xs_5","t_2","lists","forEach","xs_6","append","ys","acc_mut","foldIndexed","tryFindIndex","forAll","sortWith","arr","ComparisonIdentity_Structural","Compare","x_1","LanguagePrimitives_FastGenericComparer","SR_notEnoughElements","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_enumerateThenFinally","Enumerator_generateWhileSome","openf","compute","closef","started","curr","value_1","finish","matchValue_1","checkNonNull","argName","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","delay","generator","sources","outerOpt","innerOpt","finished","inner","outer","inner_1","outer_1","ie","Enumerator_concat","unfold","st_1","Enumerator_unfold","ar","toArray_1","toList","ofArray_1","ofSeq_1","generate","generateIndexed","e_1","skip","collect","unicodeCategoryFunc","codePointAt","codepoints","Uint32Array","categories","cp","mid","getCategoryFunc","isLetter","getUnicodeCategory2","isLetter2","isLetterOrDigit","isLetterMask","isLetterOrDigit2","isWhiteSpace","isWhiteSpace2","StringReader","pos","StringReader_$ctor_Z721C83C5","StringReader__get_IsEndOfString","StringReader__ReadChar","fromCharCode","char","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","b","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_equal","q","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","k_mut","k","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","a","patternInput","patternInput_1","ad","a_1","f_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","_arg1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_isSmall","BigNatModule_getSmall","P","_this","cmp","NAME","INVALID","INVALID_DP","NUMERIC","nl","charAt","round","Big","DP","RM","rm","more","xc","findIndex","xci","unshift","pop","stringify","doExponential","isNonzero","isneg","yc","bl","bt","ri","bz","ai","al","rl","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","NE","PE","strict","valueOf","_Big_","normalize","TypeError","Decimal","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","rangeDouble","rangeChar","intStop","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","MapTreeModule_iter","MapTreeModule_iterOpt","f_mut","MapTreeModule_copyToArray","MapTreeModule_ofArray","forLoopVar","MapTreeModule_ofSeq","fold_1","tupledArg","MapTreeModule_ofList","e_mut","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5329","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_1","b1","b2","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","FSharpMap__get_Count","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap_Create","FSharpMap__get_IsEmpty","MapTreeModule_find","MapTreeModule_mem","FSharpMap__TryFind","table","FSharpMap__Add","tryFind","ofList","elements","FSharpChoice$2","FSharpChoice$3","FSharpChoice$7","refs","$007CNumber$007CLookup$007C","orig","chars","trimEnd","ref","delimeters","outArg","outArg_1","v_1","substitute","num","codePoint","trailSurrogate","activePatternResult8516","Stack$1","items","HtmlAttribute","HtmlAttribute$reflection","HtmlNode","sb_1","serialize","sb","indentation","canAddNewLine","html","appendEndTag","newLine","StringBuilder__AppendLine","name_2","onlyText","canAddNewLine_1","enumerator_1","element","HtmlNode$reflection","TextParser_toPattern","TextParser_$007CEndOfFile$007C_$007C","TextParser_$007CWhitespace$007C_$007C","arg00","TextParser_$007CLetter$007C_$007C","HtmlParser_wsRegex","HtmlParser_HtmlToken","HtmlParser_CharList","Contents","HtmlParser_CharList_get_Empty","HtmlParser_CharList__Cons_244C7CD6","HtmlParser_CharList__get_Length","HtmlParser_CharList__Clear","HtmlParser_InsertionMode","HtmlParser_HtmlState","CurrentTag","InsertionMode","Tokens","Reader","HtmlParser_HtmlState__Pop","HtmlParser_HtmlState__Peek","StringReader__PeekChar","HtmlParser_HtmlState__Pop_Z524259A4","map_2","HtmlParser_HtmlState__get_ContentLength","HtmlParser_HtmlState__NewAttribute","HtmlParser_HtmlState__ConsAttrName","HtmlParser_HtmlState__CurrentTagName","trim","HtmlParser_HtmlState__ConsAttrValue_244C7CD6","HtmlParser_HtmlState__ConsAttrValue","HtmlParser_HtmlState__GetAttributes","HtmlParser_HtmlState__get_IsScriptTag","toLocaleLowerCase","HtmlParser_HtmlState__EmitTag_Z1FBCCD16","isEnd","HtmlParser_HtmlState__Emit","HtmlParser_HtmlState__get_IsFormattedTag","HtmlParser_HtmlState__EmitToAttributeValue","content","normalizedContent","replacement","limit","replacer","withGroups","pLast","groups","tmp","_s","sub1","sub2","replace_1","Value","HtmlParser_HtmlState__Cons","HtmlParser_HtmlState__Cons_244C7CD6","HtmlParser_HtmlState__Cons_695F1130","objectArg","HtmlParser_HtmlState__Cons_Z721C83C5","HtmlParser_HtmlState__ConsTag","HtmlParser_tokenise","reader","HtmlParser_HtmlState_Create_25CF1C9F","state_1_mut","state_1","tagOpen","charRef","script","docType","comment","state_2_mut","state_2","scriptDoubleQuoteString","scriptSingleQuoteString","scriptSlash","scriptLessThanSign","state_3_mut","state_3","scriptSingleQuoteStringBackslash","state_4_mut","state_4","matchValue_4","scriptDoubleQuoteStringBackslash","state_5","state_6","state_7","scriptMultiLineComment","scriptSingleLineComment","state_8_mut","state_8","matchValue_8","scriptMultiLineCommentStar","state_9","matchValue_9","state_10_mut","state_10","matchValue_10","state_11","scriptDataEscapeStart","scriptEndTagOpen","state_12","scriptDataEscapeStartDash","state_13","scriptDataEscapedDashDash","state_14_mut","state_14","matchValue_14","scriptDataEscapedLessThanSign","scriptDataEscaped","state_15","matchValue_15","scriptDataEscapedEndTagOpen","scriptDataDoubleEscapeStart","state_16_mut","state_16","matchValue_16","scriptDataDoubleEscaped","state_17_mut","state_17","matchValue_17","scriptDataDoubleEscapedDash","scriptDataDoubleEscapedLessThanSign","state_18","matchValue_18","scriptDataDoubleEscapedDashDash","state_19","scriptDataDoubleEscapeEnd","state_20_mut","state_20","matchValue_20","state_21_mut","state_21","matchValue_21","state_22","matchValue_22","scriptDataEscapedEndTagName","state_23_mut","state_23","matchValue_23","beforeAttributeName","selfClosingStartTag","state_24_mut","state_24","matchValue_24","scriptDataEscapedDash","state_25","matchValue_25","state_26","matchValue_26","scriptEndTagName","state_27_mut","state_27","matchValue_27","state_28_mut","state_28","state_29","matchValue_29","markupDeclaration","endTagOpen","bogusComment","tagName","state_30","state_31_mut","bogusComment$0027","state_31","exitBogusComment","state_32","matchValue_30","state_33","pattern_matching_result_7","matchValue_31","len1","len2","newArray","i_1","append_1","cData","state_34","matchValue_33","state_35_mut","state_35","state_36_mut","state_36","matchValue_35","commentEndDash","state_37","matchValue_36","commentEndState","state_38","matchValue_37","isEndTag","state_39","matchValue_38","state_40","matchValue_39","state_41","matchValue_40","state_42_mut","state_42","matchValue_41","attributeName","state_43_mut","state_43","matchValue_42","beforeAttributeValue","afterAttributeName","state_44_mut","state_44","matchValue_43","state_45_mut","state_45","matchValue_44","attributeValueQuoted","attributeValueUnquoted","state_46_mut","state_46","matchValue_45","attributeValueUnquotedCharRef","attributeValueUnquotedSlash","state_47","quote","state_48","matchValue_47","afterAttributeValueQuoted","attributeValueQuotedCharRef","quote_1","state_49","matchValue_48","state_50","matchValue_49","y_1","state_51_mut","state_51","matchValue_50","isEos","HtmlParser_parse","canNotHaveChildren","tokens_4","parse$0027","callstack","expectedTagEnd_4","parentTagName","tokens_2","tokens","expectedTagEnd_1","tokens_1","expectedTagEnd_3","name_13","name_10","pattern_matching_result","dt_1","rest_2","rest_3","attributes_3","name_4","rest_4","attributes_4","name_5","rest_5","item","parse$0027_1","recursiveReturn","dt","tokens_3","Stack$1__Pop","pattern_matching_result_1","name_7","pattern_matching_result_3","attributes_5","name_11","rest_6","pattern_matching_result_4","rest_8","reverse_1","elements_2","HtmlParser_parseFragment","HtmlNode_Parse_Z721C83C5","text","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","delete","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","computation1","computation2","Bind","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","_x","defaultCancellationToken","catchAsync","work","Choice_makeChoice1Of2","fromContinuations","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","Cmd_exec","dispatch","cmd","Cmd_none","Cmd_batch","cmds","HttpMethod","BodyContent","HttpRequest","url","method","headers","withCredentials","overridenMimeType","overridenResponseType","ResponseContent","HttpResponse","statusCode","responseText","responseType","responseHeaders","Http_defaultRequest","Http_splitAt","Http_request","Http_method","httpVerb","req","Http_send","xhr","XMLHttpRequest","open","Http_serializeMethod","onreadystatechange","readyState","status","response","headerLine","getAllResponseHeaders","setRequestHeader","overrideMimeType","matchValue_5","matchValue_6","send","Parsimmon_parse","parser","Parsimmon_skip","skipped","keep","Parsimmon_many","many","Parsimmon_ofLazy","lazy","Parsimmon_chain","after","before","then","Parsimmon_bind","chain","Parsimmon_letter","letter","letters","eof","succeed","lookahead","Parsimmon_digit","digit","Parsimmon_seperateBy","others","sepBy","Parsimmon_map","any","Parsimmon_choose","ps","or","all","fail","Parsimmon_satisfy","Parsimmon_takeWhile","takeWhile","Parsimmon_str","string","Parsimmon_oneOf","oneOf","Parsimmon_whitespace","whitespace","Parsimmon_optionalWhitespace","optWhitespace","Parsimmon_atLeastOneOrMany","atLeast","Parsimmon_atLeast","noneOf","Parsimmon_seq2","seq","Parsimmon_concat","strings","Parsimmon_seq3","Parser_withWhitespace","escapedCharSnippet","list2","acceptableChars","Parser_escapedString","_arg1_1","c_1","Parser_escapedStringTick","Parser_attributKey","Parser_integer","Parser_letters","token","contains","Parser_identifier","Parser_attributeValue","Parser_attribute","Parser_manyAttributes","Parser_simpleTag","Parser_tagWithoutNamespace","Parser_openingTagName","Parser_declaration","Parser_selfClosingTag","Parser_textSnippet","Parser_comment","regexp","Parser_cdataNode","Parser_nodeOpening","Parser_nodeClosing","before_1","matchingTag","ns$0027","Parser_emptyNode","_arg2","Parser_emptyNodeWithTextContent","Parser_textNode","Parser_cdata","simpleXmlElement$0040278$002D1","selfClosingElement","emptyElement","tupledArg_1","tupledArg_2","tupledArg_3","_arg3","tag_1","ns_3","children","Parser_simpleXmlElement","xmlElement$0040363$002D1","p_1","Parser_xmlElement","declAttrs","root_1","tryParseElement","formatAttributeName","attr","word","copyOfStruct","ChildPosition","toPositionedChildren","lastIdx","mapIndexed_1","child_1","formatTextProp","formatted","text_mut","compressed","compressSpaces","trimStart","formatAttribute","indent","level","clo1_1","indentStr","classes","classes_1","arg10_1","single","arg20_2","formatNode","line","level_1","arg10_2","arg20_1","text_1","attrs","name_1","attrs_1","text_2","attrs_2","name_3","activePatternResult9025","$007CCommentNode$007CTextNode$007CSelfClosingElement$007CEmptyElement$007CEmptyElementWithText$007CMixedNode$007CEmptyTextNode$007C","singleton_1","attr_1","arg10_7","attr_2","child","parseManyElements","tryParseManyElements","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","SetTreeModule_mk","SetTreeModule_rebalance","t2_3","t_3","t2_4","SetTreeModule_add","SetTreeModule_empty","SetTreeModule_remove","SetTreeModule_spliceOutSuccessor","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","x1_3","x2_3","t1_6","x1_4","t2_6","x2_4","t1_7","x1_5","t2_7","x2_5","c_3","c_2","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","t1_2","x1","t2_2","x2_1","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","set$","FSharpSet_Empty","FSharpSet__Add","remove","FSharpSet__Remove","findAllIndexes","predicate","indexed","getExamples","examplesHtml","lines","zip","line_1","reactApi","react","reactElement","createElement","mkAttr","mkStyle","Helpers_combineClasses","cn","props","Helpers_extractClasses","nameMaps","emptyChildren","containsOnlyCommentsOrEmptyText","$007CEmptyChildren$007CSingleTextNode$007CChildren$007C","formatNodeName","children_2","children_3","name_6","activePatternResult8948","activePatternResult8942","console","error","toConsole","RingState$1","RingBuffer$1","RingBuffer$1__Pop","__","wix","rix","rix$0027","RingBuffer$1__Push_2B595","wix_1","items_1","wix$0027","items_3","ix","RingBuffer$1__doubleSize","Program$4","init","update","subscribe","view","setState","syncDispatch","ProgramModule_withSetState","program","ProgramModule_view","ProgramModule_runWith","model","rb","reentered","msg","nextMsg","msg_1","model$0027","ex_1","LazyProps$1","render","equal","Components_LazyView$1","nextProps","_nextState","Component","Common_lazyView2With","Program_Internal_withReactSynchronousUsing","lazyView2With","placeholderId","react_dom","document","getElementById","examples","Model","Examples","Input","Output","Output2","DropdownIsActive","ExpandedExamples","Model$reflection","Msg","Msg$reflection","BulmaExamples_docs","BulmaExamples_getExamples","pages","page_1","task","Http_get","ofSuccess","Page","StatusCode","arg_1","Zero","clo1","BulmaExamples_elements","arg10","BulmaExamples_components","BulmaExamples_getAllExamples","content_2","examples_1","example","add_1","content_1","Extensions_copyToClipboard","selector","getSelection","removeAllRanges","querySelector","range","createRange","selectNode","addRange","execCommand","examplesMenu","menuIcon","faIcon","page","isExpanded","singleton_2","navbar","elms_2","elms_1","brand","menu","elms","elms_3","listOfExamplesCol","inputCol","value_4","adder","lineCount","Add","GetZero","props_1","ev","outputXml2Feliz","value_5","nodes","props_2","outputHtml2Feliz","ProgramModule_run","initModel","newModel","ProgramModule_withConsoleTrace","model_1","onError_1","Parsimmon","seed","elem","bufferExists","Buffer","isParser","isBuffer","makeSuccess","furthest","expected","makeFailure","mergeReplies","last","union","makeLineColumnIndex","column","assertParser","assertNumber","assertRegexp","assertFunction","assertString","repeat","amount","leftPad","pad","rangeFromIndexAndOffsets","to","formatGot","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkSize","chunks","chunkIndex","toChunks","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","re","lastIndexOf","anchoredRegexp","parsers","numParsers","accum","seqMap","mapper","results","alt","sepBy1","separator","rs","group","anchored","fullMatch","groupMatch","desc","type","alternative","wrap","leftParser","rightParser","middle","thru","wrapper","tieWith","assertArray","tie","prevResult","atMost","fn","contramap","promap","g","mark","end","notFollowedBy","reply","fallback","ap","of","cr","lf","newline"],"mappings":"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AC,QAAc,MAAO,CAAC,YAAkB,MAAO,CAAC,SAAe,KAAM,CAAC,SAAe,KAAM,CAAC,SAAe,MAAO,CAAC,SAAe,MAAO,CAAC,QAAc,KAAM,CAAC,WAAiB,KAAM,CAAC,WAAiB,KAAM,CAAC,WAAiB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,SAAe,KAAM,CAAC,SAAe,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,aAAmB,KAAM,CAAC,YAAkB,KAAM,CAAC,aAAmB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,SAAe,KAAM,CAAC,SAAe,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,WAAiB,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,WAAiB,KAAM,CAAC,UAAgB,KAAM,CAAC,SAAe,MAAO,CAAC,SAAe,KAAM,CAAC,UAAgB,KAAM,CAAC,SAAe,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,SAAe,MAAO,CAAC,aAAmB,KAAM,CAAC,SAAe,KAAM,CAAC,WAAiB,KAAM,CAAC,SAAe,KAAM,CAAC,UAAgB,KAAM,CAAC,UAAgB,KAAM,CAAC,WAAiB,KAAM,CAAC,WAAiB,KAAM,CAAC,WAAiB,KAAM,CAAC,WAAiB,KAAM,CAAC,WAAiB,KAAM,CA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","file":"app.1694142c5a11f24c09cc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([191,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nexport {};","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { Record } from \"../fable-library.3.2.11/Types.js\";\r\nimport { record_type, bool_type, list_type, class_type, option_type, string_type } from \"../fable-library.3.2.11/Reflection.js\";\r\n\r\nexport class XmlElement extends Record {\r\n    constructor(Namespace, Name, Attributes, Content, Children, SelfClosing, IsTextNode, IsComment) {\r\n        super();\r\n        this.Namespace = Namespace;\r\n        this.Name = Name;\r\n        this.Attributes = Attributes;\r\n        this.Content = Content;\r\n        this.Children = Children;\r\n        this.SelfClosing = SelfClosing;\r\n        this.IsTextNode = IsTextNode;\r\n        this.IsComment = IsComment;\r\n    }\r\n}\r\n\r\nexport function XmlElement$reflection() {\r\n    return record_type(\"Fable.SimpleXml.AST.XmlElement\", [], XmlElement, () => [[\"Namespace\", option_type(string_type)], [\"Name\", string_type], [\"Attributes\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, string_type])], [\"Content\", string_type], [\"Children\", list_type(XmlElement$reflection())], [\"SelfClosing\", bool_type], [\"IsTextNode\", bool_type], [\"IsComment\", bool_type]]);\r\n}\r\n\r\nexport class XmlDocument extends Record {\r\n    constructor(Declaration, Root) {\r\n        super();\r\n        this.Declaration = Declaration;\r\n        this.Root = Root;\r\n    }\r\n}\r\n\r\nexport function XmlDocument$reflection() {\r\n    return record_type(\"Fable.SimpleXml.AST.XmlDocument\", [], XmlDocument, () => [[\"Declaration\", option_type(class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, string_type]))], [\"Root\", XmlElement$reflection()]]);\r\n}\r\n\r\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { clear, int32ToString } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\n\r\nexport class StringBuilder {\r\n    constructor(value, capacity) {\r\n        this.buf = [];\r\n        if (!isNullOrEmpty(value)) {\r\n            void (this.buf.push(value));\r\n        }\r\n    }\r\n    toString() {\r\n        const __ = this;\r\n        return join(\"\", __.buf);\r\n    }\r\n}\r\n\r\nexport function StringBuilder$reflection() {\r\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\r\n    return new StringBuilder(value, capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z721C83C5(value) {\r\n    return StringBuilder_$ctor_Z18115A39(value, 16);\r\n}\r\n\r\nexport function StringBuilder_$ctor() {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\r\n}\r\n\r\nexport function StringBuilder__Append_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_244C7CD6(x, c) {\r\n    void (x.buf.push(c));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z524259A4(x, o) {\r\n    void (x.buf.push(int32ToString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_5E38073B(x, o) {\r\n    void (x.buf.push(o.toString()));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_4E60E31B(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_695F1130(x, cs) {\r\n    void (x.buf.push(cs.join('')));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_43A65C09(x, s) {\r\n    void (x.buf.push(toString(s)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\r\n    void (x.buf.push(format(fmt, o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine(x) {\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__get_Length(x) {\r\n    let len = 0;\r\n    for (let i = x.buf.length - 1; i >= 0; i--) {\r\n        len = ((len + x.buf[i].length) | 0);\r\n    }\r\n    return len | 0;\r\n}\r\n\r\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\r\n    return substring(toString(x), firstIndex, length);\r\n}\r\n\r\nexport function StringBuilder__Clear(x) {\r\n    clear(x.buf);\r\n    return x;\r\n}\r\n\r\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) ? predicate(array[count]) : false) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) ? predicate(array[count]) : false) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    void (array.push(x));\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            void ((index_1 = (i | 0), array.splice(index_1, 0, x)));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = array.indexOf(item_1, 0);\r\n    if (i > -1) {\r\n        void (array.splice(i, 1));\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = array.findIndex(predicate);\r\n        if (i > -1) {\r\n            void (array.splice(i, 1));\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = array.indexOf(item_1, start_1);\r\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            void (res.push(y));\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every(((y) => (1 === y))))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, 0) | 0;\r\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort(((x, y) => comparer.Compare(x, y)));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array((len1 * len2));\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                void (res.push(x));\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            void (result.push(slice));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if (index < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\r\n    }\r\n    if (index > array.length) {\r\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) ? (result === 0) : false) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(comparer, array1, array2) {\r\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            void (result.push(slice));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const lenInner = arrays_1[0].length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\r\n\r\nexport const SR_inputListWasEmpty = \"List was empty\";\r\n\r\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    void fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    void fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node;\r\n    const t = new FSharpList(state, void 0);\r\n    root.tail = t;\r\n    node = t;\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        const t = new FSharpList(mapping(i, x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const t = new FSharpList(mapping(x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        const t = new FSharpList(mapping(x, y), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\r\n}\r\n\r\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\r\n\r\nexport function HashIdentity_FromFunctions(hash, eq) {\r\n    return {\r\n        Equals(x, y) {\r\n            return eq(x, y);\r\n        },\r\n        GetHashCode(x_1) {\r\n            return hash(x_1);\r\n        },\r\n    };\r\n}\r\n\r\nexport function HashIdentity_Structural() {\r\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\r\n}\r\n\r\nexport function HashIdentity_Reference() {\r\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\r\n}\r\n\r\nexport function ComparisonIdentity_FromFunction(comparer) {\r\n    return {\r\n        Compare(x, y) {\r\n            return comparer(x, y);\r\n        },\r\n    };\r\n}\r\n\r\nexport function ComparisonIdentity_Structural() {\r\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\r\n}\r\n\r\n","import { structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            resource.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        void StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            e.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                inner.Dispose();\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                outer.Dispose();\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                inner_1.Dispose();\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            e.Dispose();\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) ? b1 : false) ? b2 : false) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            matchValue.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            copyOfStruct.Dispose();\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    void fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    void fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            try {\r\n                tupledArg_1[1].Dispose();\r\n            }\r\n            finally {\r\n                tupledArg_1[2].Dispose();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport function cache(xs) {\r\n    let cached = false;\r\n    const xsCache = [];\r\n    return delay(() => {\r\n        if (!cached) {\r\n            cached = true;\r\n            return map((x) => {\r\n                void (xsCache.push(x));\r\n                return x;\r\n            }, xs);\r\n        }\r\n        else {\r\n            return xsCache;\r\n        }\r\n    });\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, xs) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            for (let i = 1; i <= count; i++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            e.Dispose();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: xs\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: xs\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\n","import * as Unicode from \"./Unicode.13.0.0.js\";\nfunction getCategoryFunc() {\n    // unpack Unicode codepoint ranges (delta encoded) and general categories\n    const offset = 35; // offsets unprintable characters\n    const a1 = [...Unicode.rangeDeltas].map((ch) => { var _a; return ((_a = ch.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) - offset; });\n    const a2 = [...Unicode.categories].map((ch) => { var _a; return ((_a = ch.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) - offset; });\n    const codepoints = new Uint32Array(a1);\n    const categories = new Uint8Array(a2);\n    for (let i = 1; i < codepoints.length; ++i) {\n        codepoints[i] += codepoints[i - 1];\n    }\n    // binary search in unicode ranges\n    return (cp) => {\n        let hi = codepoints.length;\n        let lo = 0;\n        while (hi - lo > 1) {\n            const mid = Math.floor((hi + lo) / 2);\n            const test = codepoints[mid];\n            if (cp < test) {\n                hi = mid;\n            }\n            else if (cp === test) {\n                hi = lo = mid;\n                break;\n            }\n            else if (test < cp) {\n                lo = mid;\n            }\n        }\n        return categories[lo];\n    };\n}\nconst isControlMask = 1 << 14 /* Control */;\nconst isDigitMask = 1 << 8 /* DecimalDigitNumber */;\nconst isLetterMask = 0\n    | 1 << 0 /* UppercaseLetter */\n    | 1 << 1 /* LowercaseLetter */\n    | 1 << 2 /* TitlecaseLetter */\n    | 1 << 3 /* ModifierLetter */\n    | 1 << 4 /* OtherLetter */;\nconst isLetterOrDigitMask = isLetterMask | isDigitMask;\nconst isUpperMask = 1 << 0 /* UppercaseLetter */;\nconst isLowerMask = 1 << 1 /* LowercaseLetter */;\nconst isNumberMask = 0\n    | 1 << 8 /* DecimalDigitNumber */\n    | 1 << 9 /* LetterNumber */\n    | 1 << 10 /* OtherNumber */;\nconst isPunctuationMask = 0\n    | 1 << 18 /* ConnectorPunctuation */\n    | 1 << 19 /* DashPunctuation */\n    | 1 << 20 /* OpenPunctuation */\n    | 1 << 21 /* ClosePunctuation */\n    | 1 << 22 /* InitialQuotePunctuation */\n    | 1 << 23 /* FinalQuotePunctuation */\n    | 1 << 24 /* OtherPunctuation */;\nconst isSeparatorMask = 0\n    | 1 << 11 /* SpaceSeparator */\n    | 1 << 12 /* LineSeparator */\n    | 1 << 13 /* ParagraphSeparator */;\nconst isSymbolMask = 0\n    | 1 << 25 /* MathSymbol */\n    | 1 << 26 /* CurrencySymbol */\n    | 1 << 27 /* ModifierSymbol */\n    | 1 << 28 /* OtherSymbol */;\nconst isWhiteSpaceMask = 0\n    | 1 << 11 /* SpaceSeparator */\n    | 1 << 12 /* LineSeparator */\n    | 1 << 13 /* ParagraphSeparator */;\nconst unicodeCategoryFunc = getCategoryFunc();\nfunction charCodeAt(s, index) {\n    if (index >= 0 && index < s.length) {\n        return s.charCodeAt(index);\n    }\n    else {\n        throw new Error(\"Index out of range.\");\n    }\n}\nexport const getUnicodeCategory = (s) => getUnicodeCategory2(s, 0);\nexport const isControl = (s) => isControl2(s, 0);\nexport const isDigit = (s) => isDigit2(s, 0);\nexport const isLetter = (s) => isLetter2(s, 0);\nexport const isLetterOrDigit = (s) => isLetterOrDigit2(s, 0);\nexport const isUpper = (s) => isUpper2(s, 0);\nexport const isLower = (s) => isLower2(s, 0);\nexport const isNumber = (s) => isNumber2(s, 0);\nexport const isPunctuation = (s) => isPunctuation2(s, 0);\nexport const isSeparator = (s) => isSeparator2(s, 0);\nexport const isSymbol = (s) => isSymbol2(s, 0);\nexport const isWhiteSpace = (s) => isWhiteSpace2(s, 0);\nexport const isHighSurrogate = (s) => isHighSurrogate2(s, 0);\nexport const isLowSurrogate = (s) => isLowSurrogate2(s, 0);\nexport const isSurrogate = (s) => isSurrogate2(s, 0);\nexport function getUnicodeCategory2(s, index) {\n    const cp = charCodeAt(s, index);\n    return unicodeCategoryFunc(cp);\n}\nexport function isControl2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isControlMask) !== 0;\n}\nexport function isDigit2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isDigitMask) !== 0;\n}\nexport function isLetter2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isLetterMask) !== 0;\n}\nexport function isLetterOrDigit2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isLetterOrDigitMask) !== 0;\n}\nexport function isUpper2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isUpperMask) !== 0;\n}\nexport function isLower2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isLowerMask) !== 0;\n}\nexport function isNumber2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isNumberMask) !== 0;\n}\nexport function isPunctuation2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isPunctuationMask) !== 0;\n}\nexport function isSeparator2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isSeparatorMask) !== 0;\n}\nexport function isSymbol2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isSymbolMask) !== 0;\n}\nexport function isWhiteSpace2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    if ((test & isWhiteSpaceMask) !== 0) {\n        return true;\n    }\n    const cp = charCodeAt(s, index);\n    return (0x09 <= cp && cp <= 0x0D) || cp === 0x85 || cp === 0xA0;\n}\nexport function isHighSurrogate2(s, index) {\n    const cp = charCodeAt(s, index);\n    return (0xD800 <= cp && cp <= 0xDBFF);\n}\nexport function isLowSurrogate2(s, index) {\n    const cp = charCodeAt(s, index);\n    return (0xDC00 <= cp && cp <= 0xDFFF);\n}\nexport function isSurrogate2(s, index) {\n    const cp = charCodeAt(s, index);\n    return (0xD800 <= cp && cp <= 0xDFFF);\n}\nexport function isSurrogatePair(s, index) {\n    return typeof index === \"number\"\n        ? isHighSurrogate2(s, index) && isLowSurrogate2(s, index + 1)\n        : isHighSurrogate(s) && isLowSurrogate(index);\n}\nexport function parse(input) {\n    if (input.length === 1) {\n        return input[0];\n    }\n    else {\n        throw new Error(\"String must be exactly one character long.\");\n    }\n}\n","// Unicode 13.0.0 codepoint ranges (delta encoded) and general categories.\n// Integer delta values are offset by 35 and stored as Unicode characters.\nexport const rangeDeltas = \"#C$&$&$$$$$$%-%&%=$$$$$$=$$$$D$$'$$$$$$$$$$$$%$$%$$$$&$:$*;$+$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%$$$$$$$$$$$$$$$%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%$$$$&%$$$%$&%'$%$&&%$%$$$$$%$$%$$%$&$$$%%$$&'$$$$$$$$$$$$$$$$$$$$$$$$%$$$$$$$$$$$$$$$$$%$$$$$&$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*%$%%$$'$$$$$$$$h$>5'/1(*$$$4$$$$$$$$%$&$$'%$$&$$$%$4$,F$%&&$$$$$$$$$$$$$$$$$$$$$$$($$$$$%%VS$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$(%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%$$$$$$$$$$$$%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$I%$)L$$%%$$P$$$%$%$$+>''%.)&%$%%.$$$%C$-8-'%$$$*$$)%%$'%-&%$1$$$$A>%|Ŭ$'%*$$$'%L$'%D$'%*$$$'%2$\\\\$'%f%&,7&3-)y%)%$ʏ$$4$=$$&n&&+*0$'&.5&%,5%/0$&$%/W%$*+$%.&$&$$$%-)-))$'&$$-)F$X*(%E$$(i-B$&'%&'%$)&'$&%-A%(.O'=)-$&E:%%$%%X$$$*$$$$%+)-%$-)-)*$)%1$%b'$R$$($$($%*'-*-,,&%$A$'%%$&%-O$$%&$$&%+'G++%%&(-&&-A)%,*N%&++&$0$*'$)$%$%$(Ob0$EH]$($$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$,$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$,+)%)%++++)%)%+$$$$$$$$++1%++++++($%'$$$&&$%'$&'%%'$&+(&%&$%'$%$.()%$$$%$$$+$$($,$$'%&$$$.$$$-$($-$$%)&$$$-&$$$0&C30'$&/2%$'$%$&%&$$$%$()$$$$$$'$$'$'$%%%($'$$%$$3F$$'$%'((%'$%$%$*$B%%$$$Bį+$$$$7%*$$t$A<K)h<.8_q9Ú$,$Y+$ě$$$$$$$$$$$$$$AO($$B$$$$$$$$$$3ģ¦$$$$$$$$$$$$$$$$$$$$$$b$$$$C$$ĥS8%)J%C$R$R$$$&%$$$$$$'$$%$)%&$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%)$$$$&$$('$%I$$($%[*$$1$:,*$*$*$*$*$*$*$*$C%$$$$&$$$$$,$%$$$$%$$$$$$$$$$($-%'$$$0%$P=$|/ù=/'$&$$$$$$$$$$$$$$%$$$$$$$$$$%$,'%$(%&$$$%$y%%%%$$}$&$(N$$%'-CG/3B$-A+$2C-J2ţ᧣c删&8$Қ&Z,K)%į$&3-%7$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$&$-$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%%i-%)+:,%$$$$$$$$$$$$$&$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$+$$$$%$$$$$$$$$$%$$$$$$$$&$$$$$$$$$$$$$$$$$$$$($($$$$$$$$$$$%$$'$$$M$$$%$*$&$'$:%%$'$&)%$$)W'+%U3%+%-)5)&$$%$-?+%:.%.$@&&$R$%'%%&0$$-'%($$,-($L)%%%%,&$+$$%-%'3$)&$$$$U$$&%%(%$$$;%$%.$%%%$%$$-)%)%),*$*$N$',$%'sF%$%$%$$$%-)⯇/:'T'ࠣᤣƑ%I*/(($$-$0$($$$%$%$34Ǝ$$3c%YK/$$%3*$$$)3$%%$$$$$$$$$$$$$$$$%$$'&&$'$$$$$$$&$$&$$$%'($ª%$$&$&$$$$$$%-%&%=$$$$$$=$$$$$$$$$%-$P%B&)%)%)%&&%$$$%$$'%-&%%/$=$6$%$2%1E(&'P&,X'4%&$0&$RP$¥@&T2$>'C',7$+$(I((A$$G'+$(MKKq%-)G'G'K+W.$³Ś,9-+»)%$$O$%&$%:$$+:%*B+,S6$%((9)&$=($c['%%3%Q$&$%(''$&$@%&'$,*,*@%$@&C+$?%'(*,Y&*9%+6(+5*'/*slZV0V*)G'+-ŉB$M$%$%%q@-$+9.'(y8*7:,$$$X2*'7-2&$P&'%%%$'.$%<*-)&G($+$-'$%$+F$%$,%$S&,%'''$$$-$$$&$7.5$<&&%$$%)$d*$$$'$2$-$)R$&+(-)%%$+%%%9$*$%$($%$%$'%%%&%$)$((%%*&(®X&+%&$$'(-%$$$&AS&)$$'%$%%$$+-ÉR&'%'%$%:'%ES&+%$$%&$.-)06N$$$%)$$$*-Y>%&%'$('-%&$ãO&,$%$CC-,/+%$%+$%$;)$%%%$$$$$$$&,-i+%J&'%%'$$$$$>$-K)$$'+$+$)%&Q0$%&$(@\\\\Ī,$H$*$)$$$(--6&%A%9$$*$%$%l*$%$I)&$$%$*$$+-))$%$C($%$%$$$$*-ř6%%%Ú$28+'40$ν$(.ç૟ђ$,࿪ɪ⇜ɜ*B$-'%A%($-S*(''$$--$*$8(6˓CC:'n'$$Z*'0c%$$$.%1᠛+ӹM,⌚łT&4'+Ưध(0&,*-%$%$'፿ę-J%_%&&)++%*A'^:e&$½7/z,<ª===*$5==$$%%$%%%'$+'$$$*$.==%$'%+$*$=%$'$($$&*$============?%<$<$)<$<$)<$<$)<$<$)<$<$)$$%UȣZ'U+$1$%(2($2ճ*$4%*$%$(øP&**%-'$$ƓO'-($ԣè%,*LEE*$'-'%̴^$&$'oP$2å'$>$%$$%$$-$'$$$$)$'$$$$$$&$%$$%$$$$$$$$$$%$$%'$*$'$'$$$-$4(&$($4W%ıO'/2%2$2$H-0Ä[@0O',*%1)½Ğ(˻+0&0&/|*/7/'[+-)K+A%%q$u$ª/1%(&&(*,<**,&0*L¶$ZH-Щ꜁Eၘ.ā%ᚥ1ᵔూɁ؅፮򮳙$A£ē︳𐀡%𐀡\";\nexport const categoriesn","import { class_type } from \"./.fable/fable-library.3.2.11/Reflection.js\";\r\n\r\nexport class StringReader {\r\n    constructor(str) {\r\n        this.str = str;\r\n        this.pos = 0;\r\n    }\r\n}\r\n\r\nexport function StringReader$reflection() {\r\n    return class_type(\"Fable.IO.StringReader\", void 0, StringReader);\r\n}\r\n\r\nexport function StringReader_$ctor_Z721C83C5(str) {\r\n    return new StringReader(str);\r\n}\r\n\r\nexport function StringReader__get_IsEndOfString(x) {\r\n    return x.pos >= x.str.length;\r\n}\r\n\r\nexport function StringReader__PeekChar(x) {\r\n    if (!StringReader__get_IsEndOfString(x)) {\r\n        return x.str[x.pos];\r\n    }\r\n    else {\r\n        return String.fromCharCode(-1);\r\n    }\r\n}\r\n\r\nexport function StringReader__ReadChar(x) {\r\n    if (!StringReader__get_IsEndOfString(x)) {\r\n        const char = x.str[x.pos];\r\n        x.pos = ((x.pos + 1) | 0);\r\n        return char;\r\n    }\r\n    else {\r\n        return String.fromCharCode(-1);\r\n    }\r\n}\r\n\r\nexport function StringReader__ReadNChar_Z524259A4(x, count) {\r\n    if (!StringReader__get_IsEndOfString(x)) {\r\n        const str = x.str.slice(x.pos, (x.pos + count) + 1);\r\n        x.pos = ((x.pos + str.length) | 0);\r\n        return str;\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\n","import { Record } from \"../Types.js\";\r\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\r\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\r\nimport { copy, initialize, map, fill } from \"../Array.js\";\r\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\r\nimport { int32ToString } from \"../Util.js\";\r\nimport { isNullOrEmpty, join } from \"../String.js\";\r\n\r\nexport class BigNat extends Record {\r\n    constructor(bound, digits) {\r\n        super();\r\n        this.bound = (bound | 0);\r\n        this.digits = digits;\r\n    }\r\n}\r\n\r\nexport function BigNat$reflection() {\r\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\r\n    BigNatModule_FFT_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_leastBounding2Power(b) {\r\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\r\n        findBounding2Power:\r\n        while (true) {\r\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\r\n            if (b_1 <= tp) {\r\n                return [tp, i];\r\n            }\r\n            else {\r\n                b_1_mut = b_1;\r\n                tp_mut = (tp * 2);\r\n                i_mut = (i + 1);\r\n                continue findBounding2Power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return findBounding2Power(b, 1, 0);\r\n}\r\n\r\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\r\n\r\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\r\n\r\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\r\n\r\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\r\n\r\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\r\n\r\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\r\n\r\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\r\n\r\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\r\n\r\nexport const BigNatModule_FFT_Fp_p = 2013265921;\r\n\r\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\r\n\r\nexport function BigNatModule_FFT_Fp_toInt(x) {\r\n    return ~(~x);\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\r\n    return x >>> 0;\r\n}\r\n\r\nexport const BigNatModule_FFT_Fp_mzero = 0;\r\n\r\nexport const BigNatModule_FFT_Fp_mone = 1;\r\n\r\nexport const BigNatModule_FFT_Fp_mtwo = 2;\r\n\r\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpow:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_Fp_mpow;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpowL:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (equals(n, fromBits(0, 0, false))) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = op_Division(n, fromBits(2, 0, false));\r\n            continue BigNatModule_FFT_Fp_mpowL;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\r\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_minv(x) {\r\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\r\n    let x_1, x_3, y_5;\r\n    if (n === 1) {\r\n        res[offset] = u[mu];\r\n    }\r\n    else {\r\n        const halfN = (~(~(n / 2))) | 0;\r\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        const offsetHalfN = (offset + halfN) | 0;\r\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\r\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\r\n        let wj = BigNatModule_FFT_Fp_mone;\r\n        for (let j = 0; j <= (halfN - 1); j++) {\r\n            const even = res[offset + j];\r\n            const odd = res[offsetHalfN + j];\r\n            res[offset + j] = ((even + ((x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - ((x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            wj = ((y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\r\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\r\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\r\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\r\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_maxTwoPower = 29;\r\n\r\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\r\n\r\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\r\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array));\r\n}\r\n\r\nexport function BigNatModule_FFT_padTo(n, u) {\r\n    const uBound = u.length | 0;\r\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\r\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\r\n    const bigK = patternInput[0] | 0;\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\r\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\r\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\r\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array)), Int32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\r\n\r\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\r\n\r\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\r\n\r\nexport function BigNatModule_bound(n) {\r\n    return n.bound;\r\n}\r\n\r\nexport function BigNatModule_setBound(n, v) {\r\n    n.bound = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_coeff(n, i) {\r\n    return n.digits[i];\r\n}\r\n\r\nexport function BigNatModule_coeff64(n, i) {\r\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\r\n}\r\n\r\nexport function BigNatModule_setCoeff(n, i, v) {\r\n    n.digits[i] = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_pow64(x_mut, n_mut) {\r\n    BigNatModule_pow64:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return fromBits(1, 0, false);\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = op_Multiply(x, x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow64;\r\n        }\r\n        else {\r\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_pow32(x_mut, n_mut) {\r\n    BigNatModule_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_hash(n) {\r\n    let res = 0;\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        res = ((n.digits[i] + (res << 3)) | 0);\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function BigNatModule_maxInt(a, b) {\r\n    if (a < b) {\r\n        return b | 0;\r\n    }\r\n    else {\r\n        return a | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_minInt(a, b) {\r\n    if (a < b) {\r\n        return a | 0;\r\n    }\r\n    else {\r\n        return b | 0;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_baseBits = 24;\r\n\r\nexport const BigNatModule_baseN = 16777216;\r\n\r\nexport const BigNatModule_baseMask = 16777215;\r\n\r\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\r\n\r\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\r\n\r\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\r\n\r\nexport const BigNatModule_baseMask32A = 16777215;\r\n\r\nexport const BigNatModule_baseMask32B = 255;\r\n\r\nexport const BigNatModule_baseShift32B = 24;\r\n\r\nexport const BigNatModule_baseMask64A = 16777215;\r\n\r\nexport const BigNatModule_baseMask64B = 16777215;\r\n\r\nexport const BigNatModule_baseMask64C = 65535;\r\n\r\nexport const BigNatModule_baseShift64B = 24;\r\n\r\nexport const BigNatModule_baseShift64C = 48;\r\n\r\nexport function BigNatModule_divbase(x) {\r\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\r\n}\r\n\r\nexport function BigNatModule_modbase(x) {\r\n    return x & BigNatModule_baseMask;\r\n}\r\n\r\nexport function BigNatModule_createN(b) {\r\n    return new BigNat(b, new Int32Array(b));\r\n}\r\n\r\nexport function BigNatModule_copyN(x) {\r\n    return new BigNat(x.bound, copy(x.digits));\r\n}\r\n\r\nexport function BigNatModule_normN(n) {\r\n    const findLeastBound = (na_mut, i_mut) => {\r\n        findLeastBound:\r\n        while (true) {\r\n            const na = na_mut, i = i_mut;\r\n            if ((i === -1) ? true : (na[i] !== 0)) {\r\n                return (i + 1) | 0;\r\n            }\r\n            else {\r\n                na_mut = na;\r\n                i_mut = (i - 1);\r\n                continue findLeastBound;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\r\n    n.bound = (bound | 0);\r\n    return n;\r\n}\r\n\r\nexport const BigNatModule_boundInt = 2;\r\n\r\nexport const BigNatModule_boundInt64 = 3;\r\n\r\nexport const BigNatModule_boundBase = 1;\r\n\r\nexport function BigNatModule_embed(x) {\r\n    const x_1 = ((x < 0) ? 0 : x) | 0;\r\n    if (x_1 < BigNatModule_baseN) {\r\n        const r = BigNatModule_createN(1);\r\n        r.digits[0] = (x_1 | 0);\r\n        return BigNatModule_normN(r);\r\n    }\r\n    else {\r\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\r\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\r\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\r\n        }\r\n        return BigNatModule_normN(r_1);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_embed64(x) {\r\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\r\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\r\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\r\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_eval32(n) {\r\n    if (n.bound === 1) {\r\n        return n.digits[0] | 0;\r\n    }\r\n    else {\r\n        let acc = 0;\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\r\n        }\r\n        return acc | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_eval64(n) {\r\n    if (n.bound === 1) {\r\n        return fromInteger(n.digits[0], false, 2);\r\n    }\r\n    else {\r\n        let acc = fromBits(0, 0, false);\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\r\n        }\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_one = BigNatModule_embed(1);\r\n\r\nexport const BigNatModule_zero = BigNatModule_embed(0);\r\n\r\nexport function BigNatModule_restrictTo(d, n) {\r\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\r\n}\r\n\r\nexport function BigNatModule_shiftUp(d, n) {\r\n    const m = BigNatModule_createN(n.bound + d);\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        m.digits[i + d] = (n.digits[i] | 0);\r\n    }\r\n    return m;\r\n}\r\n\r\nexport function BigNatModule_shiftDown(d, n) {\r\n    if ((n.bound - d) <= 0) {\r\n        return BigNatModule_zero;\r\n    }\r\n    else {\r\n        const m = BigNatModule_createN(n.bound - d);\r\n        for (let i = 0; i <= (m.bound - 1); i++) {\r\n            m.digits[i] = (n.digits[i + d] | 0);\r\n        }\r\n        return m;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_degree(n) {\r\n    return n.bound - 1;\r\n}\r\n\r\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_addP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) + ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n            i_mut = (i + 1);\r\n            n_mut = n;\r\n            c_mut = BigNatModule_divbase(x);\r\n            p_mut = p;\r\n            q_mut = q;\r\n            r_mut = r;\r\n            continue BigNatModule_addP;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_add(p, q) {\r\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    BigNatModule_addP(0, rbound, 0, p, q, r);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_subP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) - ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            if (x > 0) {\r\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = BigNatModule_divbase(x);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n            else {\r\n                const x_1 = (x + BigNatModule_baseN) | 0;\r\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = (BigNatModule_divbase(x_1) - 1);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n        }\r\n        else {\r\n            return c !== 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_sub(p, q) {\r\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\r\n        return BigNatModule_embed(0);\r\n    }\r\n    else {\r\n        return BigNatModule_normN(r);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_isZero(p) {\r\n    return p.bound === 0;\r\n}\r\n\r\nexport function BigNatModule_IsZero(p) {\r\n    return BigNatModule_isZero(p);\r\n}\r\n\r\nexport function BigNatModule_isOne(p) {\r\n    if (p.bound === 1) {\r\n        return p.digits[0] === 1;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_equal(p, q) {\r\n    if (p.bound === q.bound) {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return true;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\r\n    if ((p.bound + pn) < (q.bound + qn)) {\r\n        return -1;\r\n    }\r\n    else if ((p.bound + pn) > (q.bound + pn)) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\r\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\r\n                    if (pai === qai) {\r\n                        pa_mut = pa;\r\n                        qa_mut = qa;\r\n                        i_mut = (i - 1);\r\n                        continue check;\r\n                    }\r\n                    else if (pai < qai) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_compare(p, q) {\r\n    if (p.bound < q.bound) {\r\n        return -1;\r\n    }\r\n    else if (p.bound > q.bound) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else if (pa[i] < qa[i]) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_lt(p, q) {\r\n    return BigNatModule_compare(p, q) === -1;\r\n}\r\n\r\nexport function BigNatModule_gt(p, q) {\r\n    return BigNatModule_compare(p, q) === 1;\r\n}\r\n\r\nexport function BigNatModule_lte(p, q) {\r\n    return BigNatModule_compare(p, q) !== 1;\r\n}\r\n\r\nexport function BigNatModule_gte(p, q) {\r\n    return BigNatModule_compare(p, q) !== -1;\r\n}\r\n\r\nexport function BigNatModule_min(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return b;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_max(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return b;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\r\n    BigNatModule_contributeArr:\r\n    while (true) {\r\n        const a = a_mut, i = i_mut, c = c_mut;\r\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\r\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\r\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\r\n        a[i] = (x_3 | 0);\r\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\r\n            a_mut = a;\r\n            i_mut = (i + 1);\r\n            c_mut = c_1;\r\n            continue BigNatModule_contributeArr;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_scale(k, p) {\r\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\r\n    const k_1 = fromInteger(k, false, 2);\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\r\n    const r = BigNatModule_createN(2);\r\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\r\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\r\n    BigNatModule_mulSchoolBookCarry:\r\n    while (true) {\r\n        const r = r_mut, c = c_mut, k = k_mut;\r\n        if (compare(c, fromBits(0, 0, false)) > 0) {\r\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\r\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n            r_mut = r;\r\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\r\n            k_mut = (k + 1);\r\n            continue BigNatModule_mulSchoolBookCarry;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\r\n    const bp = BigNatModule_bound(p) | 0;\r\n    const r = BigNatModule_createN(bp + 1);\r\n    const q_1 = fromInteger(q, false, 2);\r\n    let c = fromBits(0, 0, false);\r\n    for (let i = 0; i <= (bp - 1); i++) {\r\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\r\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n        c = op_Division(rak, BigNatModule_baseNi64);\r\n    }\r\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\r\n    const r = BigNatModule_createN(p.bound + q.bound);\r\n    const ra = r.digits;\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        const pai = fromInteger(p.digits[i], false, 2);\r\n        let c = fromBits(0, 0, false);\r\n        let k = i;\r\n        for (let j = 0; j <= (q.bound - 1); j++) {\r\n            const qaj = fromInteger(q.digits[j], false, 2);\r\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\r\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\r\n            c = op_Division(rak, BigNatModule_baseNi64);\r\n            k = ((k + 1) | 0);\r\n        }\r\n        BigNatModule_mulSchoolBookCarry(r, c, k);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBook(p, q) {\r\n    const pSmall = BigNatModule_bound(p) === 1;\r\n    const qSmall = BigNatModule_bound(q) === 1;\r\n    if (pSmall ? qSmall : false) {\r\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\r\n    }\r\n    else if (pSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\r\n    }\r\n    else if (qSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\r\n    }\r\n}\r\n\r\nexport class BigNatModule_encoding extends Record {\r\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\r\n        super();\r\n        this.bigL = (bigL | 0);\r\n        this.twoToBigL = (twoToBigL | 0);\r\n        this.k = (k | 0);\r\n        this.bigK = (bigK | 0);\r\n        this.bigN = (bigN | 0);\r\n        this.split = (split | 0);\r\n        this.splits = splits;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encoding$reflection() {\r\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\r\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\r\n}\r\n\r\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\r\n\r\nexport function BigNatModule_calculateTableTow(bigL) {\r\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\r\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\r\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\r\n}\r\n\r\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\r\n    const selectFrom = (i_mut) => {\r\n        selectFrom:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\r\n                i_mut = (i + 1);\r\n                continue selectFrom;\r\n            }\r\n            else {\r\n                return BigNatModule_table[i];\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (bitsRes >= BigNatModule_table[0].bigN) {\r\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\r\n    }\r\n    else {\r\n        return selectFrom(0);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\r\n\r\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\r\n\r\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\r\n\r\nexport function BigNatModule_wordBits(word) {\r\n    const hi = (k_mut) => {\r\n        hi:\r\n        while (true) {\r\n            const k = k_mut;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\r\n                return k | 0;\r\n            }\r\n            else {\r\n                k_mut = (k - 1);\r\n                continue hi;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return hi(BigNatModule_baseBits) | 0;\r\n}\r\n\r\nexport function BigNatModule_bits(u) {\r\n    if (u.bound === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_extractBits(n, enc, bi) {\r\n    let z, i, z_1, i_1, z_2, i_2;\r\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\r\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\r\n    if (biw !== bjw) {\r\n        const xbit = (bi % BigNatModule_baseBits) | 0;\r\n        return (((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0))) >> xbit) | (((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0))) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n    else {\r\n        return ((((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0))) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encodePoly(enc, n) {\r\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\r\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\r\n    const encoder = (i_mut, bi_mut) => {\r\n        encoder:\r\n        while (true) {\r\n            const i = i_mut, bi = bi_mut;\r\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\r\n            }\r\n            else {\r\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\r\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\r\n                i_mut = (i + 1);\r\n                bi_mut = (bi + enc.bigL);\r\n                continue encoder;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    encoder(0, 0);\r\n    return poly;\r\n}\r\n\r\nexport function BigNatModule_decodeResultBits(enc, poly) {\r\n    let n = 0;\r\n    for (let i = 0; i <= (poly.length - 1); i++) {\r\n        if (poly[i] !== BigNatModule_FFT_mzero) {\r\n            n = (i | 0);\r\n        }\r\n    }\r\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\r\n}\r\n\r\nexport function BigNatModule_decodePoly(enc, poly) {\r\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    const evaluate = (i_mut, j_mut, d_mut) => {\r\n        evaluate:\r\n        while (true) {\r\n            const i = i_mut, j = j_mut, d = d_mut;\r\n            if (i === enc.bigK) {\r\n            }\r\n            else {\r\n                if (j >= rbound) {\r\n                }\r\n                else {\r\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\r\n                }\r\n                const d_1 = (d + enc.bigL) | 0;\r\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\r\n                i_mut = (i + 1);\r\n                j_mut = patternInput[0];\r\n                d_mut = patternInput[1];\r\n                continue evaluate;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    evaluate(0, 0, 0);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_quickMulUsingFft(u, v) {\r\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\r\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\r\n}\r\n\r\nexport const BigNatModule_minDigitsKaratsuba = 16;\r\n\r\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\r\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\r\n        const k = (~(~(bmax / 2))) | 0;\r\n        const a0 = BigNatModule_restrictTo(k, p);\r\n        const a1 = BigNatModule_shiftDown(k, p);\r\n        const b0 = BigNatModule_restrictTo(k, q);\r\n        const b1 = BigNatModule_shiftDown(k, q);\r\n        const q0 = mul(a0, b0);\r\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\r\n        const q2 = mul(a1, b1);\r\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBook(p, q);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulKaratsuba(x, y) {\r\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\r\n}\r\n\r\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\r\n\r\nexport function BigNatModule_mul(p, q) {\r\n    return BigNatModule_mulSchoolBook(p, q);\r\n}\r\n\r\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo <= x_1[j + n]) {\r\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    void BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleSub(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\r\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    void BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleAdd(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_removeFactor(x, a, n) {\r\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\r\n    const degx = patternInput[1] | 0;\r\n    const dega = patternInput[0] | 0;\r\n    if (degx < (dega + n)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const patternInput_1 = [a.digits, x.digits];\r\n        const xa = patternInput_1[1];\r\n        const aa = patternInput_1[0];\r\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\r\n        if (f === 0) {\r\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return f | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_divmod(b, a) {\r\n    if (BigNatModule_isZero(a)) {\r\n        throw (new Error());\r\n    }\r\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\r\n        return [BigNatModule_zero, b];\r\n    }\r\n    else {\r\n        const x = BigNatModule_copyN(b);\r\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\r\n        let p = BigNatModule_degree(b);\r\n        const m = BigNatModule_degree(a) | 0;\r\n        let n = p - m;\r\n        const Invariant = (tupledArg) => {\r\n        };\r\n        let finished = false;\r\n        while (!finished) {\r\n            Invariant([d, x, n, p]);\r\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\r\n            if (f > 0) {\r\n                BigNatModule_scaleSubInPlace(x, f, a, n);\r\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\r\n                Invariant([d, x, n, p]);\r\n            }\r\n            else {\r\n                finished = ((f === 0) ? (n === 0) : false);\r\n                if (!finished) {\r\n                    if (p === (m + n)) {\r\n                        Invariant([d, x, n - 1, p]);\r\n                        n = ((n - 1) | 0);\r\n                    }\r\n                    else {\r\n                        Invariant([d, x, n - 1, p - 1]);\r\n                        n = ((n - 1) | 0);\r\n                        p = ((p - 1) | 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\r\n    }\r\n}\r\n\r\nexport function BigNatModule_div(b, a) {\r\n    return BigNatModule_divmod(b, a)[0];\r\n}\r\n\r\nexport function BigNatModule_rem(b, a) {\r\n    return BigNatModule_divmod(b, a)[1];\r\n}\r\n\r\nexport function BigNatModule_bitAnd(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (r.bound - 1); i++) {\r\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitOr(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitXor(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_hcf(a, b) {\r\n    const hcfloop = (a_1_mut, b_1_mut) => {\r\n        hcfloop:\r\n        while (true) {\r\n            const a_1 = a_1_mut, b_1 = b_1_mut;\r\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\r\n                return b_1;\r\n            }\r\n            else {\r\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\r\n                b_1_mut = a_1;\r\n                continue hcfloop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (BigNatModule_lt(a, b)) {\r\n        return hcfloop(a, b);\r\n    }\r\n    else {\r\n        return hcfloop(b, a);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_two = BigNatModule_embed(2);\r\n\r\nexport function BigNatModule_powi(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (n_1 === 0) {\r\n                return acc;\r\n            }\r\n            else if ((n_1 % 2) === 0) {\r\n                acc_mut = acc;\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            else {\r\n                acc_mut = BigNatModule_mul(x_1, acc);\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_pow(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (BigNatModule_isZero(n_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\r\n                const ndiv2 = patternInput[0];\r\n                if (BigNatModule_isZero(patternInput[1])) {\r\n                    acc_mut = acc;\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n                else {\r\n                    acc_mut = BigNatModule_mul(x_1, acc);\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_toFloat(n) {\r\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\r\n        evalFloat:\r\n        while (true) {\r\n            const acc = acc_mut, k = k_mut, i = i_mut;\r\n            if (i === n.bound) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = (acc + (k * n.digits[i]));\r\n                k_mut = (k * BigNatModule_baseN);\r\n                i_mut = (i + 1);\r\n                continue evalFloat;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return evalFloat(0, 1, 0);\r\n}\r\n\r\nexport function BigNatModule_ofInt32(n) {\r\n    return BigNatModule_embed(n);\r\n}\r\n\r\nexport function BigNatModule_ofInt64(n) {\r\n    return BigNatModule_embed64(n);\r\n}\r\n\r\nexport function BigNatModule_toUInt32(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            const value = n.digits[0] | 0;\r\n            return value >>> 0;\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            const xB = patternInput[1] | 0;\r\n            if (xB > BigNatModule_baseMask32B) {\r\n                throw (new Error());\r\n            }\r\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toUInt64(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return fromBits(0, 0, true);\r\n        }\r\n        case 1: {\r\n            return fromInteger(n.digits[0], true, 2);\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\r\n        }\r\n        case 3: {\r\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\r\n            const xC = patternInput_1[2] | 0;\r\n            if (xC > BigNatModule_baseMask64C) {\r\n                throw (new Error());\r\n            }\r\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toString(n) {\r\n    const degn = BigNatModule_degree(n) | 0;\r\n    const route = (prior_mut, k_mut, ten2k_mut) => {\r\n        route:\r\n        while (true) {\r\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\r\n            if (BigNatModule_degree(ten2k) > degn) {\r\n                return cons([k, ten2k], prior);\r\n            }\r\n            else {\r\n                prior_mut = cons([k, ten2k], prior);\r\n                k_mut = (k + 1);\r\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\r\n                continue route;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\r\n        collect:\r\n        while (true) {\r\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\r\n            if (!isEmpty(_arg1)) {\r\n                const prior_1 = tail(_arg1);\r\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\r\n                const nL = patternInput[1];\r\n                const nH = patternInput[0];\r\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = digits;\r\n                    n_1_mut = nL;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n                else {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = collect(false, digits, nL, prior_1);\r\n                    n_1_mut = nH;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n            }\r\n            else {\r\n                const n_2 = BigNatModule_eval32(n_1) | 0;\r\n                if (isLeading ? (n_2 === 0) : false) {\r\n                    return digits;\r\n                }\r\n                else {\r\n                    return cons(int32ToString(n_2), digits);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\r\n    if (isEmpty(digits_4)) {\r\n        return \"0\";\r\n    }\r\n    else {\r\n        return join(\"\", toArray(digits_4));\r\n    }\r\n}\r\n\r\nexport function BigNatModule_ofString(str) {\r\n    const len = str.length | 0;\r\n    if (isNullOrEmpty(str)) {\r\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\r\n    }\r\n    const ten = BigNatModule_embed(10);\r\n    const build = (acc_mut, i_mut) => {\r\n        build:\r\n        while (true) {\r\n            const acc = acc_mut, i = i_mut;\r\n            if (i === len) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\r\n                if ((0 <= d) ? (d <= 9) : false) {\r\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\r\n                    i_mut = (i + 1);\r\n                    continue build;\r\n                }\r\n                else {\r\n                    throw (new Error());\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return build(BigNatModule_embed(0), 0);\r\n}\r\n\r\nexport function BigNatModule_isSmall(n) {\r\n    return n.bound <= 1;\r\n}\r\n\r\nexport function BigNatModule_getSmall(n) {\r\n    const z = n;\r\n    const i = 0;\r\n    if (i < z.bound) {\r\n        return z.digits[i] | 0;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_factorial(n) {\r\n    const productR = (a, b) => {\r\n        if (BigNatModule_equal(a, b)) {\r\n            return a;\r\n        }\r\n        else {\r\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\r\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\r\n        }\r\n    };\r\n    return productR(BigNatModule_one, n);\r\n}\r\n\r\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\r\nimport { Record, toString } from \"../Types.js\";\r\nimport { class_type } from \"../Reflection.js\";\r\nimport { initialize } from \"../Array.js\";\r\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\r\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\r\nimport Decimal from \"../Decimal.js\";\r\n\r\nexport class BigInteger extends Record {\r\n    constructor(signInt, v) {\r\n        super();\r\n        this.signInt = (signInt | 0);\r\n        this.v = v;\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const matchValue = BigInteger__get_SignInt(x) | 0;\r\n        switch (matchValue) {\r\n            case -1: {\r\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\r\n            }\r\n            case 0: {\r\n                return \"0\";\r\n            }\r\n            case 1: {\r\n                return BigNatModule_toString(BigInteger__get_V(x));\r\n            }\r\n            default: {\r\n                throw (new Error(\"signs should be +/- 1 or 0\"));\r\n            }\r\n        }\r\n    }\r\n    Equals(obj) {\r\n        const this$ = this;\r\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\r\n    }\r\n    GetHashCode() {\r\n        const x = this;\r\n        return BigInteger_hash_Z665282C2(x) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return toString(this$);\r\n    }\r\n    CompareTo(obj) {\r\n        const this$ = this;\r\n        if (obj instanceof BigInteger) {\r\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger$reflection() {\r\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\r\n}\r\n\r\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\r\n    return new BigInteger(signInt, v);\r\n}\r\n\r\n(() => {\r\n    BigInteger.smallLim = 4096;\r\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\r\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\r\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\r\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\r\n})();\r\n\r\nexport function BigInteger_nat_Z67CCE57D(n) {\r\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\r\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\r\n    }\r\n    else {\r\n        return n;\r\n    }\r\n}\r\n\r\nexport function BigInteger_create_Z2BE94A1(s, n) {\r\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_posn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_negn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger__get_Sign(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return x.signInt | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_SignInt(x) {\r\n    return x.signInt;\r\n}\r\n\r\nexport function BigInteger__get_V(x) {\r\n    return x.v;\r\n}\r\n\r\nexport function BigInteger_op_Equality_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\r\n    return !BigInteger_op_Equality_56F059C0(x, y);\r\n}\r\n\r\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return false;\r\n        }\r\n        case 3: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return false;\r\n        }\r\n        case 7: {\r\n            return false;\r\n        }\r\n        case 8: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 3: {\r\n            return false;\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return false;\r\n        }\r\n        case 6: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return false;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_compare_56F059C0(n, nn) {\r\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\r\n        return -1;\r\n    }\r\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nexport function BigInteger_hash_Z665282C2(z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_StructuredDisplayString(x) {\r\n    return toString(x);\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259A4(n) {\r\n    if (n >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\r\n    }\r\n    else if (n === -2147483648) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259C1(n) {\r\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\r\n    }\r\n    else if (equals(n, fromBits(0, 2147483648, false))) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_get_One() {\r\n    return BigInteger.one;\r\n}\r\n\r\nexport function BigInteger_get_Two() {\r\n    return BigInteger.two;\r\n}\r\n\r\nexport function BigInteger_get_Zero() {\r\n    return BigInteger.zero;\r\n}\r\n\r\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\r\n    const matchValue = BigInteger__get_SignInt(z) | 0;\r\n    if (matchValue === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Scale_Z320F31E(k, z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else if (k < 0) {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\r\n    }\r\n}\r\n\r\nexport function BigInteger_subnn_6A57060(nx, ny) {\r\n    if (BigNatModule_gte(nx, ny)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\r\n    }\r\n    else {\r\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\r\n    }\r\n}\r\n\r\nexport function BigInteger_addnn_6A57060(nx, ny) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\r\n}\r\n\r\nexport function BigInteger__get_IsZero(x) {\r\n    if (BigInteger__get_SignInt(x) === 0) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isZero(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsOne(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return BigNatModule_isOne(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Addition_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return y;\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 2: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 2: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(y)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(x)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(y)) {\r\n        return x;\r\n    }\r\n    else {\r\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\r\n    }\r\n}\r\n\r\nexport function BigInteger_DivRem_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        throw (new Error());\r\n    }\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\r\n    }\r\n    else {\r\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        const r = patternInput[1];\r\n        const d = patternInput[0];\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 1: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 2: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 3: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Division_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[0];\r\n}\r\n\r\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[1];\r\n}\r\n\r\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\r\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\r\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    if (matchValue[0] === 0) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_Zero();\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\r\n        }\r\n    }\r\n    else if (matchValue[1] === 0) {\r\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsNegative(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsPositive(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_Abs_Z665282C2(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\r\n    }\r\n    else {\r\n        return x;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            return true;\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 6: {\r\n            return true;\r\n        }\r\n        case 7: {\r\n            return true;\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return true;\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return true;\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 8: {\r\n            return true;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_Pow_62E082A2(x, y) {\r\n    if (y < 0) {\r\n        throw (new Error(\"y\"));\r\n    }\r\n    const matchValue = [BigInteger__get_IsZero(x), y];\r\n    if (matchValue[0]) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_One();\r\n        }\r\n        else {\r\n            return BigInteger_get_Zero();\r\n        }\r\n    }\r\n    else {\r\n        const yval = BigInteger_$ctor_Z524259A4(y);\r\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\r\n        if (u <= (2147483647 >>> 0)) {\r\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\r\n            return -2147483648;\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, false);\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\r\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\r\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\r\n            return fromBits(0, 2147483648, false);\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, true);\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToDouble(x) {\r\n    const matchValue = BigInteger__get_SignInt(x) | 0;\r\n    switch (matchValue) {\r\n        case -1: {\r\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            return BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        default: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToSByte(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\r\n}\r\n\r\nexport function BigInteger__get_ToByte(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFF;\r\n}\r\n\r\nexport function BigInteger__get_ToInt16(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\r\n}\r\n\r\nexport function BigInteger__get_ToUInt16(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\r\n}\r\n\r\nexport function BigInteger__get_ToSingle(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function BigInteger__get_ToDecimal(x) {\r\n    return new Decimal(BigInteger__get_ToDouble(x));\r\n}\r\n\r\nexport function BigInteger_Parse_Z721C83C5(text) {\r\n    if (text == null) {\r\n        throw (new Error(\"text\"));\r\n    }\r\n    const text_1 = text.trim();\r\n    const len = text_1.length | 0;\r\n    if (len === 0) {\r\n        throw (new Error());\r\n    }\r\n    const matchValue = [text_1[0], len];\r\n    if (matchValue[0] === \"+\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else if (matchValue[0] === \"-\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsSmall(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isSmall(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Factorial_Z665282C2(x) {\r\n    if (BigInteger__get_IsNegative(x)) {\r\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\r\n    }\r\n    if (BigInteger__get_IsPositive(x)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\r\n    }\r\n    else {\r\n        return BigInteger_get_One();\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\r\n    return n1;\r\n}\r\n\r\nexport function BigInteger_FromInt64_Z524259C1(x) {\r\n    return BigInteger_$ctor_Z524259C1(x);\r\n}\r\n\r\nexport function BigInteger_FromInt32_Z524259A4(x) {\r\n    return BigInteger_$ctor_Z524259A4(x);\r\n}\r\n\r\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\r\nimport { fromInteger } from \"./Long.js\";\r\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\r\nimport { toString as toString_1 } from \"./Types.js\";\r\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\r\nimport { fill, reverse } from \"./Array.js\";\r\n\r\nexport function isBigInt(x) {\r\n    return x instanceof BigInteger;\r\n}\r\n\r\nexport function tryParse(str, res) {\r\n    try {\r\n        res.contents = BigInteger_Parse_Z721C83C5(str);\r\n        return true;\r\n    }\r\n    catch (matchValue) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function divRem(x, y, remainder) {\r\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\r\n    remainder.contents = patternInput[1];\r\n    return patternInput[0];\r\n}\r\n\r\nexport function parse(arg00) {\r\n    return BigInteger_Parse_Z721C83C5(arg00);\r\n}\r\n\r\nexport function greatestCommonDivisor(arg00, arg01) {\r\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function pow(arg00, arg01) {\r\n    return BigInteger_Pow_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function abs(arg00) {\r\n    return BigInteger_Abs_Z665282C2(arg00);\r\n}\r\n\r\nexport const zero = BigInteger_get_Zero();\r\n\r\nexport const one = BigInteger_get_One();\r\n\r\nexport const two = BigInteger_get_Two();\r\n\r\nexport function fromString(s) {\r\n    return BigInteger_Parse_Z721C83C5(s);\r\n}\r\n\r\nexport function fromZero() {\r\n    return BigInteger_get_Zero();\r\n}\r\n\r\nexport function fromOne() {\r\n    return BigInteger_get_One();\r\n}\r\n\r\nexport function fromInt64(i) {\r\n    return BigInteger_$ctor_Z524259C1(i);\r\n}\r\n\r\nexport function fromInt32(i) {\r\n    if (i > 2147483647) {\r\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z524259A4(i);\r\n    }\r\n}\r\n\r\nexport function toSByte(x) {\r\n    return BigInteger__get_ToSByte(x);\r\n}\r\n\r\nexport function toByte(x) {\r\n    return BigInteger__get_ToByte(x);\r\n}\r\n\r\nexport function toInt16(x) {\r\n    return BigInteger__get_ToInt16(x);\r\n}\r\n\r\nexport function toUInt16(x) {\r\n    return BigInteger__get_ToUInt16(x);\r\n}\r\n\r\nexport function toInt32(x) {\r\n    return BigInteger__get_ToInt32(x);\r\n}\r\n\r\nexport function toUInt32(x) {\r\n    return BigInteger__get_ToUInt32(x);\r\n}\r\n\r\nexport function toInt64(x) {\r\n    return BigInteger__get_ToInt64(x);\r\n}\r\n\r\nexport function toUInt64(x) {\r\n    return BigInteger__get_ToUInt64(x);\r\n}\r\n\r\nexport function toSingle(x) {\r\n    return BigInteger__get_ToSingle(x);\r\n}\r\n\r\nexport function toDouble(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function toDecimal(x) {\r\n    return BigInteger__get_ToDecimal(x);\r\n}\r\n\r\nexport function sign(x) {\r\n    return BigInteger__get_Sign(x);\r\n}\r\n\r\nexport function isZero(x) {\r\n    return BigInteger__get_IsZero(x);\r\n}\r\n\r\nexport function isOne(x) {\r\n    return BigInteger__get_IsOne(x);\r\n}\r\n\r\nexport function hash(x) {\r\n    return safeHash(x);\r\n}\r\n\r\nexport function compare(x, y) {\r\n    return x.CompareTo(y);\r\n}\r\n\r\nexport function equals(x, y) {\r\n    return equals_1(x, y);\r\n}\r\n\r\nexport function toString(x) {\r\n    return toString_1(x);\r\n}\r\n\r\nexport const get_Zero = BigInteger_get_Zero();\r\n\r\nexport const get_One = BigInteger_get_One();\r\n\r\nexport function op_Addition(arg00, arg01) {\r\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Subtraction(arg00, arg01) {\r\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Multiply(arg00, arg01) {\r\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Division(arg00, arg01) {\r\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Modulus(arg00, arg01) {\r\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_UnaryNegation(arg00) {\r\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_UnaryPlus(arg00) {\r\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_RightShift(arg00, arg01) {\r\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_LeftShift(arg00, arg01) {\r\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseAnd(arg00, arg01) {\r\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseOr(arg00, arg01) {\r\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_ExclusiveOr(arg00, arg01) {\r\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThan(arg00, arg01) {\r\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThan(arg00, arg01) {\r\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Equality(arg00, arg01) {\r\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Inequality(arg00, arg01) {\r\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\r\n}\r\n\r\nfunction flipTwosComplement(currByte, lowBitFound) {\r\n    const matchValue = [currByte, lowBitFound];\r\n    if (matchValue[1]) {\r\n        return [(currByte ^ 255) & 255, true];\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        return [0, false];\r\n    }\r\n    else {\r\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\r\n    }\r\n}\r\n\r\nexport function toByteArray(value) {\r\n    if (equals_1(value, zero)) {\r\n        return new Uint8Array([0]);\r\n    }\r\n    else {\r\n        const isPositive = compare_1(value, zero) > 0;\r\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\r\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\r\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\r\n            let value_6, value_8, value_9, value_10;\r\n            loop:\r\n            while (true) {\r\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\r\n                if (compare_1(consumeValue, zero) <= 0) {\r\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\r\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\r\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\r\n                }\r\n                else {\r\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\r\n                    if (isPositive) {\r\n                        const b0 = currValue & 0xFF;\r\n                        let b1;\r\n                        const value_4 = currValue >>> 8;\r\n                        b1 = (value_4 & 0xFF);\r\n                        let b2;\r\n                        const value_5 = currValue >>> 16;\r\n                        b2 = (value_5 & 0xFF);\r\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\r\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), value_1, false);\r\n    }\r\n}\r\n\r\nexport function fromByteArray(bytes) {\r\n    if (bytes == null) {\r\n        throw (new Error(\"bytes\"));\r\n    }\r\n    if (bytes.length === 0) {\r\n        return zero;\r\n    }\r\n    else {\r\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\r\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\r\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\r\n                if (bytesRemaining === 0) {\r\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\r\n                    if (isPositive) {\r\n                        return value_2;\r\n                    }\r\n                    else {\r\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\r\n                    }\r\n                }\r\n                else {\r\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\r\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\r\n                        buffer[i_1] = bytes[currIndex + i_1];\r\n                    }\r\n                    if (isPositive) {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\r\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\r\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\r\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), 0, bytes.length, false);\r\n    }\r\n}\r\n\r\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\r\nimport { fill } from \"./Array.js\";\r\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\r\nimport { format, join } from \"./String.js\";\r\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\r\n\r\nexport class MapTreeLeaf$2 {\r\n    constructor(k, v) {\r\n        this.k = k;\r\n        this.v = v;\r\n    }\r\n}\r\n\r\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\r\n}\r\n\r\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\r\n    return new MapTreeLeaf$2(k, v);\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Value(_) {\r\n    return _.v;\r\n}\r\n\r\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\r\n    constructor(k, v, left, right, h) {\r\n        super(k, v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function MapTreeNode$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\r\n}\r\n\r\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\r\n    return new MapTreeNode$2(k, v, left, right, h);\r\n}\r\n\r\nexport function MapTreeNode$2__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function MapTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\r\n    MapTreeModule_sizeAux:\r\n    while (true) {\r\n        const acc = acc_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_sizeAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_size(x) {\r\n    return MapTreeModule_sizeAux(0, x);\r\n}\r\n\r\nexport function MapTreeModule_mk(l, k, v, r) {\r\n    let hl;\r\n    const m = l;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const m_1 = r;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\r\n    if (m_2 === 0) {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n    else {\r\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\r\n    let m_2, m2_2, m_3, m2_3;\r\n    let t1h;\r\n    const m = t1;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const m_1 = t2;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof MapTreeNode$2) {\r\n            if (((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? ((m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\r\n                if (matchValue_1 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof MapTreeNode$2) {\r\n            if (((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? ((m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_mk(t1, k, v, t2);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_add(comparer, k, v, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c < 0) {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n        }\r\n        else {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_tryFind:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c === 0) {\r\n                return some(MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n            else if (m2 instanceof MapTreeNode$2) {\r\n                comparer_mut = comparer;\r\n                k_mut = k;\r\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\r\n                continue MapTreeModule_tryFind;\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_find(comparer, k, m) {\r\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\r\n    if (matchValue == null) {\r\n        throw (new Error());\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\r\n    if (f(k, v)) {\r\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\r\n    MapTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\r\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue MapTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition(comparer, f, m) {\r\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\r\n    if (f(k, v)) {\r\n        return MapTreeModule_add(comparer, k, v, acc);\r\n    }\r\n    else {\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\r\n    MapTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\r\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                acc_mut = acc_2;\r\n                continue MapTreeModule_filterAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filter(comparer, f, m) {\r\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_spliceOutSuccessor(m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (MapTreeNode$2__get_Left(m2) == null) {\r\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\r\n            }\r\n            else {\r\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\r\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\r\n            }\r\n        }\r\n        else {\r\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_remove(comparer, k, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeModule_empty();\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_change(comparer, k, u, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_1 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n                }\r\n                else if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c_1 < 0) {\r\n                const matchValue_2 = u(void 0);\r\n                if (matchValue_2 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n            else if (c_1 === 0) {\r\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_3 != null) {\r\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\r\n                }\r\n                else {\r\n                    return MapTreeModule_empty();\r\n                }\r\n            }\r\n            else {\r\n                const matchValue_4 = u(void 0);\r\n                if (matchValue_4 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const matchValue = u(void 0);\r\n        if (matchValue != null) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Left(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\r\n    MapTreeModule_iterOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_iterOpt;\r\n            }\r\n            else {\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iter(f, m) {\r\n    MapTreeModule_iterOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\r\n    MapTreeModule_tryPickOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\r\n                if (matchValue == null) {\r\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                    if (matchValue_1 == null) {\r\n                        f_mut = f;\r\n                        m_mut = MapTreeNode$2__get_Right(m2);\r\n                        continue MapTreeModule_tryPickOpt;\r\n                    }\r\n                    else {\r\n                        return matchValue_1;\r\n                    }\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryPick(f, m) {\r\n    return MapTreeModule_tryPickOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\r\n    MapTreeModule_existsOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_existsOpt;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_exists(f, m) {\r\n    return MapTreeModule_existsOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\r\n    MapTreeModule_forallOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_forallOpt;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_forall(f, m) {\r\n    return MapTreeModule_forallOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_map(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapiOpt(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapi(f, m) {\r\n    return MapTreeModule_mapiOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\r\n    MapTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut, x = x_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\r\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                x_mut = x_2;\r\n                continue MapTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldBack(f, m, x) {\r\n    return MapTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\r\n    MapTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                f_mut = f;\r\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_fold(f, x, m) {\r\n    return MapTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\r\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\r\n        foldFromTo:\r\n        while (true) {\r\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\r\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\r\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\r\n                    if (cKeyHi < 0) {\r\n                        f_1_mut = f_1;\r\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\r\n                        x_1_mut = x_3;\r\n                        continue foldFromTo;\r\n                    }\r\n                    else {\r\n                        return x_3;\r\n                    }\r\n                }\r\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\r\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                }\r\n                else {\r\n                    return x_1;\r\n                }\r\n            }\r\n            else {\r\n                return x_1;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (comparer.Compare(lo, hi) === 1) {\r\n        return x;\r\n    }\r\n    else {\r\n        return foldFromTo(f, m, x);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\r\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_toList(m) {\r\n    const loop = (m_1_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const m_1 = m_1_mut, acc = acc_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\r\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(m, empty_1());\r\n}\r\n\r\nexport function MapTreeModule_copyToArray(m, arr, i) {\r\n    let j = i;\r\n    MapTreeModule_iter((x, y) => {\r\n        arr[j] = [x, y];\r\n        j = ((j + 1) | 0);\r\n    }, m);\r\n}\r\n\r\nexport function MapTreeModule_toArray(m) {\r\n    const n = MapTreeModule_size(m) | 0;\r\n    const res = fill(new Array(n), 0, n, [null, null]);\r\n    MapTreeModule_copyToArray(m, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofList(comparer, l) {\r\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\r\n}\r\n\r\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    MapTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            comparer_mut = comparer;\r\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\r\n            e_mut = e;\r\n            continue MapTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_ofArray(comparer, arr) {\r\n    let res = MapTreeModule_empty();\r\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\r\n        const forLoopVar = arr[idx];\r\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return MapTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return MapTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class MapTreeModule_MapIterator$2 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\r\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function MapTreeModule_collapseLHS(stack_mut) {\r\n    MapTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const rest = tail(stack);\r\n            const m = head(stack);\r\n            if (m != null) {\r\n                const m2 = m;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\r\n                    continue MapTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue MapTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIterator(m) {\r\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\r\n}\r\n\r\nexport function MapTreeModule_notStarted() {\r\n    throw (new Error(\"enumeration not started\"));\r\n}\r\n\r\nexport function MapTreeModule_alreadyFinished() {\r\n    throw (new Error(\"enumeration already finished\"));\r\n}\r\n\r\nexport function MapTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n                }\r\n                else {\r\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n            }\r\n        }\r\n        else {\r\n            return MapTreeModule_alreadyFinished();\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIEnumerator(m) {\r\n    let i = MapTreeModule_mkIterator(m);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return MapTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = MapTreeModule_mkIterator(m);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function MapTreeModule_toSeq(s) {\r\n    return unfold((en_1) => {\r\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, MapTreeModule_mkIEnumerator(s));\r\n}\r\n\r\nexport class FSharpMap {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpMap__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        if (that instanceof FSharpMap) {\r\n            const e1 = getEnumerator(this$);\r\n            try {\r\n                const e2 = getEnumerator(that);\r\n                try {\r\n                    const loop = () => {\r\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            if (!m1) {\r\n                                return true;\r\n                            }\r\n                            else {\r\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\r\n                                    return loop();\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    };\r\n                    return loop();\r\n                }\r\n                finally {\r\n                    e2.Dispose();\r\n                }\r\n            }\r\n            finally {\r\n                e1.Dispose();\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpMap\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    CompareTo(obj) {\r\n        const m = this;\r\n        if (obj instanceof FSharpMap) {\r\n            return compareWith((kvp1, kvp2) => {\r\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\r\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\r\n            }, m, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const m = this;\r\n        MapTreeModule_copyToArray(m.tree, arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    get size() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    delete(_arg1) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return false;\r\n    }\r\n    entries() {\r\n        const m = this;\r\n        return map_1((p) => [p[0], p[1]], m);\r\n    }\r\n    get(k) {\r\n        const m = this;\r\n        return FSharpMap__get_Item(m, k);\r\n    }\r\n    has(k) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, k);\r\n    }\r\n    keys() {\r\n        const m = this;\r\n        return map_1((p) => p[0], m);\r\n    }\r\n    set(k, v) {\r\n        const m = this;\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return m;\r\n    }\r\n    values() {\r\n        const m = this;\r\n        return map_1((p) => p[1], m);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const m = this;\r\n        iterate_1((p) => {\r\n            f(p[1], p[0], m);\r\n        }, m);\r\n    }\r\n}\r\n\r\nexport function FSharpMap$reflection(gen0, gen1) {\r\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\r\n}\r\n\r\nexport function FSharpMap_$ctor(comparer, tree) {\r\n    return new FSharpMap(comparer, tree);\r\n}\r\n\r\n(() => {\r\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\r\n})();\r\n\r\nexport function FSharpMap_get_Empty() {\r\n    return FSharpMap.empty;\r\n}\r\n\r\nexport function FSharpMap_Create(ie) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\r\n}\r\n\r\nexport function FSharpMap__get_Comparer(m) {\r\n    return m.comparer;\r\n}\r\n\r\nexport function FSharpMap__get_Tree(m) {\r\n    return m.tree;\r\n}\r\n\r\nexport function FSharpMap__Add(m, key, value) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Change(m, key, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__get_IsEmpty(m) {\r\n    return m.tree == null;\r\n}\r\n\r\nexport function FSharpMap__get_Item(m, key) {\r\n    return MapTreeModule_find(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__TryPick(m, f) {\r\n    return MapTreeModule_tryPick(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Exists(m, predicate) {\r\n    return MapTreeModule_exists(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Filter(m, predicate) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\r\n}\r\n\r\nexport function FSharpMap__ForAll(m, predicate) {\r\n    return MapTreeModule_forall(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Fold(m, f, acc) {\r\n    return MapTreeModule_foldBack(f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\r\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__Iterate(m, f) {\r\n    MapTreeModule_iter(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__MapRange(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Map(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Partition(m, predicate) {\r\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\r\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\r\n}\r\n\r\nexport function FSharpMap__get_Count(m) {\r\n    return MapTreeModule_size(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ContainsKey(m, key) {\r\n    return MapTreeModule_mem(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Remove(m, key) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\r\n}\r\n\r\nexport function FSharpMap__TryGetValue(__, key, value) {\r\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\r\n    if (matchValue == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        const v = value_1(matchValue);\r\n        value.contents = v;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function FSharpMap__TryFind(m, key) {\r\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToList(m) {\r\n    return MapTreeModule_toList(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToArray(m) {\r\n    return MapTreeModule_toArray(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ComputeHashCode(this$) {\r\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const activePatternResult5329 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (combineHash(res, structuralHash(activePatternResult5329[0])) | 0);\r\n            res = (combineHash(res, structuralHash(activePatternResult5329[1])) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function isEmpty(table) {\r\n    return FSharpMap__get_IsEmpty(table);\r\n}\r\n\r\nexport function add(key, value, table) {\r\n    return FSharpMap__Add(table, key, value);\r\n}\r\n\r\nexport function change(key, f, table) {\r\n    return FSharpMap__Change(table, key, f);\r\n}\r\n\r\nexport function find(key, table) {\r\n    return FSharpMap__get_Item(table, key);\r\n}\r\n\r\nexport function tryFind(key, table) {\r\n    return FSharpMap__TryFind(table, key);\r\n}\r\n\r\nexport function remove(key, table) {\r\n    return FSharpMap__Remove(table, key);\r\n}\r\n\r\nexport function containsKey(key, table) {\r\n    return FSharpMap__ContainsKey(table, key);\r\n}\r\n\r\nexport function iterate(action, table) {\r\n    FSharpMap__Iterate(table, action);\r\n}\r\n\r\nexport function tryPick(chooser, table) {\r\n    return FSharpMap__TryPick(table, chooser);\r\n}\r\n\r\nexport function pick(chooser, table) {\r\n    const matchValue = tryPick(chooser, table);\r\n    if (matchValue != null) {\r\n        return value_1(matchValue);\r\n    }\r\n    else {\r\n        throw (new Error());\r\n    }\r\n}\r\n\r\nexport function exists(predicate, table) {\r\n    return FSharpMap__Exists(table, predicate);\r\n}\r\n\r\nexport function filter(predicate, table) {\r\n    return FSharpMap__Filter(table, predicate);\r\n}\r\n\r\nexport function partition(predicate, table) {\r\n    return FSharpMap__Partition(table, predicate);\r\n}\r\n\r\nexport function forAll(predicate, table) {\r\n    return FSharpMap__ForAll(table, predicate);\r\n}\r\n\r\nexport function map(mapping, table) {\r\n    return FSharpMap__Map(table, mapping);\r\n}\r\n\r\nexport function fold(folder, state, table) {\r\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\r\n}\r\n\r\nexport function foldBack(folder, table, state) {\r\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\r\n}\r\n\r\nexport function toSeq(table) {\r\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\r\n}\r\n\r\nexport function findKey(predicate, table) {\r\n    return pick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function tryFindKey(predicate, table) {\r\n    return tryPick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function ofList(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofSeq(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofArray(elements) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\r\n}\r\n\r\nexport function toList(table) {\r\n    return FSharpMap__ToList(table);\r\n}\r\n\r\nexport function toArray(table) {\r\n    return FSharpMap__ToArray(table);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpMap_get_Empty();\r\n}\r\n\r\nexport function count(table) {\r\n    return FSharpMap__get_Count(table);\r\n}\r\n\r\n","import { Union } from \"./Types.js\";\r\nimport { union_type } from \"./Reflection.js\";\r\nimport { some } from \"./Option.js\";\r\n\r\nexport class FSharpResult$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Ok\", \"Error\"];\r\n    }\r\n}\r\n\r\nexport function FSharpResult$2$reflection(gen0, gen1) {\r\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\r\n}\r\n\r\nexport function Result_Map(mapping, result) {\r\n    if (result.tag === 0) {\r\n        return new FSharpResult$2(0, mapping(result.fields[0]));\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, result.fields[0]);\r\n    }\r\n}\r\n\r\nexport function Result_MapError(mapping, result) {\r\n    if (result.tag === 0) {\r\n        return new FSharpResult$2(0, result.fields[0]);\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, mapping(result.fields[0]));\r\n    }\r\n}\r\n\r\nexport function Result_Bind(binder, result) {\r\n    if (result.tag === 0) {\r\n        return binder(result.fields[0]);\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, result.fields[0]);\r\n    }\r\n}\r\n\r\nexport class FSharpChoice$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of2\", \"Choice2Of2\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$2$reflection(gen0, gen1) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\r\n}\r\n\r\nexport class FSharpChoice$3 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\r\n}\r\n\r\nexport class FSharpChoice$4 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\r\n}\r\n\r\nexport class FSharpChoice$5 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\r\n}\r\n\r\nexport class FSharpChoice$6 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\r\n}\r\n\r\nexport class FSharpChoice$7 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\r\n}\r\n\r\nexport function Choice_makeChoice1Of2(x) {\r\n    return new FSharpChoice$2(0, x);\r\n}\r\n\r\nexport function Choice_makeChoice2Of2(x) {\r\n    return new FSharpChoice$2(1, x);\r\n}\r\n\r\nexport function Choice_tryValueIfChoice1Of2(x) {\r\n    if (x.tag === 0) {\r\n        return some(x.fields[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Choice_tryValueIfChoice2Of2(x) {\r\n    if (x.tag === 1) {\r\n        return some(x.fields[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","import { FSharpMap__TryFind, ofArray } from \"./.fable/fable-library.3.2.11/Map.js\";\r\nimport { substring, trimEnd } from \"./.fable/fable-library.3.2.11/String.js\";\r\nimport { tryParse } from \"./.fable/fable-library.3.2.11/Int32.js\";\r\nimport { FSharpRef } from \"./.fable/fable-library.3.2.11/Types.js\";\r\nimport { FSharpChoice$2 } from \"./.fable/fable-library.3.2.11/Choice.js\";\r\nimport { defaultArg } from \"./.fable/fable-library.3.2.11/Option.js\";\r\nimport { getUnicodeSurrogatePair } from \"./TextConversions.fs.js\";\r\n\r\nconst refs = ofArray([[\"\\u0026Aacute;\", \"Á\"], [\"\\u0026Aacute\", \"Á\"], [\"\\u0026aacute;\", \"á\"], [\"\\u0026aacute\", \"á\"], [\"\\u0026Abreve;\", \"Ă\"], [\"\\u0026abreve;\", \"ă\"], [\"\\u0026ac;\", \"∾\"], [\"\\u0026acd;\", \"∿\"], [\"\\u0026acE;\", \"∾̳\"], [\"\\u0026Acirc;\", \"Â\"], [\"\\u0026Acirc\", \"Â\"], [\"\\u0026acirc;\", \"â\"], [\"\\u0026acirc\", \"â\"], [\"\\u0026acute;\", \"´\"], [\"\\u0026acute\", \"´\"], [\"\\u0026Acy;\", \"А\"], [\"\\u0026acy;\", \"а\"], [\"\\u0026AElig;\", \"Æ\"], [\"\\u0026AElig\", \"Æ\"], [\"\\u0026aelig;\", \"æ\"], [\"\\u0026aelig\", \"æ\"], [\"\\u0026af;\", \"⁡\"], [\"\\u0026Afr;\", \"𝔄\"], [\"\\u0026afr;\", \"𝔞\"], [\"\\u0026Agrave;\", \"À\"], [\"\\u0026Agrave\", \"À\"], [\"\\u0026agrave;\", \"à\"], [\"\\u0026agrave\", \"à\"], [\"\\u0026alefsym;\", \"ℵ\"], [\"\\u0026aleph;\", \"ℵ\"], [\"\\u0026Alpha;\", \"Α\"], [\"\\u0026alpha;\", \"α\"], [\"\\u0026Amacr;\", \"Ā\"], [\"\\u0026amacr;\", \"ā\"], [\"\\u0026amalg;\", \"⨿\"], [\"\\u0026amp;\", \"\\u0026\"], [\"\\u0026amp\", \"\\u0026\"], [\"\\u0026AMP;\", \"\\u0026\"], [\"\\u0026AMP\", \"\\u0026\"], [\"\\u0026andand;\", \"⩕\"], [\"\\u0026And;\", \"⩓\"], [\"\\u0026and;\", \"∧\"], [\"\\u0026andd;\", \"⩜\"], [\"\\u0026andslope;\", \"⩘\"], [\"\\u0026andv;\", \"⩚\"], [\"\\u0026ang;\", \"∠\"], [\"\\u0026ange;\", \"⦤\"], [\"\\u0026angle;\", \"∠\"], [\"\\u0026angmsdaa;\", \"⦨\"], [\"\\u0026angmsdab;\", \"⦩\"], [\"\\u0026angmsdac;\", \"⦪\"], [\"\\u0026angmsdad;\", \"⦫\"], [\"\\u0026angmsdae;\", \"⦬\"], [\"\\u0026angmsdaf;\", \"⦭\"], [\"\\u0026angmsdag;\", \"⦮\"], [\"\\u0026angmsdah;\", \"⦯\"], [\"\\u0026angmsd;\", \"∡\"], [\"\\u0026angrt;\", \"∟\"], [\"\\u0026angrtvb;\", \"⊾\"], [\"\\u0026angrtvbd;\", \"⦝\"], [\"\\u0026angsph;\", \"∢\"], [\"\\u0026angst;\", \"Å\"], [\"\\u0026angzarr;\", \"⍼\"], [\"\\u0026Aogon;\", \"Ą\"], [\"\\u0026aogon;\", \"ą\"], [\"\\u0026Aopf;\", \"𝔸\"], [\"\\u0026aopf;\", \"𝕒\"], [\"\\u0026apacir;\", \"⩯\"], [\"\\u0026ap;\", \"≈\"], [\"\\u0026apE;\", \"⩰\"], [\"\\u0026ape;\", \"≊\"], [\"\\u0026apid;\", \"≋\"], [\"\\u0026apos;\", \"\\u0027\"], [\"\\u0026ApplyFunction;\", \"⁡\"], [\"\\u0026approx;\", \"≈\"], [\"\\u0026approxeq;\", \"≊\"], [\"\\u0026Aring;\", \"Å\"], [\"\\u0026Aring\", \"Å\"], [\"\\u0026aring;\", \"å\"], [\"\\u0026aring\", \"å\"], [\"\\u0026Ascr;\", \"𝒜\"], [\"\\u0026ascr;\", \"𝒶\"], [\"\\u0026Assign;\", \"≔\"], [\"\\u0026ast;\", \"*\"], [\"\\u0026asymp;\", \"≈\"], [\"\\u0026asympeq;\", \"≍\"], [\"\\u0026Atilde;\", \"Ã\"], [\"\\u0026Atilde\", \"Ã\"], [\"\\u0026atilde;\", \"ã\"], [\"\\u0026atilde\", \"ã\"], [\"\\u0026Auml;\", \"Ä\"], [\"\\u0026Auml\", \"Ä\"], [\"\\u0026auml;\", \"ä\"], [\"\\u0026auml\", \"ä\"], [\"\\u0026awconint;\", \"∳\"], [\"\\u0026awint;\", \"⨑\"], [\"\\u0026backcong;\", \"≌\"], [\"\\u0026backepsilon;\", \"϶\"], [\"\\u0026backprime;\", \"‵\"], [\"\\u0026backsim;\", \"∽\"], [\"\\u0026backsimeq;\", \"⋍\"], [\"\\u0026Backslash;\", \"∖\"], [\"\\u0026Barv;\", \"⫧\"], [\"\\u0026barvee;\", \"⊽\"], [\"\\u0026barwed;\", \"⌅\"], [\"\\u0026Barwed;\", \"⌆\"], [\"\\u0026barwedge;\", \"⌅\"], [\"\\u0026bbrk;\", \"⎵\"], [\"\\u0026bbrktbrk;\", \"⎶\"], [\"\\u0026bcong;\", \"≌\"], [\"\\u0026Bcy;\", \"Б\"], [\"\\u0026bcy;\", \"б\"], [\"\\u0026bdquo;\", \"„\"], [\"\\u0026becaus;\", \"∵\"], [\"\\u0026because;\", \"∵\"], [\"\\u0026Because;\", \"∵\"], [\"\\u0026bemptyv;\", \"⦰\"], [\"\\u0026bepsi;\", \"϶\"], [\"\\u0026bernou;\", \"ℬ\"], [\"\\u0026Bernoullis;\", \"ℬ\"], [\"\\u0026Beta;\", \"Β\"], [\"\\u0026beta;\", \"β\"], [\"\\u0026beth;\", \"ℶ\"], [\"\\u0026between;\", \"≬\"], [\"\\u0026Bfr;\", \"𝔅\"], [\"\\u0026bfr;\", \"𝔟\"], [\"\\u0026bigcap;\", \"⋂\"], [\"\\u0026bigcirc;\", \"◯\"], [\"\\u0026bigcup;\", \"⋃\"], [\"\\u0026bigodot;\", \"⨀\"], [\"\\u0026bigoplus;\", \"⨁\"], [\"\\u0026bigotimes;\", \"⨂\"], [\"\\u0026bigsqcup;\", \"⨆\"], [\"\\u0026bigstar;\", \"★\"], [\"\\u0026bigtriangledown;\", \"▽\"], [\"\\u0026bigtriangleup;\", \"△\"], [\"\\u0026biguplus;\", \"⨄\"], [\"\\u0026bigvee;\", \"⋁\"], [\"\\u0026bigwedge;\", \"⋀\"], [\"\\u0026bkarow;\", \"⤍\"], [\"\\u0026blacklozenge;\", \"⧫\"], [\"\\u0026blacksquare;\", \"▪\"], [\"\\u0026blacktriangle;\", \"▴\"], [\"\\u0026blacktriangledown;\", \"▾\"], [\"\\u0026blacktriangleleft;\", \"◂\"], [\"\\u0026blacktriangleright;\", \"▸\"], [\"\\u0026blank;\", \"␣\"], [\"\\u0026blk12;\", \"▒\"], [\"\\u0026blk14;\", \"░\"], [\"\\u0026blk34;\", \"▓\"], [\"\\u0026block;\", \"█\"], [\"\\u0026bne;\", \"=⃥\"], [\"\\u0026bnequiv;\", \"≡⃥\"], [\"\\u0026bNot;\", \"⫭\"], [\"\\u0026bnot;\", \"⌐\"], [\"\\u0026Bopf;\", \"𝔹\"], [\"\\u0026bopf;\", \"𝕓\"], [\"\\u0026bot;\", \"⊥\"], [\"\\u0026bottom;\", \"⊥\"], [\"\\u0026bowtie;\", \"⋈\"], [\"\\u0026boxbox;\", \"⧉\"], [\"\\u0026boxdl;\", \"┐\"], [\"\\u0026boxdL;\", \"╕\"], [\"\\u0026boxDl;\", \"╖\"], [\"\\u0026boxDL;\", \"╗\"], [\"\\u0026boxdr;\", \"┌\"], [\"\\u0026boxdR;\", \"╒\"], [\"\\u0026boxDr;\", \"╓\"], [\"\\u0026boxDR;\", \"╔\"], [\"\\u0026boxh;\", \"─\"], [\"\\u0026boxH;\", \"═\"], [\"\\u0026boxhd;\", \"┬\"], [\"\\u0026boxHd;\", \"╤\"], [\"\\u0026boxhD;\", \"╥\"], [\"\\u0026boxHD;\", \"╦\"], [\"\\u0026boxhu;\", \"┴\"], [\"\\u0026boxHu;\", \"╧\"], [\"\\u0026boxhU;\", \"╨\"], [\"\\u0026boxHU;\", \"╩\"], [\"\\u0026boxminus;\", \"⊟\"], [\"\\u0026boxplus;\", \"⊞\"], [\"\\u0026boxtimes;\", \"⊠\"], [\"\\u0026boxul;\", \"┘\"], [\"\\u0026boxuL;\", \"╛\"], [\"\\u0026boxUl;\", \"╜\"], [\"\\u0026boxUL;\", \"╝\"], [\"\\u0026boxur;\", \"└\"], [\"\\u0026boxuR;\", \"╘\"], [\"\\u0026boxUr;\", \"╙\"], [\"\\u0026boxUR;\", \"╚\"], [\"\\u0026boxv;\", \"│\"], [\"\\u0026boxV;\", \"║\"], [\"\\u0026boxvh;\", \"┼\"], [\"\\u0026boxvH;\", \"╪\"], [\"\\u0026boxVh;\", \"╫\"], [\"\\u0026boxVH;\", \"╬\"], [\"\\u0026boxvl;\", \"┤\"], [\"\\u0026boxvL;\", \"╡\"], [\"\\u0026boxVl;\", \"╢\"], [\"\\u0026boxVL;\", \"╣\"], [\"\\u0026boxvr;\", \"├\"], [\"\\u0026boxvR;\", \"╞\"], [\"\\u0026boxVr;\", \"╟\"], [\"\\u0026boxVR;\", \"╠\"], [\"\\u0026bprime;\", \"‵\"], [\"\\u0026breve;\", \"˘\"], [\"\\u0026Breve;\", \"˘\"], [\"\\u0026brvbar;\", \"¦\"], [\"\\u0026brvbar\", \"¦\"], [\"\\u0026bscr;\", \"𝒷\"], [\"\\u0026Bscr;\", \"ℬ\"], [\"\\u0026bsemi;\", \"⁏\"], [\"\\u0026bsim;\", \"∽\"], [\"\\u0026bsime;\", \"⋍\"], [\"\\u0026bsolb;\", \"⧅\"], [\"\\u0026bsol;\", \"\\\\\"], [\"\\u0026bsolhsub;\", \"⟈\"], [\"\\u0026bull;\", \"•\"], [\"\\u0026bullet;\", \"•\"], [\"\\u0026bump;\", \"≎\"], [\"\\u0026bumpE;\", \"⪮\"], [\"\\u0026bumpe;\", \"≏\"], [\"\\u0026Bumpeq;\", \"≎\"], [\"\\u0026bumpeq;\", \"≏\"], [\"\\u0026Cacute;\", \"Ć\"], [\"\\u0026cacute;\", \"ć\"], [\"\\u0026capand;\", \"⩄\"], [\"\\u0026capbrcup;\", \"⩉\"], [\"\\u0026capcap;\", \"⩋\"], [\"\\u0026cap;\", \"∩\"], [\"\\u0026Cap;\", \"⋒\"], [\"\\u0026capcup;\", \"⩇\"], [\"\\u0026capdot;\", \"⩀\"], [\"\\u0026CapitalDifferentialD;\", \"ⅅ\"], [\"\\u0026caps;\", \"∩︀\"], [\"\\u0026caret;\", \"⁁\"], [\"\\u0026caron;\", \"ˇ\"], [\"\\u0026Cayleys;\", \"ℭ\"], [\"\\u0026ccaps;\", \"⩍\"], [\"\\u0026Ccaron;\", \"Č\"], [\"\\u0026ccaron;\", \"č\"], [\"\\u0026Ccedil;\", \"Ç\"], [\"\\u0026Ccedil\", \"Ç\"], [\"\\u0026ccedil;\", \"ç\"], [\"\\u0026ccedil\", \"ç\"], [\"\\u0026Ccirc;\", \"Ĉ\"], [\"\\u0026ccirc;\", \"ĉ\"], [\"\\u0026Cconint;\", \"∰\"], [\"\\u0026ccups;\", \"⩌\"], [\"\\u0026ccupssm;\", \"⩐\"], [\"\\u0026Cdot;\", \"Ċ\"], [\"\\u0026cdot;\", \"ċ\"], [\"\\u0026cedil;\", \"¸\"], [\"\\u0026cedil\", \"¸\"], [\"\\u0026Cedilla;\", \"¸\"], [\"\\u0026cemptyv;\", \"⦲\"], [\"\\u0026cent;\", \"¢\"], [\"\\u0026cent\", \"¢\"], [\"\\u0026centerdot;\", \"·\"], [\"\\u0026CenterDot;\", \"·\"], [\"\\u0026cfr;\", \"𝔠\"], [\"\\u0026Cfr;\", \"ℭ\"], [\"\\u0026CHcy;\", \"Ч\"], [\"\\u0026chcy;\", \"ч\"], [\"\\u0026check;\", \"✓\"], [\"\\u0026checkmark;\", \"✓\"], [\"\\u0026Chi;\", \"Χ\"], [\"\\u0026chi;\", \"χ\"], [\"\\u0026circ;\", \"ˆ\"], [\"\\u0026circeq;\", \"≗\"], [\"\\u0026circlearrowleft;\", \"↺\"], [\"\\u0026circlearrowright;\", \"↻\"], [\"\\u0026circledast;\", \"⊛\"], [\"\\u0026circledcirc;\", \"⊚\"], [\"\\u0026circleddash;\", \"⊝\"], [\"\\u0026CircleDot;\", \"⊙\"], [\"\\u0026circledR;\", \"®\"], [\"\\u0026circledS;\", \"Ⓢ\"], [\"\\u0026CircleMinus;\", \"⊖\"], [\"\\u0026CirclePlus;\", \"⊕\"], [\"\\u0026CircleTimes;\", \"⊗\"], [\"\\u0026cir;\", \"○\"], [\"\\u0026cirE;\", \"⧃\"], [\"\\u0026cire;\", \"≗\"], [\"\\u0026cirfnint;\", \"⨐\"], [\"\\u0026cirmid;\", \"⫯\"], [\"\\u0026cirscir;\", \"⧂\"], [\"\\u0026ClockwiseContourIntegral;\", \"∲\"], [\"\\u0026CloseCurlyDoubleQuote;\", \"”\"], [\"\\u0026CloseCurlyQuote;\", \"’\"], [\"\\u0026clubs;\", \"♣\"], [\"\\u0026clubsuit;\", \"♣\"], [\"\\u0026colon;\", \":\"], [\"\\u0026Colon;\", \"∷\"], [\"\\u0026Colone;\", \"⩴\"], [\"\\u0026colone;\", \"≔\"], [\"\\u0026coloneq;\", \"≔\"], [\"\\u0026comma;\", \",\"], [\"\\u0026commat;\", \"@\"], [\"\\u0026comp;\", \"∁\"], [\"\\u0026compfn;\", \"∘\"], [\"\\u0026complement;\", \"∁\"], [\"\\u0026complexes;\", \"ℂ\"], [\"\\u0026cong;\", \"≅\"], [\"\\u0026congdot;\", \"⩭\"], [\"\\u0026Congruent;\", \"≡\"], [\"\\u0026conint;\", \"∮\"], [\"\\u0026Conint;\", \"∯\"], [\"\\u0026ContourIntegral;\", \"∮\"], [\"\\u0026copf;\", \"𝕔\"], [\"\\u0026Copf;\", \"ℂ\"], [\"\\u0026coprod;\", \"∐\"], [\"\\u0026Coproduct;\", \"∐\"], [\"\\u0026copy;\", \"©\"], [\"\\u0026copy\", \"©\"], [\"\\u0026COPY;\", \"©\"], [\"\\u0026COPY\", \"©\"], [\"\\u0026copysr;\", \"℗\"], [\"\\u0026CounterClockwiseContourIntegral;\", \"∳\"], [\"\\u0026crarr;\", \"↵\"], [\"\\u0026cross;\", \"✗\"], [\"\\u0026Cross;\", \"⨯\"], [\"\\u0026Cscr;\", \"𝒞\"], [\"\\u0026cscr;\", \"𝒸\"], [\"\\u0026csub;\", \"⫏\"], [\"\\u0026csube;\", \"⫑\"], [\"\\u0026csup;\", \"⫐\"], [\"\\u0026csupe;\", \"⫒\"], [\"\\u0026ctdot;\", \"⋯\"], [\"\\u0026cudarrl;\", \"⤸\"], [\"\\u0026cudarrr;\", \"⤵\"], [\"\\u0026cuepr;\", \"⋞\"], [\"\\u0026cuesc;\", \"⋟\"], [\"\\u0026cularr;\", \"↶\"], [\"\\u0026cularrp;\", \"⤽\"], [\"\\u0026cupbrcap;\", \"⩈\"], [\"\\u0026cupcap;\", \"⩆\"], [\"\\u0026CupCap;\", \"≍\"], [\"\\u0026cup;\", \"∪\"], [\"\\u0026Cup;\", \"⋓\"], [\"\\u0026cupcup;\", \"⩊\"], [\"\\u0026cupdot;\", \"⊍\"], [\"\\u0026cupor;\", \"⩅\"], [\"\\u0026cups;\", \"∪︀\"], [\"\\u0026curarr;\", \"↷\"], [\"\\u0026curarrm;\", \"⤼\"], [\"\\u0026curlyeqprec;\", \"⋞\"], [\"\\u0026curlyeqsucc;\", \"⋟\"], [\"\\u0026curlyvee;\", \"⋎\"], [\"\\u0026curlywedge;\", \"⋏\"], [\"\\u0026curren;\", \"¤\"], [\"\\u0026curren\", \"¤\"], [\"\\u0026curvearrowleft;\", \"↶\"], [\"\\u0026curvearrowright;\", \"↷\"], [\"\\u0026cuvee;\", \"⋎\"], [\"\\u0026cuwed;\", \"⋏\"], [\"\\u0026cwconint;\", \"∲\"], [\"\\u0026cwint;\", \"∱\"], [\"\\u0026cylcty;\", \"⌭\"], [\"\\u0026dagger;\", \"†\"], [\"\\u0026Dagger;\", \"‡\"], [\"\\u0026daleth;\", \"ℸ\"], [\"\\u0026darr;\", \"↓\"], [\"\\u0026Darr;\", \"↡\"], [\"\\u0026dArr;\", \"⇓\"], [\"\\u0026dash;\", \"‐\"], [\"\\u0026Dashv;\", \"⫤\"], [\"\\u0026dashv;\", \"⊣\"], [\"\\u0026dbkarow;\", \"⤏\"], [\"\\u0026dblac;\", \"˝\"], [\"\\u0026Dcaron;\", \"Ď\"], [\"\\u0026dcaron;\", \"ď\"], [\"\\u0026Dcy;\", \"Д\"], [\"\\u0026dcy;\", \"д\"], [\"\\u0026ddagger;\", \"‡\"], [\"\\u0026ddarr;\", \"⇊\"], [\"\\u0026DD;\", \"ⅅ\"], [\"\\u0026dd;\", \"ⅆ\"], [\"\\u0026DDotrahd;\", \"⤑\"], [\"\\u0026ddotseq;\", \"⩷\"], [\"\\u0026deg;\", \"°\"], [\"\\u0026deg\", \"°\"], [\"\\u0026Del;\", \"∇\"], [\"\\u0026Delta;\", \"Δ\"], [\"\\u0026delta;\", \"δ\"], [\"\\u0026demptyv;\", \"⦱\"], [\"\\u0026dfisht;\", \"⥿\"], [\"\\u0026Dfr;\", \"𝔇\"], [\"\\u0026dfr;\", \"𝔡\"], [\"\\u0026dHar;\", \"⥥\"], [\"\\u0026dharl;\", \"⇃\"], [\"\\u0026dharr;\", \"⇂\"], [\"\\u0026DiacriticalAcute;\", \"´\"], [\"\\u0026DiacriticalDot;\", \"˙\"], [\"\\u0026DiacriticalDoubleAcute;\", \"˝\"], [\"\\u0026DiacriticalGrave;\", \"`\"], [\"\\u0026DiacriticalTilde;\", \"˜\"], [\"\\u0026diam;\", \"⋄\"], [\"\\u0026diamond;\", \"⋄\"], [\"\\u0026Diamond;\", \"⋄\"], [\"\\u0026diamondsuit;\", \"♦\"], [\"\\u0026diams;\", \"♦\"], [\"\\u0026die;\", \"¨\"], [\"\\u0026DifferentialD;\", \"ⅆ\"], [\"\\u0026digamma;\", \"ϝ\"], [\"\\u0026disin;\", \"⋲\"], [\"\\u0026div;\", \"÷\"], [\"\\u0026divide;\", \"÷\"], [\"\\u0026divide\", \"÷\"], [\"\\u0026divideontimes;\", \"⋇\"], [\"\\u0026divonx;\", \"⋇\"], [\"\\u0026DJcy;\", \"Ђ\"], [\"\\u0026djcy;\", \"ђ\"], [\"\\u0026dlcorn;\", \"⌞\"], [\"\\u0026dlcrop;\", \"⌍\"], [\"\\u0026dollar;\", \"$\"], [\"\\u0026Dopf;\", \"𝔻\"], [\"\\u0026dopf;\", \"𝕕\"], [\"\\u0026Dot;\", \"¨\"], [\"\\u0026dot;\", \"˙\"], [\"\\u0026DotDot;\", \"⃜\"], [\"\\u0026doteq;\", \"≐\"], [\"\\u0026doteqdot;\", \"≑\"], [\"\\u0026DotEqual;\", \"≐\"], [\"\\u0026dotminus;\", \"∸\"], [\"\\u0026dotplus;\", \"∔\"], [\"\\u0026dotsquare;\", \"⊡\"], [\"\\u0026doublebarwedge;\", \"⌆\"], [\"\\u0026DoubleContourIntegral;\", \"∯\"], [\"\\u0026DoubleDot;\", \"¨\"], [\"\\u0026DoubleDownArrow;\", \"⇓\"], [\"\\u0026DoubleLeftArrow;\", \"⇐\"], [\"\\u0026DoubleLeftRightArrow;\", \"⇔\"], [\"\\u0026DoubleLeftTee;\", \"⫤\"], [\"\\u0026DoubleLongLeftArrow;\", \"⟸\"], [\"\\u0026DoubleLongLeftRightArrow;\", \"⟺\"], [\"\\u0026DoubleLongRightArrow;\", \"⟹\"], [\"\\u0026DoubleRightArrow;\", \"⇒\"], [\"\\u0026DoubleRightTee;\", \"⊨\"], [\"\\u0026DoubleUpArrow;\", \"⇑\"], [\"\\u0026DoubleUpDownArrow;\", \"⇕\"], [\"\\u0026DoubleVerticalBar;\", \"∥\"], [\"\\u0026DownArrowBar;\", \"⤓\"], [\"\\u0026downarrow;\", \"↓\"], [\"\\u0026DownArrow;\", \"↓\"], [\"\\u0026Downarrow;\", \"⇓\"], [\"\\u0026DownArrowUpArrow;\", \"⇵\"], [\"\\u0026DownBreve;\", \"̑\"], [\"\\u0026downdownarrows;\", \"⇊\"], [\"\\u0026downharpoonleft;\", \"⇃\"], [\"\\u0026downharpoonright;\", \"⇂\"], [\"\\u0026DownLeftRightVector;\", \"⥐\"], [\"\\u0026DownLeftTeeVector;\", \"⥞\"], [\"\\u0026DownLeftVectorBar;\", \"⥖\"], [\"\\u0026DownLeftVector;\", \"↽\"], [\"\\u0026DownRightTeeVector;\", \"⥟\"], [\"\\u0026DownRightVectorBar;\", \"⥗\"], [\"\\u0026DownRightVector;\", \"⇁\"], [\"\\u0026DownTeeArrow;\", \"↧\"], [\"\\u0026DownTee;\", \"⊤\"], [\"\\u0026drbkarow;\", \"⤐\"], [\"\\u0026drcorn;\", \"⌟\"], [\"\\u0026drcrop;\", \"⌌\"], [\"\\u0026Dscr;\", \"𝒟\"], [\"\\u0026dscr;\", \"𝒹\"], [\"\\u0026DScy;\", \"Ѕ\"], [\"\\u0026dscy;\", \"ѕ\"], [\"\\u0026dsol;\", \"⧶\"], [\"\\u0026Dstrok;\", \"Đ\"], [\"\\u0026dstrok;\", \"đ\"], [\"\\u0026dtdot;\", \"⋱\"], [\"\\u0026dtri;\", \"▿\"], [\"\\u0026dtrif;\", \"▾\"], [\"\\u0026duarr;\", \"⇵\"], [\"\\u0026duhar;\", \"⥯\"], [\"\\u0026dwangle;\", \"⦦\"], [\"\\u0026DZcy;\", \"Џ\"], [\"\\u0026dzcy;\", \"џ\"], [\"\\u0026dzigrarr;\", \"⟿\"], [\"\\u0026Eacute;\", \"É\"], [\"\\u0026Eacute\", \"É\"], [\"\\u0026eacute;\", \"é\"], [\"\\u0026eacute\", \"é\"], [\"\\u0026easter;\", \"⩮\"], [\"\\u0026Ecaron;\", \"Ě\"], [\"\\u0026ecaron;\", \"ě\"], [\"\\u0026Ecirc;\", \"Ê\"], [\"\\u0026Ecirc\", \"Ê\"], [\"\\u0026ecirc;\", \"ê\"], [\"\\u0026ecirc\", \"ê\"], [\"\\u0026ecir;\", \"≖\"], [\"\\u0026ecolon;\", \"≕\"], [\"\\u0026Ecy;\", \"Э\"], [\"\\u0026ecy;\", \"э\"], [\"\\u0026eDDot;\", \"⩷\"], [\"\\u0026Edot;\", \"Ė\"], [\"\\u0026edot;\", \"ė\"], [\"\\u0026eDot;\", \"≑\"], [\"\\u0026ee;\", \"ⅇ\"], [\"\\u0026efDot;\", \"≒\"], [\"\\u0026Efr;\", \"𝔈\"], [\"\\u0026efr;\", \"𝔢\"], [\"\\u0026eg;\", \"⪚\"], [\"\\u0026Egrave;\", \"È\"], [\"\\u0026Egrave\", \"È\"], [\"\\u0026egrave;\", \"è\"], [\"\\u0026egrave\", \"è\"], [\"\\u0026egs;\", \"⪖\"], [\"\\u0026egsdot;\", \"⪘\"], [\"\\u0026el;\", \"⪙\"], [\"\\u0026Element;\", \"∈\"], [\"\\u0026elinters;\", \"⏧\"], [\"\\u0026ell;\", \"ℓ\"], [\"\\u0026els;\", \"⪕\"], [\"\\u0026elsdot;\", \"⪗\"], [\"\\u0026Emacr;\", \"Ē\"], [\"\\u0026emacr;\", \"ē\"], [\"\\u0026empty;\", \"∅\"], [\"\\u0026emptyset;\", \"∅\"], [\"\\u0026EmptySmallSquare;\", \"◻\"], [\"\\u0026emptyv;\", \"∅\"], [\"\\u0026EmptyVerySmallSquare;\", \"▫\"], [\"\\u0026emsp13;\", \" \"], [\"\\u0026emsp14;\", \" \"], [\"\\u0026emsp;\", \" \"], [\"\\u0026ENG;\", \"Ŋ\"], [\"\\u0026eng;\", \"ŋ\"], [\"\\u0026ensp;\", \" \"], [\"\\u0026Eogon;\", \"Ę\"], [\"\\u0026eogon;\", \"ę\"], [\"\\u0026Eopf;\", \"𝔼\"], [\"\\u0026eopf;\", \"𝕖\"], [\"\\u0026epar;\", \"⋕\"], [\"\\u0026eparsl;\", \"⧣\"], [\"\\u0026eplus;\", \"⩱\"], [\"\\u0026epsi;\", \"ε\"], [\"\\u0026Epsilon;\", \"Ε\"], [\"\\u0026epsilon;\", \"ε\"], [\"\\u0026epsiv;\", \"ϵ\"], [\"\\u0026eqcirc;\", \"≖\"], [\"\\u0026eqcolon;\", \"≕\"], [\"\\u0026eqsim;\", \"≂\"], [\"\\u0026eqslantgtr;\", \"⪖\"], [\"\\u0026eqslantless;\", \"⪕\"], [\"\\u0026Equal;\", \"⩵\"], [\"\\u0026equals;\", \"=\"], [\"\\u0026EqualTilde;\", \"≂\"], [\"\\u0026equest;\", \"≟\"], [\"\\u0026Equilibrium;\", \"⇌\"], [\"\\u0026equiv;\", \"≡\"], [\"\\u0026equivDD;\", \"⩸\"], [\"\\u0026eqvparsl;\", \"⧥\"], [\"\\u0026erarr;\", \"⥱\"], [\"\\u0026erDot;\", \"≓\"], [\"\\u0026escr;\", \"ℯ\"], [\"\\u0026Escr;\", \"ℰ\"], [\"\\u0026esdot;\", \"≐\"], [\"\\u0026Esim;\", \"⩳\"], [\"\\u0026esim;\", \"≂\"], [\"\\u0026Eta;\", \"Η\"], [\"\\u0026eta;\", \"η\"], [\"\\u0026ETH;\", \"Ð\"], [\"\\u0026ETH\", \"Ð\"], [\"\\u0026eth;\", \"ð\"], [\"\\u0026eth\", \"ð\"], [\"\\u0026Euml;\", \"Ë\"], [\"\\u0026Euml\", \"Ë\"], [\"\\u0026euml;\", \"ë\"], [\"\\u0026euml\", \"ë\"], [\"\\u0026euro;\", \"€\"], [\"\\u0026excl;\", \"!\"], [\"\\u0026exist;\", \"∃\"], [\"\\u0026Exists;\", \"∃\"], [\"\\u0026expectation;\", \"ℰ\"], [\"\\u0026exponentiale;\", \"ⅇ\"], [\"\\u0026ExponentialE;\", \"ⅇ\"], [\"\\u0026fallingdotseq;\", \"≒\"], [\"\\u0026Fcy;\", \"Ф\"], [\"\\u0026fcy;\", \"ф\"], [\"\\u0026female;\", \"♀\"], [\"\\u0026ffilig;\", \"ﬃ\"], [\"\\u0026fflig;\", \"ﬀ\"], [\"\\u0026ffllig;\", \"ﬄ\"], [\"\\u0026Ffr;\", \"𝔉\"], [\"\\u0026ffr;\", \"𝔣\"], [\"\\u0026filig;\", \"ﬁ\"], [\"\\u0026FilledSmallSquare;\", \"◼\"], [\"\\u0026FilledVerySmallSquare;\", \"▪\"], [\"\\u0026fjlig;\", \"fj\"], [\"\\u0026flat;\", \"♭\"], [\"\\u0026fllig;\", \"ﬂ\"], [\"\\u0026fltns;\", \"▱\"], [\"\\u0026fnof;\", \"ƒ\"], [\"\\u0026Fopf;\", \"𝔽\"], [\"\\u0026fopf;\", \"𝕗\"], [\"\\u0026forall;\", \"∀\"], [\"\\u0026ForAll;\", \"∀\"], [\"\\u0026fork;\", \"⋔\"], [\"\\u0026forkv;\", \"⫙\"], [\"\\u0026Fouriertrf;\", \"ℱ\"], [\"\\u0026fpartint;\", \"⨍\"], [\"\\u0026frac12;\", \"½\"], [\"\\u0026frac12\", \"½\"], [\"\\u0026frac13;\", \"⅓\"], [\"\\u0026frac14;\", \"¼\"], [\"\\u0026frac14\", \"¼\"], [\"\\u0026frac15;\", \"⅕\"], [\"\\u0026frac16;\", \"⅙\"], [\"\\u0026frac18;\", \"⅛\"], [\"\\u0026frac23;\", \"⅔\"], [\"\\u0026frac25;\", \"⅖\"], [\"\\u0026frac34;\", \"¾\"], [\"\\u0026frac34\", \"¾\"], [\"\\u0026frac35;\", \"⅗\"], [\"\\u0026frac38;\", \"⅜\"], [\"\\u0026frac45;\", \"⅘\"], [\"\\u0026frac56;\", \"⅚\"], [\"\\u0026frac58;\", \"⅝\"], [\"\\u0026frac78;\", \"⅞\"], [\"\\u0026frasl;\", \"⁄\"], [\"\\u0026frown;\", \"⌢\"], [\"\\u0026fscr;\", \"𝒻\"], [\"\\u0026Fscr;\", \"ℱ\"], [\"\\u0026gacute;\", \"ǵ\"], [\"\\u0026Gamma;\", \"Γ\"], [\"\\u0026gamma;\", \"γ\"], [\"\\u0026Gammad;\", \"Ϝ\"], [\"\\u0026gammad;\", \"ϝ\"], [\"\\u0026gap;\", \"⪆\"], [\"\\u0026Gbreve;\", \"Ğ\"], [\"\\u0026gbreve;\", \"ğ\"], [\"\\u0026Gcedil;\", \"Ģ\"], [\"\\u0026Gcirc;\", \"Ĝ\"], [\"\\u0026gcirc;\", \"ĝ\"], [\"\\u0026Gcy;\", \"Г\"], [\"\\u0026gcy;\", \"г\"], [\"\\u0026Gdot;\", \"Ġ\"], [\"\\u0026gdot;\", \"ġ\"], [\"\\u0026ge;\", \"≥\"], [\"\\u0026gE;\", \"≧\"], [\"\\u0026gEl;\", \"⪌\"], [\"\\u0026gel;\", \"⋛\"], [\"\\u0026geq;\", \"≥\"], [\"\\u0026geqq;\", \"≧\"], [\"\\u0026geqslant;\", \"⩾\"], [\"\\u0026gescc;\", \"⪩\"], [\"\\u0026ges;\", \"⩾\"], [\"\\u0026gesdot;\", \"⪀\"], [\"\\u0026gesdoto;\", \"⪂\"], [\"\\u0026gesdotol;\", \"⪄\"], [\"\\u0026gesl;\", \"⋛︀\"], [\"\\u0026gesles;\", \"⪔\"], [\"\\u0026Gfr;\", \"𝔊\"], [\"\\u0026gfr;\", \"𝔤\"], [\"\\u0026gg;\", \"≫\"], [\"\\u0026Gg;\", \"⋙\"], [\"\\u0026ggg;\", \"⋙\"], [\"\\u0026gimel;\", \"ℷ\"], [\"\\u0026GJcy;\", \"Ѓ\"], [\"\\u0026gjcy;\", \"ѓ\"], [\"\\u0026gla;\", \"⪥\"], [\"\\u0026gl;\", \"≷\"], [\"\\u0026glE;\", \"⪒\"], [\"\\u0026glj;\", \"⪤\"], [\"\\u0026gnap;\", \"⪊\"], [\"\\u0026gnapprox;\", \"⪊\"], [\"\\u0026gne;\", \"⪈\"], [\"\\u0026gnE;\", \"≩\"], [\"\\u0026gneq;\", \"⪈\"], [\"\\u0026gneqq;\", \"≩\"], [\"\\u0026gnsim;\", \"⋧\"], [\"\\u0026Gopf;\", \"𝔾\"], [\"\\u0026gopf;\", \"𝕘\"], [\"\\u0026grave;\", \"`\"], [\"\\u0026GreaterEqual;\", \"≥\"], [\"\\u0026GreaterEqualLess;\", \"⋛\"], [\"\\u0026GreaterFullEqual;\", \"≧\"], [\"\\u0026GreaterGreater;\", \"⪢\"], [\"\\u0026GreaterLess;\", \"≷\"], [\"\\u0026GreaterSlantEqual;\", \"⩾\"], [\"\\u0026GreaterTilde;\", \"≳\"], [\"\\u0026Gscr;\", \"𝒢\"], [\"\\u0026gscr;\", \"ℊ\"], [\"\\u0026gsim;\", \"≳\"], [\"\\u0026gsime;\", \"⪎\"], [\"\\u0026gsiml;\", \"⪐\"], [\"\\u0026gtcc;\", \"⪧\"], [\"\\u0026gtcir;\", \"⩺\"], [\"\\u0026gt;\", \"\\u003e\"], [\"\\u0026gt\", \"\\u003e\"], [\"\\u0026GT;\", \"\\u003e\"], [\"\\u0026GT\", \"\\u003e\"], [\"\\u0026Gt;\", \"≫\"], [\"\\u0026gtdot;\", \"⋗\"], [\"\\u0026gtlPar;\", \"⦕\"], [\"\\u0026gtquest;\", \"⩼\"], [\"\\u0026gtrapprox;\", \"⪆\"], [\"\\u0026gtrarr;\", \"⥸\"], [\"\\u0026gtrdot;\", \"⋗\"], [\"\\u0026gtreqless;\", \"⋛\"], [\"\\u0026gtreqqless;\", \"⪌\"], [\"\\u0026gtrless;\", \"≷\"], [\"\\u0026gtrsim;\", \"≳\"], [\"\\u0026gvertneqq;\", \"≩︀\"], [\"\\u0026gvnE;\", \"≩︀\"], [\"\\u0026Hacek;\", \"ˇ\"], [\"\\u0026hairsp;\", \" \"], [\"\\u0026half;\", \"½\"], [\"\\u0026hamilt;\", \"ℋ\"], [\"\\u0026HARDcy;\", \"Ъ\"], [\"\\u0026hardcy;\", \"ъ\"], [\"\\u0026harrcir;\", \"⥈\"], [\"\\u0026harr;\", \"↔\"], [\"\\u0026hArr;\", \"⇔\"], [\"\\u0026harrw;\", \"↭\"], [\"\\u0026Hat;\", \"^\"], [\"\\u0026hbar;\", \"ℏ\"], [\"\\u0026Hcirc;\", \"Ĥ\"], [\"\\u0026hcirc;\", \"ĥ\"], [\"\\u0026hearts;\", \"♥\"], [\"\\u0026heartsuit;\", \"♥\"], [\"\\u0026hellip;\", \"…\"], [\"\\u0026hercon;\", \"⊹\"], [\"\\u0026hfr;\", \"𝔥\"], [\"\\u0026Hfr;\", \"ℌ\"], [\"\\u0026HilbertSpace;\", \"ℋ\"], [\"\\u0026hksearow;\", \"⤥\"], [\"\\u0026hkswarow;\", \"⤦\"], [\"\\u0026hoarr;\", \"⇿\"], [\"\\u0026homtht;\", \"∻\"], [\"\\u0026hookleftarrow;\", \"↩\"], [\"\\u0026hookrightarrow;\", \"↪\"], [\"\\u0026hopf;\", \"𝕙\"], [\"\\u0026Hopf;\", \"ℍ\"], [\"\\u0026horbar;\", \"―\"], [\"\\u0026HorizontalLine;\", \"─\"], [\"\\u0026hscr;\", \"𝒽\"], [\"\\u0026Hscr;\", \"ℋ\"], [\"\\u0026hslash;\", \"ℏ\"], [\"\\u0026Hstrok;\", \"Ħ\"], [\"\\u0026hstrok;\", \"ħ\"], [\"\\u0026HumpDownHump;\", \"≎\"], [\"\\u0026HumpEqual;\", \"≏\"], [\"\\u0026hybull;\", \"⁃\"], [\"\\u0026hyphen;\", \"‐\"], [\"\\u0026Iacute;\", \"Í\"], [\"\\u0026Iacute\", \"Í\"], [\"\\u0026iacute;\", \"í\"], [\"\\u0026iacute\", \"í\"], [\"\\u0026ic;\", \"⁣\"], [\"\\u0026Icirc;\", \"Î\"], [\"\\u0026Icirc\", \"Î\"], [\"\\u0026icirc;\", \"î\"], [\"\\u0026icirc\", \"î\"], [\"\\u0026Icy;\", \"И\"], [\"\\u0026icy;\", \"и\"], [\"\\u0026Idot;\", \"İ\"], [\"\\u0026IEcy;\", \"Е\"], [\"\\u0026iecy;\", \"е\"], [\"\\u0026iexcl;\", \"¡\"], [\"\\u0026iexcl\", \"¡\"], [\"\\u0026iff;\", \"⇔\"], [\"\\u0026ifr;\", \"𝔦\"], [\"\\u0026Ifr;\", \"ℑ\"], [\"\\u0026Igrave;\", \"Ì\"], [\"\\u0026Igrave\", \"Ì\"], [\"\\u0026igrave;\", \"ì\"], [\"\\u0026igrave\", \"ì\"], [\"\\u0026ii;\", \"ⅈ\"], [\"\\u0026iiiint;\", \"⨌\"], [\"\\u0026iiint;\", \"∭\"], [\"\\u0026iinfin;\", \"⧜\"], [\"\\u0026iiota;\", \"℩\"], [\"\\u0026IJlig;\", \"Ĳ\"], [\"\\u0026ijlig;\", \"ĳ\"], [\"\\u0026Imacr;\", \"Ī\"], [\"\\u0026imacr;\", \"ī\"], [\"\\u0026image;\", \"ℑ\"], [\"\\u0026ImaginaryI;\", \"ⅈ\"], [\"\\u0026imagline;\", \"ℐ\"], [\"\\u0026imagpart;\", \"ℑ\"], [\"\\u0026imath;\", \"ı\"], [\"\\u0026Im;\", \"ℑ\"], [\"\\u0026imof;\", \"⊷\"], [\"\\u0026imped;\", \"Ƶ\"], [\"\\u0026Implies;\", \"⇒\"], [\"\\u0026incare;\", \"℅\"], [\"\\u0026in;\", \"∈\"], [\"\\u0026infin;\", \"∞\"], [\"\\u0026infintie;\", \"⧝\"], [\"\\u0026inodot;\", \"ı\"], [\"\\u0026intcal;\", \"⊺\"], [\"\\u0026int;\", \"∫\"], [\"\\u0026Int;\", \"∬\"], [\"\\u0026integers;\", \"ℤ\"], [\"\\u0026Integral;\", \"∫\"], [\"\\u0026intercal;\", \"⊺\"], [\"\\u0026Intersection;\", \"⋂\"], [\"\\u0026intlarhk;\", \"⨗\"], [\"\\u0026intprod;\", \"⨼\"], [\"\\u0026InvisibleComma;\", \"⁣\"], [\"\\u0026InvisibleTimes;\", \"⁢\"], [\"\\u0026IOcy;\", \"Ё\"], [\"\\u0026iocy;\", \"ё\"], [\"\\u0026Iogon;\", \"Į\"], [\"\\u0026iogon;\", \"į\"], [\"\\u0026Iopf;\", \"𝕀\"], [\"\\u0026iopf;\", \"𝕚\"], [\"\\u0026Iota;\", \"Ι\"], [\"\\u0026iota;\", \"ι\"], [\"\\u0026iprod;\", \"⨼\"], [\"\\u0026iquest;\", \"¿\"], [\"\\u0026iquest\", \"¿\"], [\"\\u0026iscr;\", \"𝒾\"], [\"\\u0026Iscr;\", \"ℐ\"], [\"\\u0026isin;\", \"∈\"], [\"\\u0026isindot;\", \"⋵\"], [\"\\u0026isinE;\", \"⋹\"], [\"\\u0026isins;\", \"⋴\"], [\"\\u0026isinsv;\", \"⋳\"], [\"\\u0026isinv;\", \"∈\"], [\"\\u0026it;\", \"⁢\"], [\"\\u0026Itilde;\", \"Ĩ\"], [\"\\u0026itilde;\", \"ĩ\"], [\"\\u0026Iukcy;\", \"І\"], [\"\\u0026iukcy;\", \"і\"], [\"\\u0026Iuml;\", \"Ï\"], [\"\\u0026Iuml\", \"Ï\"], [\"\\u0026iuml;\", \"ï\"], [\"\\u0026iuml\", \"ï\"], [\"\\u0026Jcirc;\", \"Ĵ\"], [\"\\u0026jcirc;\", \"ĵ\"], [\"\\u0026Jcy;\", \"Й\"], [\"\\u0026jcy;\", \"й\"], [\"\\u0026Jfr;\", \"𝔍\"], [\"\\u0026jfr;\", \"𝔧\"], [\"\\u0026jmath;\", \"ȷ\"], [\"\\u0026Jopf;\", \"𝕁\"], [\"\\u0026jopf;\", \"𝕛\"], [\"\\u0026Jscr;\", \"𝒥\"], [\"\\u0026jscr;\", \"𝒿\"], [\"\\u0026Jsercy;\", \"Ј\"], [\"\\u0026jsercy;\", \"ј\"], [\"\\u0026Jukcy;\", \"Є\"], [\"\\u0026jukcy;\", \"є\"], [\"\\u0026Kappa;\", \"Κ\"], [\"\\u0026kappa;\", \"κ\"], [\"\\u0026kappav;\", \"ϰ\"], [\"\\u0026Kcedil;\", \"Ķ\"], [\"\\u0026kcedil;\", \"ķ\"], [\"\\u0026Kcy;\", \"К\"], [\"\\u0026kcy;\", \"к\"], [\"\\u0026Kfr;\", \"𝔎\"], [\"\\u0026kfr;\", \"𝔨\"], [\"\\u0026kgreen;\", \"ĸ\"], [\"\\u0026KHcy;\", \"Х\"], [\"\\u0026khcy;\", \"х\"], [\"\\u0026KJcy;\", \"Ќ\"], [\"\\u0026kjcy;\", \"ќ\"], [\"\\u0026Kopf;\", \"𝕂\"], [\"\\u0026kopf;\", \"𝕜\"], [\"\\u0026Kscr;\", \"𝒦\"], [\"\\u0026kscr;\", \"𝓀\"], [\"\\u0026lAarr;\", \"⇚\"], [\"\\u0026Lacute;\", \"Ĺ\"], [\"\\u0026lacute;\", \"ĺ\"], [\"\\u0026laemptyv;\", \"⦴\"], [\"\\u0026lagran;\", \"ℒ\"], [\"\\u0026Lambda;\", \"Λ\"], [\"\\u0026lambda;\", \"λ\"], [\"\\u0026lang;\", \"⟨\"], [\"\\u0026Lang;\", \"⟪\"], [\"\\u0026langd;\", \"⦑\"], [\"\\u0026langle;\", \"⟨\"], [\"\\u0026lap;\", \"⪅\"], [\"\\u0026Laplacetrf;\", \"ℒ\"], [\"\\u0026laquo;\", \"«\"], [\"\\u0026laquo\", \"«\"], [\"\\u0026larrb;\", \"⇤\"], [\"\\u0026larrbfs;\", \"⤟\"], [\"\\u0026larr;\", \"←\"], [\"\\u0026Larr;\", \"↞\"], [\"\\u0026lArr;\", \"⇐\"], [\"\\u0026larrfs;\", \"⤝\"], [\"\\u0026larrhk;\", \"↩\"], [\"\\u0026larrlp;\", \"↫\"], [\"\\u0026larrpl;\", \"⤹\"], [\"\\u0026larrsim;\", \"⥳\"], [\"\\u0026larrtl;\", \"↢\"], [\"\\u0026latail;\", \"⤙\"], [\"\\u0026lAtail;\", \"⤛\"], [\"\\u0026lat;\", \"⪫\"], [\"\\u0026late;\", \"⪭\"], [\"\\u0026lates;\", \"⪭︀\"], [\"\\u0026lbarr;\", \"⤌\"], [\"\\u0026lBarr;\", \"⤎\"], [\"\\u0026lbbrk;\", \"❲\"], [\"\\u0026lbrace;\", \"{\"], [\"\\u0026lbrack;\", \"[\"], [\"\\u0026lbrke;\", \"⦋\"], [\"\\u0026lbrksld;\", \"⦏\"], [\"\\u0026lbrkslu;\", \"⦍\"], [\"\\u0026Lcaron;\", \"Ľ\"], [\"\\u0026lcaron;\", \"ľ\"], [\"\\u0026Lcedil;\", \"Ļ\"], [\"\\u0026lcedil;\", \"ļ\"], [\"\\u0026lceil;\", \"⌈\"], [\"\\u0026lcub;\", \"{\"], [\"\\u0026Lcy;\", \"Л\"], [\"\\u0026lcy;\", \"л\"], [\"\\u0026ldca;\", \"⤶\"], [\"\\u0026ldquo;\", \"“\"], [\"\\u0026ldquor;\", \"„\"], [\"\\u0026ldrdhar;\", \"⥧\"], [\"\\u0026ldrushar;\", \"⥋\"], [\"\\u0026ldsh;\", \"↲\"], [\"\\u0026le;\", \"≤\"], [\"\\u0026lE;\", \"≦\"], [\"\\u0026LeftAngleBracket;\", \"⟨\"], [\"\\u0026LeftArrowBar;\", \"⇤\"], [\"\\u0026leftarrow;\", \"←\"], [\"\\u0026LeftArrow;\", \"←\"], [\"\\u0026Leftarrow;\", \"⇐\"], [\"\\u0026LeftArrowRightArrow;\", \"⇆\"], [\"\\u0026leftarrowtail;\", \"↢\"], [\"\\u0026LeftCeiling;\", \"⌈\"], [\"\\u0026LeftDoubleBracket;\", \"⟦\"], [\"\\u0026LeftDownTeeVector;\", \"⥡\"], [\"\\u0026LeftDownVectorBar;\", \"⥙\"], [\"\\u0026LeftDownVector;\", \"⇃\"], [\"\\u0026LeftFloor;\", \"⌊\"], [\"\\u0026leftharpoondown;\", \"↽\"], [\"\\u0026leftharpoonup;\", \"↼\"], [\"\\u0026leftleftarrows;\", \"⇇\"], [\"\\u0026leftrightarrow;\", \"↔\"], [\"\\u0026LeftRightArrow;\", \"↔\"], [\"\\u0026Leftrightarrow;\", \"⇔\"], [\"\\u0026leftrightarrows;\", \"⇆\"], [\"\\u0026leftrightharpoons;\", \"⇋\"], [\"\\u0026leftrightsquigarrow;\", \"↭\"], [\"\\u0026LeftRightVector;\", \"⥎\"], [\"\\u0026LeftTeeArrow;\", \"↤\"], [\"\\u0026LeftTee;\", \"⊣\"], [\"\\u0026LeftTeeVector;\", \"⥚\"], [\"\\u0026leftthreetimes;\", \"⋋\"], [\"\\u0026LeftTriangleBar;\", \"⧏\"], [\"\\u0026LeftTriangle;\", \"⊲\"], [\"\\u0026LeftTriangleEqual;\", \"⊴\"], [\"\\u0026LeftUpDownVector;\", \"⥑\"], [\"\\u0026LeftUpTeeVector;\", \"⥠\"], [\"\\u0026LeftUpVectorBar;\", \"⥘\"], [\"\\u0026LeftUpVector;\", \"↿\"], [\"\\u0026LeftVectorBar;\", \"⥒\"], [\"\\u0026LeftVector;\", \"↼\"], [\"\\u0026lEg;\", \"⪋\"], [\"\\u0026leg;\", \"⋚\"], [\"\\u0026leq;\", \"≤\"], [\"\\u0026leqq;\", \"≦\"], [\"\\u0026leqslant;\", \"⩽\"], [\"\\u0026lescc;\", \"⪨\"], [\"\\u0026les;\", \"⩽\"], [\"\\u0026lesdot;\", \"⩿\"], [\"\\u0026lesdoto;\", \"⪁\"], [\"\\u0026lesdotor;\", \"⪃\"], [\"\\u0026lesg;\", \"⋚︀\"], [\"\\u0026lesges;\", \"⪓\"], [\"\\u0026lessapprox;\", \"⪅\"], [\"\\u0026lessdot;\", \"⋖\"], [\"\\u0026lesseqgtr;\", \"⋚\"], [\"\\u0026lesseqqgtr;\", \"⪋\"], [\"\\u0026LessEqualGreater;\", \"⋚\"], [\"\\u0026LessFullEqual;\", \"≦\"], [\"\\u0026LessGreater;\", \"≶\"], [\"\\u0026lessgtr;\", \"≶\"], [\"\\u0026LessLess;\", \"⪡\"], [\"\\u0026lesssim;\", \"≲\"], [\"\\u0026LessSlantEqual;\", \"⩽\"], [\"\\u0026LessTilde;\", \"≲\"], [\"\\u0026lfisht;\", \"⥼\"], [\"\\u0026lfloor;\", \"⌊\"], [\"\\u0026Lfr;\", \"𝔏\"], [\"\\u0026lfr;\", \"𝔩\"], [\"\\u0026lg;\", \"≶\"], [\"\\u0026lgE;\", \"⪑\"], [\"\\u0026lHar;\", \"⥢\"], [\"\\u0026lhard;\", \"↽\"], [\"\\u0026lharu;\", \"↼\"], [\"\\u0026lharul;\", \"⥪\"], [\"\\u0026lhblk;\", \"▄\"], [\"\\u0026LJcy;\", \"Љ\"], [\"\\u0026ljcy;\", \"љ\"], [\"\\u0026llarr;\", \"⇇\"], [\"\\u0026ll;\", \"≪\"], [\"\\u0026Ll;\", \"⋘\"], [\"\\u0026llcorner;\", \"⌞\"], [\"\\u0026Lleftarrow;\", \"⇚\"], [\"\\u0026llhard;\", \"⥫\"], [\"\\u0026lltri;\", \"◺\"], [\"\\u0026Lmidot;\", \"Ŀ\"], [\"\\u0026lmidot;\", \"ŀ\"], [\"\\u0026lmoustache;\", \"⎰\"], [\"\\u0026lmoust;\", \"⎰\"], [\"\\u0026lnap;\", \"⪉\"], [\"\\u0026lnapprox;\", \"⪉\"], [\"\\u0026lne;\", \"⪇\"], [\"\\u0026lnE;\", \"≨\"], [\"\\u0026lneq;\", \"⪇\"], [\"\\u0026lneqq;\", \"≨\"], [\"\\u0026lnsim;\", \"⋦\"], [\"\\u0026loang;\", \"⟬\"], [\"\\u0026loarr;\", \"⇽\"], [\"\\u0026lobrk;\", \"⟦\"], [\"\\u0026longleftarrow;\", \"⟵\"], [\"\\u0026LongLeftArrow;\", \"⟵\"], [\"\\u0026Longleftarrow;\", \"⟸\"], [\"\\u0026longleftrightarrow;\", \"⟷\"], [\"\\u0026LongLeftRightArrow;\", \"⟷\"], [\"\\u0026Longleftrightarrow;\", \"⟺\"], [\"\\u0026longmapsto;\", \"⟼\"], [\"\\u0026longrightarrow;\", \"⟶\"], [\"\\u0026LongRightArrow;\", \"⟶\"], [\"\\u0026Longrightarrow;\", \"⟹\"], [\"\\u0026looparrowleft;\", \"↫\"], [\"\\u0026looparrowright;\", \"↬\"], [\"\\u0026lopar;\", \"⦅\"], [\"\\u0026Lopf;\", \"𝕃\"], [\"\\u0026lopf;\", \"𝕝\"], [\"\\u0026loplus;\", \"⨭\"], [\"\\u0026lotimes;\", \"⨴\"], [\"\\u0026lowast;\", \"∗\"], [\"\\u0026lowbar;\", \"_\"], [\"\\u0026LowerLeftArrow;\", \"↙\"], [\"\\u0026LowerRightArrow;\", \"↘\"], [\"\\u0026loz;\", \"◊\"], [\"\\u0026lozenge;\", \"◊\"], [\"\\u0026lozf;\", \"⧫\"], [\"\\u0026lpar;\", \"(\"], [\"\\u0026lparlt;\", \"⦓\"], [\"\\u0026lrarr;\", \"⇆\"], [\"\\u0026lrcorner;\", \"⌟\"], [\"\\u0026lrhar;\", \"⇋\"], [\"\\u0026lrhard;\", \"⥭\"], [\"\\u0026lrm;\", \"‎\"], [\"\\u0026lrtri;\", \"⊿\"], [\"\\u0026lsaquo;\", \"‹\"], [\"\\u0026lscr;\", \"𝓁\"], [\"\\u0026Lscr;\", \"ℒ\"], [\"\\u0026lsh;\", \"↰\"], [\"\\u0026Lsh;\", \"↰\"], [\"\\u0026lsim;\", \"≲\"], [\"\\u0026lsime;\", \"⪍\"], [\"\\u0026lsimg;\", \"⪏\"], [\"\\u0026lsqb;\", \"[\"], [\"\\u0026lsquo;\", \"‘\"], [\"\\u0026lsquor;\", \"‚\"], [\"\\u0026Lstrok;\", \"Ł\"], [\"\\u0026lstrok;\", \"ł\"], [\"\\u0026ltcc;\", \"⪦\"], [\"\\u0026ltcir;\", \"⩹\"], [\"\\u0026lt;\", \"\\u003c\"], [\"\\u0026lt\", \"\\u003c\"], [\"\\u0026LT;\", \"\\u003c\"], [\"\\u0026LT\", \"\\u003c\"], [\"\\u0026Lt;\", \"≪\"], [\"\\u0026ltdot;\", \"⋖\"], [\"\\u0026lthree;\", \"⋋\"], [\"\\u0026ltimes;\", \"⋉\"], [\"\\u0026ltlarr;\", \"⥶\"], [\"\\u0026ltquest;\", \"⩻\"], [\"\\u0026ltri;\", \"◃\"], [\"\\u0026ltrie;\", \"⊴\"], [\"\\u0026ltrif;\", \"◂\"], [\"\\u0026ltrPar;\", \"⦖\"], [\"\\u0026lurdshar;\", \"⥊\"], [\"\\u0026luruhar;\", \"⥦\"], [\"\\u0026lvertneqq;\", \"≨︀\"], [\"\\u0026lvnE;\", \"≨︀\"], [\"\\u0026macr;\", \"¯\"], [\"\\u0026macr\", \"¯\"], [\"\\u0026male;\", \"♂\"], [\"\\u0026malt;\", \"✠\"], [\"\\u0026maltese;\", \"✠\"], [\"\\u0026Map;\", \"⤅\"], [\"\\u0026map;\", \"↦\"], [\"\\u0026mapsto;\", \"↦\"], [\"\\u0026mapstodown;\", \"↧\"], [\"\\u0026mapstoleft;\", \"↤\"], [\"\\u0026mapstoup;\", \"↥\"], [\"\\u0026marker;\", \"▮\"], [\"\\u0026mcomma;\", \"⨩\"], [\"\\u0026Mcy;\", \"М\"], [\"\\u0026mcy;\", \"м\"], [\"\\u0026mdash;\", \"—\"], [\"\\u0026mDDot;\", \"∺\"], [\"\\u0026measuredangle;\", \"∡\"], [\"\\u0026MediumSpace;\", \" \"], [\"\\u0026Mellintrf;\", \"ℳ\"], [\"\\u0026Mfr;\", \"𝔐\"], [\"\\u0026mfr;\", \"𝔪\"], [\"\\u0026mho;\", \"℧\"], [\"\\u0026micro;\", \"µ\"], [\"\\u0026micro\", \"µ\"], [\"\\u0026midast;\", \"*\"], [\"\\u0026midcir;\", \"⫰\"], [\"\\u0026mid;\", \"∣\"], [\"\\u0026middot;\", \"·\"], [\"\\u0026middot\", \"·\"], [\"\\u0026minusb;\", \"⊟\"], [\"\\u0026minus;\", \"−\"], [\"\\u0026minusd;\", \"∸\"], [\"\\u0026minusdu;\", \"⨪\"], [\"\\u0026MinusPlus;\", \"∓\"], [\"\\u0026mlcp;\", \"⫛\"], [\"\\u0026mldr;\", \"…\"], [\"\\u0026mnplus;\", \"∓\"], [\"\\u0026models;\", \"⊧\"], [\"\\u0026Mopf;\", \"𝕄\"], [\"\\u0026mopf;\", \"𝕞\"], [\"\\u0026mp;\", \"∓\"], [\"\\u0026mscr;\", \"𝓂\"], [\"\\u0026Mscr;\", \"ℳ\"], [\"\\u0026mstpos;\", \"∾\"], [\"\\u0026Mu;\", \"Μ\"], [\"\\u0026mu;\", \"μ\"], [\"\\u0026multimap;\", \"⊸\"], [\"\\u0026mumap;\", \"⊸\"], [\"\\u0026nabla;\", \"∇\"], [\"\\u0026Nacute;\", \"Ń\"], [\"\\u0026nacute;\", \"ń\"], [\"\\u0026nang;\", \"∠⃒\"], [\"\\u0026nap;\", \"≉\"], [\"\\u0026napE;\", \"⩰̸\"], [\"\\u0026napid;\", \"≋̸\"], [\"\\u0026napos;\", \"ŉ\"], [\"\\u0026napprox;\", \"≉\"], [\"\\u0026natural;\", \"♮\"], [\"\\u0026naturals;\", \"ℕ\"], [\"\\u0026natur;\", \"♮\"], [\"\\u0026nbsp;\", \" \"], [\"\\u0026nbsp\", \" \"], [\"\\u0026nbump;\", \"≎̸\"], [\"\\u0026nbumpe;\", \"≏̸\"], [\"\\u0026ncap;\", \"⩃\"], [\"\\u0026Ncaron;\", \"Ň\"], [\"\\u0026ncaron;\", \"ň\"], [\"\\u0026Ncedil;\", \"Ņ\"], [\"\\u0026ncedil;\", \"ņ\"], [\"\\u0026ncong;\", \"≇\"], [\"\\u0026ncongdot;\", \"⩭̸\"], [\"\\u0026ncup;\", \"⩂\"], [\"\\u0026Ncy;\", \"Н\"], [\"\\u0026ncy;\", \"н\"], [\"\\u0026ndash;\", \"–\"], [\"\\u0026nearhk;\", \"⤤\"], [\"\\u0026nearr;\", \"↗\"], [\"\\u0026neArr;\", \"⇗\"], [\"\\u0026nearrow;\", \"↗\"], [\"\\u0026ne;\", \"≠\"], [\"\\u0026nedot;\", \"≐̸\"], [\"\\u0026NegativeMediumSpace;\", \"​\"], [\"\\u0026NegativeThickSpace;\", \"​\"], [\"\\u0026NegativeThinSpace;\", \"​\"], [\"\\u0026NegativeVeryThinSpace;\", \"​\"], [\"\\u0026nequiv;\", \"≢\"], [\"\\u0026nesear;\", \"⤨\"], [\"\\u0026nesim;\", \"≂̸\"], [\"\\u0026NestedGreaterGreater;\", \"≫\"], [\"\\u0026NestedLessLess;\", \"≪\"], [\"\\u0026NewLine;\", \"\\n\"], [\"\\u0026nexist;\", \"∄\"], [\"\\u0026nexists;\", \"∄\"], [\"\\u0026Nfr;\", \"𝔑\"], [\"\\u0026nfr;\", \"𝔫\"], [\"\\u0026ngE;\", \"≧̸\"], [\"\\u0026nge;\", \"≱\"], [\"\\u0026ngeq;\", \"≱\"], [\"\\u0026ngeqq;\", \"≧̸\"], [\"\\u0026ngeqslant;\", \"⩾̸\"], [\"\\u0026nges;\", \"⩾̸\"], [\"\\u0026nGg;\", \"⋙̸\"], [\"\\u0026ngsim;\", \"≵\"], [\"\\u0026nGt;\", \"≫⃒\"], [\"\\u0026ngt;\", \"≯\"], [\"\\u0026ngtr;\", \"≯\"], [\"\\u0026nGtv;\", \"≫̸\"], [\"\\u0026nharr;\", \"↮\"], [\"\\u0026nhArr;\", \"⇎\"], [\"\\u0026nhpar;\", \"⫲\"], [\"\\u0026ni;\", \"∋\"], [\"\\u0026nis;\", \"⋼\"], [\"\\u0026nisd;\", \"⋺\"], [\"\\u0026niv;\", \"∋\"], [\"\\u0026NJcy;\", \"Њ\"], [\"\\u0026njcy;\", \"њ\"], [\"\\u0026nlarr;\", \"↚\"], [\"\\u0026nlArr;\", \"⇍\"], [\"\\u0026nldr;\", \"‥\"], [\"\\u0026nlE;\", \"≦̸\"], [\"\\u0026nle;\", \"≰\"], [\"\\u0026nleftarrow;\", \"↚\"], [\"\\u0026nLeftarrow;\", \"⇍\"], [\"\\u0026nleftrightarrow;\", \"↮\"], [\"\\u0026nLeftrightarrow;\", \"⇎\"], [\"\\u0026nleq;\", \"≰\"], [\"\\u0026nleqq;\", \"≦̸\"], [\"\\u0026nleqslant;\", \"⩽̸\"], [\"\\u0026nles;\", \"⩽̸\"], [\"\\u0026nless;\", \"≮\"], [\"\\u0026nLl;\", \"⋘̸\"], [\"\\u0026nlsim;\", \"≴\"], [\"\\u0026nLt;\", \"≪⃒\"], [\"\\u0026nlt;\", \"≮\"], [\"\\u0026nltri;\", \"⋪\"], [\"\\u0026nltrie;\", \"⋬\"], [\"\\u0026nLtv;\", \"≪̸\"], [\"\\u0026nmid;\", \"∤\"], [\"\\u0026NoBreak;\", \"⁠\"], [\"\\u0026NonBreakingSpace;\", \" \"], [\"\\u0026nopf;\", \"𝕟\"], [\"\\u0026Nopf;\", \"ℕ\"], [\"\\u0026Not;\", \"⫬\"], [\"\\u0026not;\", \"¬\"], [\"\\u0026not\", \"¬\"], [\"\\u0026NotCongruent;\", \"≢\"], [\"\\u0026NotCupCap;\", \"≭\"], [\"\\u0026NotDoubleVerticalBar;\", \"∦\"], [\"\\u0026NotElement;\", \"∉\"], [\"\\u0026NotEqual;\", \"≠\"], [\"\\u0026NotEqualTilde;\", \"≂̸\"], [\"\\u0026NotExists;\", \"∄\"], [\"\\u0026NotGreater;\", \"≯\"], [\"\\u0026NotGreaterEqual;\", \"≱\"], [\"\\u0026NotGreaterFullEqual;\", \"≧̸\"], [\"\\u0026NotGreaterGreater;\", \"≫̸\"], [\"\\u0026NotGreaterLess;\", \"≹\"], [\"\\u0026NotGreaterSlantEqual;\", \"⩾̸\"], [\"\\u0026NotGreaterTilde;\", \"≵\"], [\"\\u0026NotHumpDownHump;\", \"≎̸\"], [\"\\u0026NotHumpEqual;\", \"≏̸\"], [\"\\u0026notin;\", \"∉\"], [\"\\u0026notindot;\", \"⋵̸\"], [\"\\u0026notinE;\", \"⋹̸\"], [\"\\u0026notinva;\", \"∉\"], [\"\\u0026notinvb;\", \"⋷\"], [\"\\u0026notinvc;\", \"⋶\"], [\"\\u0026NotLeftTriangleBar;\", \"⧏̸\"], [\"\\u0026NotLeftTriangle;\", \"⋪\"], [\"\\u0026NotLeftTriangleEqual;\", \"⋬\"], [\"\\u0026NotLess;\", \"≮\"], [\"\\u0026NotLessEqual;\", \"≰\"], [\"\\u0026NotLessGreater;\", \"≸\"], [\"\\u0026NotLessLess;\", \"≪̸\"], [\"\\u0026NotLessSlantEqual;\", \"⩽̸\"], [\"\\u0026NotLessTilde;\", \"≴\"], [\"\\u0026NotNestedGreaterGreater;\", \"⪢̸\"], [\"\\u0026NotNestedLessLess;\", \"⪡̸\"], [\"\\u0026notni;\", \"∌\"], [\"\\u0026notniva;\", \"∌\"], [\"\\u0026notnivb;\", \"⋾\"], [\"\\u0026notnivc;\", \"⋽\"], [\"\\u0026NotPrecedes;\", \"⊀\"], [\"\\u0026NotPrecedesEqual;\", \"⪯̸\"], [\"\\u0026NotPrecedesSlantEqual;\", \"⋠\"], [\"\\u0026NotReverseElement;\", \"∌\"], [\"\\u0026NotRightTriangleBar;\", \"⧐̸\"], [\"\\u0026NotRightTriangle;\", \"⋫\"], [\"\\u0026NotRightTriangleEqual;\", \"⋭\"], [\"\\u0026NotSquareSubset;\", \"⊏̸\"], [\"\\u0026NotSquareSubsetEqual;\", \"⋢\"], [\"\\u0026NotSquareSuperset;\", \"⊐̸\"], [\"\\u0026NotSquareSupersetEqual;\", \"⋣\"], [\"\\u0026NotSubset;\", \"⊂⃒\"], [\"\\u0026NotSubsetEqual;\", \"⊈\"], [\"\\u0026NotSucceeds;\", \"⊁\"], [\"\\u0026NotSucceedsEqual;\", \"⪰̸\"], [\"\\u0026NotSucceedsSlantEqual;\", \"⋡\"], [\"\\u0026NotSucceedsTilde;\", \"≿̸\"], [\"\\u0026NotSuperset;\", \"⊃⃒\"], [\"\\u0026NotSupersetEqual;\", \"⊉\"], [\"\\u0026NotTilde;\", \"≁\"], [\"\\u0026NotTildeEqual;\", \"≄\"], [\"\\u0026NotTildeFullEqual;\", \"≇\"], [\"\\u0026NotTildeTilde;\", \"≉\"], [\"\\u0026NotVerticalBar;\", \"∤\"], [\"\\u0026nparallel;\", \"∦\"], [\"\\u0026npar;\", \"∦\"], [\"\\u0026nparsl;\", \"⫽⃥\"], [\"\\u0026npart;\", \"∂̸\"], [\"\\u0026npolint;\", \"⨔\"], [\"\\u0026npr;\", \"⊀\"], [\"\\u0026nprcue;\", \"⋠\"], [\"\\u0026nprec;\", \"⊀\"], [\"\\u0026npreceq;\", \"⪯̸\"], [\"\\u0026npre;\", \"⪯̸\"], [\"\\u0026nrarrc;\", \"⤳̸\"], [\"\\u0026nrarr;\", \"↛\"], [\"\\u0026nrArr;\", \"⇏\"], [\"\\u0026nrarrw;\", \"↝̸\"], [\"\\u0026nrightarrow;\", \"↛\"], [\"\\u0026nRightarrow;\", \"⇏\"], [\"\\u0026nrtri;\", \"⋫\"], [\"\\u0026nrtrie;\", \"⋭\"], [\"\\u0026nsc;\", \"⊁\"], [\"\\u0026nsccue;\", \"⋡\"], [\"\\u0026nsce;\", \"⪰̸\"], [\"\\u0026Nscr;\", \"𝒩\"], [\"\\u0026nscr;\", \"𝓃\"], [\"\\u0026nshortmid;\", \"∤\"], [\"\\u0026nshortparallel;\", \"∦\"], [\"\\u0026nsim;\", \"≁\"], [\"\\u0026nsime;\", \"≄\"], [\"\\u0026nsimeq;\", \"≄\"], [\"\\u0026nsmid;\", \"∤\"], [\"\\u0026nspar;\", \"∦\"], [\"\\u0026nsqsube;\", \"⋢\"], [\"\\u0026nsqsupe;\", \"⋣\"], [\"\\u0026nsub;\", \"⊄\"], [\"\\u0026nsubE;\", \"⫅̸\"], [\"\\u0026nsube;\", \"⊈\"], [\"\\u0026nsubset;\", \"⊂⃒\"], [\"\\u0026nsubseteq;\", \"⊈\"], [\"\\u0026nsubseteqq;\", \"⫅̸\"], [\"\\u0026nsucc;\", \"⊁\"], [\"\\u0026nsucceq;\", \"⪰̸\"], [\"\\u0026nsup;\", \"⊅\"], [\"\\u0026nsupE;\", \"⫆̸\"], [\"\\u0026nsupe;\", \"⊉\"], [\"\\u0026nsupset;\", \"⊃⃒\"], [\"\\u0026nsupseteq;\", \"⊉\"], [\"\\u0026nsupseteqq;\", \"⫆̸\"], [\"\\u0026ntgl;\", \"≹\"], [\"\\u0026Ntilde;\", \"Ñ\"], [\"\\u0026Ntilde\", \"Ñ\"], [\"\\u0026ntilde;\", \"ñ\"], [\"\\u0026ntilde\", \"ñ\"], [\"\\u0026ntlg;\", \"≸\"], [\"\\u0026ntriangleleft;\", \"⋪\"], [\"\\u0026ntrianglelefteq;\", \"⋬\"], [\"\\u0026ntriangleright;\", \"⋫\"], [\"\\u0026ntrianglerighteq;\", \"⋭\"], [\"\\u0026Nu;\", \"Ν\"], [\"\\u0026nu;\", \"ν\"], [\"\\u0026num;\", \"#\"], [\"\\u0026numero;\", \"№\"], [\"\\u0026numsp;\", \" \"], [\"\\u0026nvap;\", \"≍⃒\"], [\"\\u0026nvdash;\", \"⊬\"], [\"\\u0026nvDash;\", \"⊭\"], [\"\\u0026nVdash;\", \"⊮\"], [\"\\u0026nVDash;\", \"⊯\"], [\"\\u0026nvge;\", \"≥⃒\"], [\"\\u0026nvgt;\", \"\\u003e⃒\"], [\"\\u0026nvHarr;\", \"⤄\"], [\"\\u0026nvinfin;\", \"⧞\"], [\"\\u0026nvlArr;\", \"⤂\"], [\"\\u0026nvle;\", \"≤⃒\"], [\"\\u0026nvlt;\", \"\\u003c⃒\"], [\"\\u0026nvltrie;\", \"⊴⃒\"], [\"\\u0026nvrArr;\", \"⤃\"], [\"\\u0026nvrtrie;\", \"⊵⃒\"], [\"\\u0026nvsim;\", \"∼⃒\"], [\"\\u0026nwarhk;\", \"⤣\"], [\"\\u0026nwarr;\", \"↖\"], [\"\\u0026nwArr;\", \"⇖\"], [\"\\u0026nwarrow;\", \"↖\"], [\"\\u0026nwnear;\", \"⤧\"], [\"\\u0026Oacute;\", \"Ó\"], [\"\\u0026Oacute\", \"Ó\"], [\"\\u0026oacute;\", \"ó\"], [\"\\u0026oacute\", \"ó\"], [\"\\u0026oast;\", \"⊛\"], [\"\\u0026Ocirc;\", \"Ô\"], [\"\\u0026Ocirc\", \"Ô\"], [\"\\u0026ocirc;\", \"ô\"], [\"\\u0026ocirc\", \"ô\"], [\"\\u0026ocir;\", \"⊚\"], [\"\\u0026Ocy;\", \"О\"], [\"\\u0026ocy;\", \"о\"], [\"\\u0026odash;\", \"⊝\"], [\"\\u0026Odblac;\", \"Ő\"], [\"\\u0026odblac;\", \"ő\"], [\"\\u0026odiv;\", \"⨸\"], [\"\\u0026odot;\", \"⊙\"], [\"\\u0026odsold;\", \"⦼\"], [\"\\u0026OElig;\", \"Œ\"], [\"\\u0026oelig;\", \"œ\"], [\"\\u0026ofcir;\", \"⦿\"], [\"\\u0026Ofr;\", \"𝔒\"], [\"\\u0026ofr;\", \"𝔬\"], [\"\\u0026ogon;\", \"˛\"], [\"\\u0026Ograve;\", \"Ò\"], [\"\\u0026Ograve\", \"Ò\"], [\"\\u0026ograve;\", \"ò\"], [\"\\u0026ograve\", \"ò\"], [\"\\u0026ogt;\", \"⧁\"], [\"\\u0026ohbar;\", \"⦵\"], [\"\\u0026ohm;\", \"Ω\"], [\"\\u0026oint;\", \"∮\"], [\"\\u0026olarr;\", \"↺\"], [\"\\u0026olcir;\", \"⦾\"], [\"\\u0026olcross;\", \"⦻\"], [\"\\u0026oline;\", \"‾\"], [\"\\u0026olt;\", \"⧀\"], [\"\\u0026Omacr;\", \"Ō\"], [\"\\u0026omacr;\", \"ō\"], [\"\\u0026Omega;\", \"Ω\"], [\"\\u0026omega;\", \"ω\"], [\"\\u0026Omicron;\", \"Ο\"], [\"\\u0026omicron;\", \"ο\"], [\"\\u0026omid;\", \"⦶\"], [\"\\u0026ominus;\", \"⊖\"], [\"\\u0026Oopf;\", \"𝕆\"], [\"\\u0026oopf;\", \"𝕠\"], [\"\\u0026opar;\", \"⦷\"], [\"\\u0026OpenCurlyDoubleQuote;\", \"“\"], [\"\\u0026OpenCurlyQuote;\", \"‘\"], [\"\\u0026operp;\", \"⦹\"], [\"\\u0026oplus;\", \"⊕\"], [\"\\u0026orarr;\", \"↻\"], [\"\\u0026Or;\", \"⩔\"], [\"\\u0026or;\", \"∨\"], [\"\\u0026ord;\", \"⩝\"], [\"\\u0026order;\", \"ℴ\"], [\"\\u0026orderof;\", \"ℴ\"], [\"\\u0026ordf;\", \"ª\"], [\"\\u0026ordf\", \"ª\"], [\"\\u0026ordm;\", \"º\"], [\"\\u0026ordm\", \"º\"], [\"\\u0026origof;\", \"⊶\"], [\"\\u0026oror;\", \"⩖\"], [\"\\u0026orslope;\", \"⩗\"], [\"\\u0026orv;\", \"⩛\"], [\"\\u0026oS;\", \"Ⓢ\"], [\"\\u0026Oscr;\", \"𝒪\"], [\"\\u0026oscr;\", \"ℴ\"], [\"\\u0026Oslash;\", \"Ø\"], [\"\\u0026Oslash\", \"Ø\"], [\"\\u0026oslash;\", \"ø\"], [\"\\u0026oslash\", \"ø\"], [\"\\u0026osol;\", \"⊘\"], [\"\\u0026Otilde;\", \"Õ\"], [\"\\u0026Otilde\", \"Õ\"], [\"\\u0026otilde;\", \"õ\"], [\"\\u0026otilde\", \"õ\"], [\"\\u0026otimesas;\", \"⨶\"], [\"\\u0026Otimes;\", \"⨷\"], [\"\\u0026otimes;\", \"⊗\"], [\"\\u0026Ouml;\", \"Ö\"], [\"\\u0026Ouml\", \"Ö\"], [\"\\u0026ouml;\", \"ö\"], [\"\\u0026ouml\", \"ö\"], [\"\\u0026ovbar;\", \"⌽\"], [\"\\u0026OverBar;\", \"‾\"], [\"\\u0026OverBrace;\", \"⏞\"], [\"\\u0026OverBracket;\", \"⎴\"], [\"\\u0026OverParenthesis;\", \"⏜\"], [\"\\u0026para;\", \"¶\"], [\"\\u0026para\", \"¶\"], [\"\\u0026parallel;\", \"∥\"], [\"\\u0026par;\", \"∥\"], [\"\\u0026parsim;\", \"⫳\"], [\"\\u0026parsl;\", \"⫽\"], [\"\\u0026part;\", \"∂\"], [\"\\u0026PartialD;\", \"∂\"], [\"\\u0026Pcy;\", \"П\"], [\"\\u0026pcy;\", \"п\"], [\"\\u0026percnt;\", \"%\"], [\"\\u0026period;\", \".\"], [\"\\u0026permil;\", \"‰\"], [\"\\u0026perp;\", \"⊥\"], [\"\\u0026pertenk;\", \"‱\"], [\"\\u0026Pfr;\", \"𝔓\"], [\"\\u0026pfr;\", \"𝔭\"], [\"\\u0026Phi;\", \"Φ\"], [\"\\u0026phi;\", \"φ\"], [\"\\u0026phiv;\", \"ϕ\"], [\"\\u0026phmmat;\", \"ℳ\"], [\"\\u0026phone;\", \"☎\"], [\"\\u0026Pi;\", \"Π\"], [\"\\u0026pi;\", \"π\"], [\"\\u0026pitchfork;\", \"⋔\"], [\"\\u0026piv;\", \"ϖ\"], [\"\\u0026planck;\", \"ℏ\"], [\"\\u0026planckh;\", \"ℎ\"], [\"\\u0026plankv;\", \"ℏ\"], [\"\\u0026plusacir;\", \"⨣\"], [\"\\u0026plusb;\", \"⊞\"], [\"\\u0026pluscir;\", \"⨢\"], [\"\\u0026plus;\", \"+\"], [\"\\u0026plusdo;\", \"∔\"], [\"\\u0026plusdu;\", \"⨥\"], [\"\\u0026pluse;\", \"⩲\"], [\"\\u0026PlusMinus;\", \"±\"], [\"\\u0026plusmn;\", \"±\"], [\"\\u0026plusmn\", \"±\"], [\"\\u0026plussim;\", \"⨦\"], [\"\\u0026plustwo;\", \"⨧\"], [\"\\u0026pm;\", \"±\"], [\"\\u0026Poincareplane;\", \"ℌ\"], [\"\\u0026pointint;\", \"⨕\"], [\"\\u0026popf;\", \"𝕡\"], [\"\\u0026Popf;\", \"ℙ\"], [\"\\u0026pound;\", \"£\"], [\"\\u0026pound\", \"£\"], [\"\\u0026prap;\", \"⪷\"], [\"\\u0026Pr;\", \"⪻\"], [\"\\u0026pr;\", \"≺\"], [\"\\u0026prcue;\", \"≼\"], [\"\\u0026precapprox;\", \"⪷\"], [\"\\u0026prec;\", \"≺\"], [\"\\u0026preccurlyeq;\", \"≼\"], [\"\\u0026Precedes;\", \"≺\"], [\"\\u0026PrecedesEqual;\", \"⪯\"], [\"\\u0026PrecedesSlantEqual;\", \"≼\"], [\"\\u0026PrecedesTilde;\", \"≾\"], [\"\\u0026preceq;\", \"⪯\"], [\"\\u0026precnapprox;\", \"⪹\"], [\"\\u0026precneqq;\", \"⪵\"], [\"\\u0026precnsim;\", \"⋨\"], [\"\\u0026pre;\", \"⪯\"], [\"\\u0026prE;\", \"⪳\"], [\"\\u0026precsim;\", \"≾\"], [\"\\u0026prime;\", \"′\"], [\"\\u0026Prime;\", \"″\"], [\"\\u0026primes;\", \"ℙ\"], [\"\\u0026prnap;\", \"⪹\"], [\"\\u0026prnE;\", \"⪵\"], [\"\\u0026prnsim;\", \"⋨\"], [\"\\u0026prod;\", \"∏\"], [\"\\u0026Product;\", \"∏\"], [\"\\u0026profalar;\", \"⌮\"], [\"\\u0026profline;\", \"⌒\"], [\"\\u0026profsurf;\", \"⌓\"], [\"\\u0026prop;\", \"∝\"], [\"\\u0026Proportional;\", \"∝\"], [\"\\u0026Proportion;\", \"∷\"], [\"\\u0026propto;\", \"∝\"], [\"\\u0026prsim;\", \"≾\"], [\"\\u0026prurel;\", \"⊰\"], [\"\\u0026Pscr;\", \"𝒫\"], [\"\\u0026pscr;\", \"𝓅\"], [\"\\u0026Psi;\", \"Ψ\"], [\"\\u0026psi;\", \"ψ\"], [\"\\u0026puncsp;\", \" \"], [\"\\u0026Qfr;\", \"𝔔\"], [\"\\u0026qfr;\", \"𝔮\"], [\"\\u0026qint;\", \"⨌\"], [\"\\u0026qopf;\", \"𝕢\"], [\"\\u0026Qopf;\", \"ℚ\"], [\"\\u0026qprime;\", \"⁗\"], [\"\\u0026Qscr;\", \"𝒬\"], [\"\\u0026qscr;\", \"𝓆\"], [\"\\u0026quaternions;\", \"ℍ\"], [\"\\u0026quatint;\", \"⨖\"], [\"\\u0026quest;\", \"?\"], [\"\\u0026questeq;\", \"≟\"], [\"\\u0026quot;\", \"\\\"\"], [\"\\u0026quot\", \"\\\"\"], [\"\\u0026QUOT;\", \"\\\"\"], [\"\\u0026QUOT\", \"\\\"\"], [\"\\u0026rAarr;\", \"⇛\"], [\"\\u0026race;\", \"∽̱\"], [\"\\u0026Racute;\", \"Ŕ\"], [\"\\u0026racute;\", \"ŕ\"], [\"\\u0026radic;\", \"√\"], [\"\\u0026raemptyv;\", \"⦳\"], [\"\\u0026rang;\", \"⟩\"], [\"\\u0026Rang;\", \"⟫\"], [\"\\u0026rangd;\", \"⦒\"], [\"\\u0026range;\", \"⦥\"], [\"\\u0026rangle;\", \"⟩\"], [\"\\u0026raquo;\", \"»\"], [\"\\u0026raquo\", \"»\"], [\"\\u0026rarrap;\", \"⥵\"], [\"\\u0026rarrb;\", \"⇥\"], [\"\\u0026rarrbfs;\", \"⤠\"], [\"\\u0026rarrc;\", \"⤳\"], [\"\\u0026rarr;\", \"→\"], [\"\\u0026Rarr;\", \"↠\"], [\"\\u0026rArr;\", \"⇒\"], [\"\\u0026rarrfs;\", \"⤞\"], [\"\\u0026rarrhk;\", \"↪\"], [\"\\u0026rarrlp;\", \"↬\"], [\"\\u0026rarrpl;\", \"⥅\"], [\"\\u0026rarrsim;\", \"⥴\"], [\"\\u0026Rarrtl;\", \"⤖\"], [\"\\u0026rarrtl;\", \"↣\"], [\"\\u0026rarrw;\", \"↝\"], [\"\\u0026ratail;\", \"⤚\"], [\"\\u0026rAtail;\", \"⤜\"], [\"\\u0026ratio;\", \"∶\"], [\"\\u0026rationals;\", \"ℚ\"], [\"\\u0026rbarr;\", \"⤍\"], [\"\\u0026rBarr;\", \"⤏\"], [\"\\u0026RBarr;\", \"⤐\"], [\"\\u0026rbbrk;\", \"❳\"], [\"\\u0026rbrace;\", \"}\"], [\"\\u0026rbrack;\", \"]\"], [\"\\u0026rbrke;\", \"⦌\"], [\"\\u0026rbrksld;\", \"⦎\"], [\"\\u0026rbrkslu;\", \"⦐\"], [\"\\u0026Rcaron;\", \"Ř\"], [\"\\u0026rcaron;\", \"ř\"], [\"\\u0026Rcedil;\", \"Ŗ\"], [\"\\u0026rcedil;\", \"ŗ\"], [\"\\u0026rceil;\", \"⌉\"], [\"\\u0026rcub;\", \"}\"], [\"\\u0026Rcy;\", \"Р\"], [\"\\u0026rcy;\", \"р\"], [\"\\u0026rdca;\", \"⤷\"], [\"\\u0026rdldhar;\", \"⥩\"], [\"\\u0026rdquo;\", \"”\"], [\"\\u0026rdquor;\", \"”\"], [\"\\u0026rdsh;\", \"↳\"], [\"\\u0026real;\", \"ℜ\"], [\"\\u0026realine;\", \"ℛ\"], [\"\\u0026realpart;\", \"ℜ\"], [\"\\u0026reals;\", \"ℝ\"], [\"\\u0026Re;\", \"ℜ\"], [\"\\u0026rect;\", \"▭\"], [\"\\u0026reg;\", \"®\"], [\"\\u0026reg\", \"®\"], [\"\\u0026REG;\", \"®\"], [\"\\u0026REG\", \"®\"], [\"\\u0026ReverseElement;\", \"∋\"], [\"\\u0026ReverseEquilibrium;\", \"⇋\"], [\"\\u0026ReverseUpEquilibrium;\", \"⥯\"], [\"\\u0026rfisht;\", \"⥽\"], [\"\\u0026rfloor;\", \"⌋\"], [\"\\u0026rfr;\", \"𝔯\"], [\"\\u0026Rfr;\", \"ℜ\"], [\"\\u0026rHar;\", \"⥤\"], [\"\\u0026rhard;\", \"⇁\"], [\"\\u0026rharu;\", \"⇀\"], [\"\\u0026rharul;\", \"⥬\"], [\"\\u0026Rho;\", \"Ρ\"], [\"\\u0026rho;\", \"ρ\"], [\"\\u0026rhov;\", \"ϱ\"], [\"\\u0026RightAngleBracket;\", \"⟩\"], [\"\\u0026RightArrowBar;\", \"⇥\"], [\"\\u0026rightarrow;\", \"→\"], [\"\\u0026RightArrow;\", \"→\"], [\"\\u0026Rightarrow;\", \"⇒\"], [\"\\u0026RightArrowLeftArrow;\", \"⇄\"], [\"\\u0026rightarrowtail;\", \"↣\"], [\"\\u0026RightCeiling;\", \"⌉\"], [\"\\u0026RightDoubleBracket;\", \"⟧\"], [\"\\u0026RightDownTeeVector;\", \"⥝\"], [\"\\u0026RightDownVectorBar;\", \"⥕\"], [\"\\u0026RightDownVector;\", \"⇂\"], [\"\\u0026RightFloor;\", \"⌋\"], [\"\\u0026rightharpoondown;\", \"⇁\"], [\"\\u0026rightharpoonup;\", \"⇀\"], [\"\\u0026rightleftarrows;\", \"⇄\"], [\"\\u0026rightleftharpoons;\", \"⇌\"], [\"\\u0026rightrightarrows;\", \"⇉\"], [\"\\u0026rightsquigarrow;\", \"↝\"], [\"\\u0026RightTeeArrow;\", \"↦\"], [\"\\u0026RightTee;\", \"⊢\"], [\"\\u0026RightTeeVector;\", \"⥛\"], [\"\\u0026rightthreetimes;\", \"⋌\"], [\"\\u0026RightTriangleBar;\", \"⧐\"], [\"\\u0026RightTriangle;\", \"⊳\"], [\"\\u0026RightTriangleEqual;\", \"⊵\"], [\"\\u0026RightUpDownVector;\", \"⥏\"], [\"\\u0026RightUpTeeVector;\", \"⥜\"], [\"\\u0026RightUpVectorBar;\", \"⥔\"], [\"\\u0026RightUpVector;\", \"↾\"], [\"\\u0026RightVectorBar;\", \"⥓\"], [\"\\u0026RightVector;\", \"⇀\"], [\"\\u0026ring;\", \"˚\"], [\"\\u0026risingdotseq;\", \"≓\"], [\"\\u0026rlarr;\", \"⇄\"], [\"\\u0026rlhar;\", \"⇌\"], [\"\\u0026rlm;\", \"‏\"], [\"\\u0026rmoustache;\", \"⎱\"], [\"\\u0026rmoust;\", \"⎱\"], [\"\\u0026rnmid;\", \"⫮\"], [\"\\u0026roang;\", \"⟭\"], [\"\\u0026roarr;\", \"⇾\"], [\"\\u0026robrk;\", \"⟧\"], [\"\\u0026ropar;\", \"⦆\"], [\"\\u0026ropf;\", \"𝕣\"], [\"\\u0026Ropf;\", \"ℝ\"], [\"\\u0026roplus;\", \"⨮\"], [\"\\u0026rotimes;\", \"⨵\"], [\"\\u0026RoundImplies;\", \"⥰\"], [\"\\u0026rpar;\", \")\"], [\"\\u0026rpargt;\", \"⦔\"], [\"\\u0026rppolint;\", \"⨒\"], [\"\\u0026rrarr;\", \"⇉\"], [\"\\u0026Rrightarrow;\", \"⇛\"], [\"\\u0026rsaquo;\", \"›\"], [\"\\u0026rscr;\", \"𝓇\"], [\"\\u0026Rscr;\", \"ℛ\"], [\"\\u0026rsh;\", \"↱\"], [\"\\u0026Rsh;\", \"↱\"], [\"\\u0026rsqb;\", \"]\"], [\"\\u0026rsquo;\", \"’\"], [\"\\u0026rsquor;\", \"’\"], [\"\\u0026rthree;\", \"⋌\"], [\"\\u0026rtimes;\", \"⋊\"], [\"\\u0026rtri;\", \"▹\"], [\"\\u0026rtrie;\", \"⊵\"], [\"\\u0026rtrif;\", \"▸\"], [\"\\u0026rtriltri;\", \"⧎\"], [\"\\u0026RuleDelayed;\", \"⧴\"], [\"\\u0026ruluhar;\", \"⥨\"], [\"\\u0026rx;\", \"℞\"], [\"\\u0026Sacute;\", \"Ś\"], [\"\\u0026sacute;\", \"ś\"], [\"\\u0026sbquo;\", \"‚\"], [\"\\u0026scap;\", \"⪸\"], [\"\\u0026Scaron;\", \"Š\"], [\"\\u0026scaron;\", \"š\"], [\"\\u0026Sc;\", \"⪼\"], [\"\\u0026sc;\", \"≻\"], [\"\\u0026sccue;\", \"≽\"], [\"\\u0026sce;\", \"⪰\"], [\"\\u0026scE;\", \"⪴\"], [\"\\u0026Scedil;\", \"Ş\"], [\"\\u0026scedil;\", \"ş\"], [\"\\u0026Scirc;\", \"Ŝ\"], [\"\\u0026scirc;\", \"ŝ\"], [\"\\u0026scnap;\", \"⪺\"], [\"\\u0026scnE;\", \"⪶\"], [\"\\u0026scnsim;\", \"⋩\"], [\"\\u0026scpolint;\", \"⨓\"], [\"\\u0026scsim;\", \"≿\"], [\"\\u0026Scy;\", \"С\"], [\"\\u0026scy;\", \"с\"], [\"\\u0026sdotb;\", \"⊡\"], [\"\\u0026sdot;\", \"⋅\"], [\"\\u0026sdote;\", \"⩦\"], [\"\\u0026searhk;\", \"⤥\"], [\"\\u0026searr;\", \"↘\"], [\"\\u0026seArr;\", \"⇘\"], [\"\\u0026searrow;\", \"↘\"], [\"\\u0026sect;\", \"§\"], [\"\\u0026sect\", \"§\"], [\"\\u0026semi;\", \";\"], [\"\\u0026seswar;\", \"⤩\"], [\"\\u0026setminus;\", \"∖\"], [\"\\u0026setmn;\", \"∖\"], [\"\\u0026sext;\", \"✶\"], [\"\\u0026Sfr;\", \"𝔖\"], [\"\\u0026sfr;\", \"𝔰\"], [\"\\u0026sfrown;\", \"⌢\"], [\"\\u0026sharp;\", \"♯\"], [\"\\u0026SHCHcy;\", \"Щ\"], [\"\\u0026shchcy;\", \"щ\"], [\"\\u0026SHcy;\", \"Ш\"], [\"\\u0026shcy;\", \"ш\"], [\"\\u0026ShortDownArrow;\", \"↓\"], [\"\\u0026ShortLeftArrow;\", \"←\"], [\"\\u0026shortmid;\", \"∣\"], [\"\\u0026shortparallel;\", \"∥\"], [\"\\u0026ShortRightArrow;\", \"→\"], [\"\\u0026ShortUpArrow;\", \"↑\"], [\"\\u0026shy;\", \"­\"], [\"\\u0026shy\", \"­\"], [\"\\u0026Sigma;\", \"Σ\"], [\"\\u0026sigma;\", \"σ\"], [\"\\u0026sigmaf;\", \"ς\"], [\"\\u0026sigmav;\", \"ς\"], [\"\\u0026sim;\", \"∼\"], [\"\\u0026simdot;\", \"⩪\"], [\"\\u0026sime;\", \"≃\"], [\"\\u0026simeq;\", \"≃\"], [\"\\u0026simg;\", \"⪞\"], [\"\\u0026simgE;\", \"⪠\"], [\"\\u0026siml;\", \"⪝\"], [\"\\u0026simlE;\", \"⪟\"], [\"\\u0026simne;\", \"≆\"], [\"\\u0026simplus;\", \"⨤\"], [\"\\u0026simrarr;\", \"⥲\"], [\"\\u0026slarr;\", \"←\"], [\"\\u0026SmallCircle;\", \"∘\"], [\"\\u0026smallsetminus;\", \"∖\"], [\"\\u0026smashp;\", \"⨳\"], [\"\\u0026smeparsl;\", \"⧤\"], [\"\\u0026smid;\", \"∣\"], [\"\\u0026smile;\", \"⌣\"], [\"\\u0026smt;\", \"⪪\"], [\"\\u0026smte;\", \"⪬\"], [\"\\u0026smtes;\", \"⪬︀\"], [\"\\u0026SOFTcy;\", \"Ь\"], [\"\\u0026softcy;\", \"ь\"], [\"\\u0026solbar;\", \"⌿\"], [\"\\u0026solb;\", \"⧄\"], [\"\\u0026sol;\", \"/\"], [\"\\u0026Sopf;\", \"𝕊\"], [\"\\u0026sopf;\", \"𝕤\"], [\"\\u0026spades;\", \"♠\"], [\"\\u0026spadesuit;\", \"♠\"], [\"\\u0026spar;\", \"∥\"], [\"\\u0026sqcap;\", \"⊓\"], [\"\\u0026sqcaps;\", \"⊓︀\"], [\"\\u0026sqcup;\", \"⊔\"], [\"\\u0026sqcups;\", \"⊔︀\"], [\"\\u0026Sqrt;\", \"√\"], [\"\\u0026sqsub;\", \"⊏\"], [\"\\u0026sqsube;\", \"⊑\"], [\"\\u0026sqsubset;\", \"⊏\"], [\"\\u0026sqsubseteq;\", \"⊑\"], [\"\\u0026sqsup;\", \"⊐\"], [\"\\u0026sqsupe;\", \"⊒\"], [\"\\u0026sqsupset;\", \"⊐\"], [\"\\u0026sqsupseteq;\", \"⊒\"], [\"\\u0026square;\", \"□\"], [\"\\u0026Square;\", \"□\"], [\"\\u0026SquareIntersection;\", \"⊓\"], [\"\\u0026SquareSubset;\", \"⊏\"], [\"\\u0026SquareSubsetEqual;\", \"⊑\"], [\"\\u0026SquareSuperset;\", \"⊐\"], [\"\\u0026SquareSupersetEqual;\", \"⊒\"], [\"\\u0026SquareUnion;\", \"⊔\"], [\"\\u0026squarf;\", \"▪\"], [\"\\u0026squ;\", \"□\"], [\"\\u0026squf;\", \"▪\"], [\"\\u0026srarr;\", \"→\"], [\"\\u0026Sscr;\", \"𝒮\"], [\"\\u0026sscr;\", \"𝓈\"], [\"\\u0026ssetmn;\", \"∖\"], [\"\\u0026ssmile;\", \"⌣\"], [\"\\u0026sstarf;\", \"⋆\"], [\"\\u0026Star;\", \"⋆\"], [\"\\u0026star;\", \"☆\"], [\"\\u0026starf;\", \"★\"], [\"\\u0026straightepsilon;\", \"ϵ\"], [\"\\u0026straightphi;\", \"ϕ\"], [\"\\u0026strns;\", \"¯\"], [\"\\u0026sub;\", \"⊂\"], [\"\\u0026Sub;\", \"⋐\"], [\"\\u0026subdot;\", \"⪽\"], [\"\\u0026subE;\", \"⫅\"], [\"\\u0026sube;\", \"⊆\"], [\"\\u0026subedot;\", \"⫃\"], [\"\\u0026submult;\", \"⫁\"], [\"\\u0026subnE;\", \"⫋\"], [\"\\u0026subne;\", \"⊊\"], [\"\\u0026subplus;\", \"⪿\"], [\"\\u0026subrarr;\", \"⥹\"], [\"\\u0026subset;\", \"⊂\"], [\"\\u0026Subset;\", \"⋐\"], [\"\\u0026subseteq;\", \"⊆\"], [\"\\u0026subseteqq;\", \"⫅\"], [\"\\u0026SubsetEqual;\", \"⊆\"], [\"\\u0026subsetneq;\", \"⊊\"], [\"\\u0026subsetneqq;\", \"⫋\"], [\"\\u0026subsim;\", \"⫇\"], [\"\\u0026subsub;\", \"⫕\"], [\"\\u0026subsup;\", \"⫓\"], [\"\\u0026succapprox;\", \"⪸\"], [\"\\u0026succ;\", \"≻\"], [\"\\u0026succcurlyeq;\", \"≽\"], [\"\\u0026Succeeds;\", \"≻\"], [\"\\u0026SucceedsEqual;\", \"⪰\"], [\"\\u0026SucceedsSlantEqual;\", \"≽\"], [\"\\u0026SucceedsTilde;\", \"≿\"], [\"\\u0026succeq;\", \"⪰\"], [\"\\u0026succnapprox;\", \"⪺\"], [\"\\u0026succneqq;\", \"⪶\"], [\"\\u0026succnsim;\", \"⋩\"], [\"\\u0026succsim;\", \"≿\"], [\"\\u0026SuchThat;\", \"∋\"], [\"\\u0026sum;\", \"∑\"], [\"\\u0026Sum;\", \"∑\"], [\"\\u0026sung;\", \"♪\"], [\"\\u0026sup1;\", \"¹\"], [\"\\u0026sup1\", \"¹\"], [\"\\u0026sup2;\", \"²\"], [\"\\u0026sup2\", \"²\"], [\"\\u0026sup3;\", \"³\"], [\"\\u0026sup3\", \"³\"], [\"\\u0026sup;\", \"⊃\"], [\"\\u0026Sup;\", \"⋑\"], [\"\\u0026supdot;\", \"⪾\"], [\"\\u0026supdsub;\", \"⫘\"], [\"\\u0026supE;\", \"⫆\"], [\"\\u0026supe;\", \"⊇\"], [\"\\u0026supedot;\", \"⫄\"], [\"\\u0026Superset;\", \"⊃\"], [\"\\u0026SupersetEqual;\", \"⊇\"], [\"\\u0026suphsol;\", \"⟉\"], [\"\\u0026suphsub;\", \"⫗\"], [\"\\u0026suplarr;\", \"⥻\"], [\"\\u0026supmult;\", \"⫂\"], [\"\\u0026supnE;\", \"⫌\"], [\"\\u0026supne;\", \"⊋\"], [\"\\u0026supplus;\", \"⫀\"], [\"\\u0026supset;\", \"⊃\"], [\"\\u0026Supset;\", \"⋑\"], [\"\\u0026supseteq;\", \"⊇\"], [\"\\u0026supseteqq;\", \"⫆\"], [\"\\u0026supsetneq;\", \"⊋\"], [\"\\u0026supsetneqq;\", \"⫌\"], [\"\\u0026supsim;\", \"⫈\"], [\"\\u0026supsub;\", \"⫔\"], [\"\\u0026supsup;\", \"⫖\"], [\"\\u0026swarhk;\", \"⤦\"], [\"\\u0026swarr;\", \"↙\"], [\"\\u0026swArr;\", \"⇙\"], [\"\\u0026swarrow;\", \"↙\"], [\"\\u0026swnwar;\", \"⤪\"], [\"\\u0026szlig;\", \"ß\"], [\"\\u0026szlig\", \"ß\"], [\"\\u0026Tab;\", \"\\t\"], [\"\\u0026target;\", \"⌖\"], [\"\\u0026Tau;\", \"Τ\"], [\"\\u0026tau;\", \"τ\"], [\"\\u0026tbrk;\", \"⎴\"], [\"\\u0026Tcaron;\", \"Ť\"], [\"\\u0026tcaron;\", \"ť\"], [\"\\u0026Tcedil;\", \"Ţ\"], [\"\\u0026tcedil;\", \"ţ\"], [\"\\u0026Tcy;\", \"Т\"], [\"\\u0026tcy;\", \"т\"], [\"\\u0026tdot;\", \"⃛\"], [\"\\u0026telrec;\", \"⌕\"], [\"\\u0026Tfr;\", \"𝔗\"], [\"\\u0026tfr;\", \"𝔱\"], [\"\\u0026there4;\", \"∴\"], [\"\\u0026therefore;\", \"∴\"], [\"\\u0026Therefore;\", \"∴\"], [\"\\u0026Theta;\", \"Θ\"], [\"\\u0026theta;\", \"θ\"], [\"\\u0026thetasym;\", \"ϑ\"], [\"\\u0026thetav;\", \"ϑ\"], [\"\\u0026thickapprox;\", \"≈\"], [\"\\u0026thicksim;\", \"∼\"], [\"\\u0026ThickSpace;\", \"  \"], [\"\\u0026ThinSpace;\", \" \"], [\"\\u0026thinsp;\", \" \"], [\"\\u0026thkap;\", \"≈\"], [\"\\u0026thksim;\", \"∼\"], [\"\\u0026THORN;\", \"Þ\"], [\"\\u0026THORN\", \"Þ\"], [\"\\u0026thorn;\", \"þ\"], [\"\\u0026thorn\", \"þ\"], [\"\\u0026tilde;\", \"˜\"], [\"\\u0026Tilde;\", \"∼\"], [\"\\u0026TildeEqual;\", \"≃\"], [\"\\u0026TildeFullEqual;\", \"≅\"], [\"\\u0026TildeTilde;\", \"≈\"], [\"\\u0026timesbar;\", \"⨱\"], [\"\\u0026timesb;\", \"⊠\"], [\"\\u0026times;\", \"×\"], [\"\\u0026times\", \"×\"], [\"\\u0026timesd;\", \"⨰\"], [\"\\u0026tint;\", \"∭\"], [\"\\u0026toea;\", \"⤨\"], [\"\\u0026topbot;\", \"⌶\"], [\"\\u0026topcir;\", \"⫱\"], [\"\\u0026top;\", \"⊤\"], [\"\\u0026Topf;\", \"𝕋\"], [\"\\u0026topf;\", \"𝕥\"], [\"\\u0026topfork;\", \"⫚\"], [\"\\u0026tosa;\", \"⤩\"], [\"\\u0026tprime;\", \"‴\"], [\"\\u0026trade;\", \"™\"], [\"\\u0026TRADE;\", \"™\"], [\"\\u0026triangle;\", \"▵\"], [\"\\u0026triangledown;\", \"▿\"], [\"\\u0026triangleleft;\", \"◃\"], [\"\\u0026trianglelefteq;\", \"⊴\"], [\"\\u0026triangleq;\", \"≜\"], [\"\\u0026triangleright;\", \"▹\"], [\"\\u0026trianglerighteq;\", \"⊵\"], [\"\\u0026tridot;\", \"◬\"], [\"\\u0026trie;\", \"≜\"], [\"\\u0026triminus;\", \"⨺\"], [\"\\u0026TripleDot;\", \"⃛\"], [\"\\u0026triplus;\", \"⨹\"], [\"\\u0026trisb;\", \"⧍\"], [\"\\u0026tritime;\", \"⨻\"], [\"\\u0026trpezium;\", \"⏢\"], [\"\\u0026Tscr;\", \"𝒯\"], [\"\\u0026tscr;\", \"𝓉\"], [\"\\u0026TScy;\", \"Ц\"], [\"\\u0026tscy;\", \"ц\"], [\"\\u0026TSHcy;\", \"Ћ\"], [\"\\u0026tshcy;\", \"ћ\"], [\"\\u0026Tstrok;\", \"Ŧ\"], [\"\\u0026tstrok;\", \"ŧ\"], [\"\\u0026twixt;\", \"≬\"], [\"\\u0026twoheadleftarrow;\", \"↞\"], [\"\\u0026twoheadrightarrow;\", \"↠\"], [\"\\u0026Uacute;\", \"Ú\"], [\"\\u0026Uacute\", \"Ú\"], [\"\\u0026uacute;\", \"ú\"], [\"\\u0026uacute\", \"ú\"], [\"\\u0026uarr;\", \"↑\"], [\"\\u0026Uarr;\", \"↟\"], [\"\\u0026uArr;\", \"⇑\"], [\"\\u0026Uarrocir;\", \"⥉\"], [\"\\u0026Ubrcy;\", \"Ў\"], [\"\\u0026ubrcy;\", \"ў\"], [\"\\u0026Ubreve;\", \"Ŭ\"], [\"\\u0026ubreve;\", \"ŭ\"], [\"\\u0026Ucirc;\", \"Û\"], [\"\\u0026Ucirc\", \"Û\"], [\"\\u0026ucirc;\", \"û\"], [\"\\u0026ucirc\", \"û\"], [\"\\u0026Ucy;\", \"У\"], [\"\\u0026ucy;\", \"у\"], [\"\\u0026udarr;\", \"⇅\"], [\"\\u0026Udblac;\", \"Ű\"], [\"\\u0026udblac;\", \"ű\"], [\"\\u0026udhar;\", \"⥮\"], [\"\\u0026ufisht;\", \"⥾\"], [\"\\u0026Ufr;\", \"𝔘\"], [\"\\u0026ufr;\", \"𝔲\"], [\"\\u0026Ugrave;\", \"Ù\"], [\"\\u0026Ugrave\", \"Ù\"], [\"\\u0026ugrave;\", \"ù\"], [\"\\u0026ugrave\", \"ù\"], [\"\\u0026uHar;\", \"⥣\"], [\"\\u0026uharl;\", \"↿\"], [\"\\u0026uharr;\", \"↾\"], [\"\\u0026uhblk;\", \"▀\"], [\"\\u0026ulcorn;\", \"⌜\"], [\"\\u0026ulcorner;\", \"⌜\"], [\"\\u0026ulcrop;\", \"⌏\"], [\"\\u0026ultri;\", \"◸\"], [\"\\u0026Umacr;\", \"Ū\"], [\"\\u0026umacr;\", \"ū\"], [\"\\u0026uml;\", \"¨\"], [\"\\u0026uml\", \"¨\"], [\"\\u0026UnderBar;\", \"_\"], [\"\\u0026UnderBrace;\", \"⏟\"], [\"\\u0026UnderBracket;\", \"⎵\"], [\"\\u0026UnderParenthesis;\", \"⏝\"], [\"\\u0026Union;\", \"⋃\"], [\"\\u0026UnionPlus;\", \"⊎\"], [\"\\u0026Uogon;\", \"Ų\"], [\"\\u0026uogon;\", \"ų\"], [\"\\u0026Uopf;\", \"𝕌\"], [\"\\u0026uopf;\", \"𝕦\"], [\"\\u0026UpArrowBar;\", \"⤒\"], [\"\\u0026uparrow;\", \"↑\"], [\"\\u0026UpArrow;\", \"↑\"], [\"\\u0026Uparrow;\", \"⇑\"], [\"\\u0026UpArrowDownArrow;\", \"⇅\"], [\"\\u0026updownarrow;\", \"↕\"], [\"\\u0026UpDownArrow;\", \"↕\"], [\"\\u0026Updownarrow;\", \"⇕\"], [\"\\u0026UpEquilibrium;\", \"⥮\"], [\"\\u0026upharpoonleft;\", \"↿\"], [\"\\u0026upharpoonright;\", \"↾\"], [\"\\u0026uplus;\", \"⊎\"], [\"\\u0026UpperLeftArrow;\", \"↖\"], [\"\\u0026UpperRightArrow;\", \"↗\"], [\"\\u0026upsi;\", \"υ\"], [\"\\u0026Upsi;\", \"ϒ\"], [\"\\u0026upsih;\", \"ϒ\"], [\"\\u0026Upsilon;\", \"Υ\"], [\"\\u0026upsilon;\", \"υ\"], [\"\\u0026UpTeeArrow;\", \"↥\"], [\"\\u0026UpTee;\", \"⊥\"], [\"\\u0026upuparrows;\", \"⇈\"], [\"\\u0026urcorn;\", \"⌝\"], [\"\\u0026urcorner;\", \"⌝\"], [\"\\u0026urcrop;\", \"⌎\"], [\"\\u0026Uring;\", \"Ů\"], [\"\\u0026uring;\", \"ů\"], [\"\\u0026urtri;\", \"◹\"], [\"\\u0026Uscr;\", \"𝒰\"], [\"\\u0026uscr;\", \"𝓊\"], [\"\\u0026utdot;\", \"⋰\"], [\"\\u0026Utilde;\", \"Ũ\"], [\"\\u0026utilde;\", \"ũ\"], [\"\\u0026utri;\", \"▵\"], [\"\\u0026utrif;\", \"▴\"], [\"\\u0026uuarr;\", \"⇈\"], [\"\\u0026Uuml;\", \"Ü\"], [\"\\u0026Uuml\", \"Ü\"], [\"\\u0026uuml;\", \"ü\"], [\"\\u0026uuml\", \"ü\"], [\"\\u0026uwangle;\", \"⦧\"], [\"\\u0026vangrt;\", \"⦜\"], [\"\\u0026varepsilon;\", \"ϵ\"], [\"\\u0026varkappa;\", \"ϰ\"], [\"\\u0026varnothing;\", \"∅\"], [\"\\u0026varphi;\", \"ϕ\"], [\"\\u0026varpi;\", \"ϖ\"], [\"\\u0026varpropto;\", \"∝\"], [\"\\u0026varr;\", \"↕\"], [\"\\u0026vArr;\", \"⇕\"], [\"\\u0026varrho;\", \"ϱ\"], [\"\\u0026varsigma;\", \"ς\"], [\"\\u0026varsubsetneq;\", \"⊊︀\"], [\"\\u0026varsubsetneqq;\", \"⫋︀\"], [\"\\u0026varsupsetneq;\", \"⊋︀\"], [\"\\u0026varsupsetneqq;\", \"⫌︀\"], [\"\\u0026vartheta;\", \"ϑ\"], [\"\\u0026vartriangleleft;\", \"⊲\"], [\"\\u0026vartriangleright;\", \"⊳\"], [\"\\u0026vBar;\", \"⫨\"], [\"\\u0026Vbar;\", \"⫫\"], [\"\\u0026vBarv;\", \"⫩\"], [\"\\u0026Vcy;\", \"В\"], [\"\\u0026vcy;\", \"в\"], [\"\\u0026vdash;\", \"⊢\"], [\"\\u0026vDash;\", \"⊨\"], [\"\\u0026Vdash;\", \"⊩\"], [\"\\u0026VDash;\", \"⊫\"], [\"\\u0026Vdashl;\", \"⫦\"], [\"\\u0026veebar;\", \"⊻\"], [\"\\u0026vee;\", \"∨\"], [\"\\u0026Vee;\", \"⋁\"], [\"\\u0026veeeq;\", \"≚\"], [\"\\u0026vellip;\", \"⋮\"], [\"\\u0026verbar;\", \"|\"], [\"\\u0026Verbar;\", \"‖\"], [\"\\u0026vert;\", \"|\"], [\"\\u0026Vert;\", \"‖\"], [\"\\u0026VerticalBar;\", \"∣\"], [\"\\u0026VerticalLine;\", \"|\"], [\"\\u0026VerticalSeparator;\", \"❘\"], [\"\\u0026VerticalTilde;\", \"≀\"], [\"\\u0026VeryThinSpace;\", \" \"], [\"\\u0026Vfr;\", \"𝔙\"], [\"\\u0026vfr;\", \"𝔳\"], [\"\\u0026vltri;\", \"⊲\"], [\"\\u0026vnsub;\", \"⊂⃒\"], [\"\\u0026vnsup;\", \"⊃⃒\"], [\"\\u0026Vopf;\", \"𝕍\"], [\"\\u0026vopf;\", \"𝕧\"], [\"\\u0026vprop;\", \"∝\"], [\"\\u0026vrtri;\", \"⊳\"], [\"\\u0026Vscr;\", \"𝒱\"], [\"\\u0026vscr;\", \"𝓋\"], [\"\\u0026vsubnE;\", \"⫋︀\"], [\"\\u0026vsubne;\", \"⊊︀\"], [\"\\u0026vsupnE;\", \"⫌︀\"], [\"\\u0026vsupne;\", \"⊋︀\"], [\"\\u0026Vvdash;\", \"⊪\"], [\"\\u0026vzigzag;\", \"⦚\"], [\"\\u0026Wcirc;\", \"Ŵ\"], [\"\\u0026wcirc;\", \"ŵ\"], [\"\\u0026wedbar;\", \"⩟\"], [\"\\u0026wedge;\", \"∧\"], [\"\\u0026Wedge;\", \"⋀\"], [\"\\u0026wedgeq;\", \"≙\"], [\"\\u0026weierp;\", \"℘\"], [\"\\u0026Wfr;\", \"𝔚\"], [\"\\u0026wfr;\", \"𝔴\"], [\"\\u0026Wopf;\", \"𝕎\"], [\"\\u0026wopf;\", \"𝕨\"], [\"\\u0026wp;\", \"℘\"], [\"\\u0026wr;\", \"≀\"], [\"\\u0026wreath;\", \"≀\"], [\"\\u0026Wscr;\", \"𝒲\"], [\"\\u0026wscr;\", \"𝓌\"], [\"\\u0026xcap;\", \"⋂\"], [\"\\u0026xcirc;\", \"◯\"], [\"\\u0026xcup;\", \"⋃\"], [\"\\u0026xdtri;\", \"▽\"], [\"\\u0026Xfr;\", \"𝔛\"], [\"\\u0026xfr;\", \"𝔵\"], [\"\\u0026xharr;\", \"⟷\"], [\"\\u0026xhArr;\", \"⟺\"], [\"\\u0026Xi;\", \"Ξ\"], [\"\\u0026xi;\", \"ξ\"], [\"\\u0026xlarr;\", \"⟵\"], [\"\\u0026xlArr;\", \"⟸\"], [\"\\u0026xmap;\", \"⟼\"], [\"\\u0026xnis;\", \"⋻\"], [\"\\u0026xodot;\", \"⨀\"], [\"\\u0026Xopf;\", \"𝕏\"], [\"\\u0026xopf;\", \"𝕩\"], [\"\\u0026xoplus;\", \"⨁\"], [\"\\u0026xotime;\", \"⨂\"], [\"\\u0026xrarr;\", \"⟶\"], [\"\\u0026xrArr;\", \"⟹\"], [\"\\u0026Xscr;\", \"𝒳\"], [\"\\u0026xscr;\", \"𝓍\"], [\"\\u0026xsqcup;\", \"⨆\"], [\"\\u0026xuplus;\", \"⨄\"], [\"\\u0026xutri;\", \"△\"], [\"\\u0026xvee;\", \"⋁\"], [\"\\u0026xwedge;\", \"⋀\"], [\"\\u0026Yacute;\", \"Ý\"], [\"\\u0026Yacute\", \"Ý\"], [\"\\u0026yacute;\", \"ý\"], [\"\\u0026yacute\", \"ý\"], [\"\\u0026YAcy;\", \"Я\"], [\"\\u0026yacy;\", \"я\"], [\"\\u0026Ycirc;\", \"Ŷ\"], [\"\\u0026ycirc;\", \"ŷ\"], [\"\\u0026Ycy;\", \"Ы\"], [\"\\u0026ycy;\", \"ы\"], [\"\\u0026yen;\", \"¥\"], [\"\\u0026yen\", \"¥\"], [\"\\u0026Yfr;\", \"𝔜\"], [\"\\u0026yfr;\", \"𝔶\"], [\"\\u0026YIcy;\", \"Ї\"], [\"\\u0026yicy;\", \"ї\"], [\"\\u0026Yopf;\", \"𝕐\"], [\"\\u0026yopf;\", \"𝕪\"], [\"\\u0026Yscr;\", \"𝒴\"], [\"\\u0026yscr;\", \"𝓎\"], [\"\\u0026YUcy;\", \"Ю\"], [\"\\u0026yucy;\", \"ю\"], [\"\\u0026yuml;\", \"ÿ\"], [\"\\u0026yuml\", \"ÿ\"], [\"\\u0026Yuml;\", \"Ÿ\"], [\"\\u0026Zacute;\", \"Ź\"], [\"\\u0026zacute;\", \"ź\"], [\"\\u0026Zcaron;\", \"Ž\"], [\"\\u0026zcaron;\", \"ž\"], [\"\\u0026Zcy;\", \"З\"], [\"\\u0026zcy;\", \"з\"], [\"\\u0026Zdot;\", \"Ż\"], [\"\\u0026zdot;\", \"ż\"], [\"\\u0026zeetrf;\", \"ℨ\"], [\"\\u0026ZeroWidthSpace;\", \"​\"], [\"\\u0026Zeta;\", \"Ζ\"], [\"\\u0026zeta;\", \"ζ\"], [\"\\u0026zfr;\", \"𝔷\"], [\"\\u0026Zfr;\", \"ℨ\"], [\"\\u0026ZHcy;\", \"Ж\"], [\"\\u0026zhcy;\", \"ж\"], [\"\\u0026zigrarr;\", \"⇝\"], [\"\\u0026zopf;\", \"𝕫\"], [\"\\u0026Zopf;\", \"ℤ\"], [\"\\u0026Zscr;\", \"𝒵\"], [\"\\u0026zscr;\", \"𝓏\"], [\"\\u0026zwj;\", \"‍\"], [\"\\u0026zwnj;\", \"‌\"]]);\r\n\r\nexport function $007CNumber$007CLookup$007C(orig) {\r\n    const s = trimEnd(orig, \";\");\r\n    if (s.length > 2) {\r\n        let patternInput;\r\n        const ref = s.toLowerCase();\r\n        patternInput = [[ref.slice(0, 1 + 1), ref[ref.length - 1]], ref[2]];\r\n        const delimeters = patternInput[0];\r\n        if (delimeters[0] === \"\\u0026#\") {\r\n            let matchValue;\r\n            let outArg = 0;\r\n            matchValue = [tryParse((patternInput[1] !== \"x\") ? substring(s, 2, s.length - 2) : substring(s, 3, s.length - 3), 7, true, 32, new FSharpRef(() => outArg, (v) => {\r\n                outArg = v;\r\n            })), outArg];\r\n            if (matchValue[0]) {\r\n                return new FSharpChoice$2(0, matchValue[1]);\r\n            }\r\n            else {\r\n                return new FSharpChoice$2(1, orig);\r\n            }\r\n        }\r\n        else if (delimeters[0] === \"\\u0026x\") {\r\n            let matchValue_1;\r\n            let outArg_1 = 0;\r\n            matchValue_1 = [tryParse(substring(s, 2, s.length - 2), 512, true, 32, new FSharpRef(() => outArg_1, (v_1) => {\r\n                outArg_1 = v_1;\r\n            })), outArg_1];\r\n            if (matchValue_1[0]) {\r\n                return new FSharpChoice$2(0, matchValue_1[1]);\r\n            }\r\n            else {\r\n                return new FSharpChoice$2(1, orig);\r\n            }\r\n        }\r\n        else {\r\n            return new FSharpChoice$2(1, orig);\r\n        }\r\n    }\r\n    else {\r\n        return new FSharpChoice$2(1, orig);\r\n    }\r\n}\r\n\r\nexport function substitute(ref) {\r\n    const activePatternResult8516 = $007CNumber$007CLookup$007C(ref);\r\n    if (activePatternResult8516.tag === 1) {\r\n        return defaultArg(FSharpMap__TryFind(refs, activePatternResult8516.fields[0]), activePatternResult8516.fields[0]);\r\n    }\r\n    else if (activePatternResult8516.fields[0] > 65535) {\r\n        const patternInput = getUnicodeSurrogatePair(activePatternResult8516.fields[0]);\r\n        return patternInput[0] + patternInput[1];\r\n    }\r\n    else {\r\n        return String.fromCharCode(activePatternResult8516.fields[0]);\r\n    }\r\n}\r\n\r\n","\r\nexport function getUnicodeSurrogatePair(num) {\r\n    const codePoint = num - 65536;\r\n    const trailSurrogate = ((codePoint & 1023) >>> 0) + 56320;\r\n    return [String.fromCharCode((((codePoint & 1047552) >>> 0) >>> 10) + 55296), String.fromCharCode(trailSurrogate)];\r\n}\r\n\r\n","import { head, tail, isEmpty, cons, length, empty } from \"./.fable/fable-library.3.2.11/List.js\";\r\nimport { class_type } from \"./.fable/fable-library.3.2.11/Reflection.js\";\r\n\r\nexport class Stack$1 {\r\n    constructor() {\r\n        this.items = empty();\r\n    }\r\n}\r\n\r\nexport function Stack$1$reflection(gen0) {\r\n    return class_type(\"Fable.Collections.Stack`1\", [gen0], Stack$1);\r\n}\r\n\r\nexport function Stack$1_$ctor() {\r\n    return new Stack$1();\r\n}\r\n\r\nexport function Stack$1__get_Count(x) {\r\n    return length(x.items);\r\n}\r\n\r\nexport function Stack$1__Push_2B595(x, item) {\r\n    x.items = cons(item, x.items);\r\n}\r\n\r\nexport function Stack$1__Pop(x) {\r\n    const matchValue = x.items;\r\n    if (isEmpty(matchValue)) {\r\n        throw (new Error(\"Empty stack\"));\r\n    }\r\n    else {\r\n        x.items = tail(matchValue);\r\n        return head(matchValue);\r\n    }\r\n}\r\n\r\n","import { FSharpRef, Record, toString, Union } from \"./.fable/fable-library.3.2.11/Types.js\";\r\nimport { tuple_type, record_type, char_type, bool_type, list_type, union_type, string_type } from \"./.fable/fable-library.3.2.11/Reflection.js\";\r\nimport { StringBuilder_$ctor, StringBuilder__AppendLine, StringBuilder__Append_Z721C83C5 } from \"./.fable/fable-library.3.2.11/System.Text.js\";\r\nimport { tail, ofArrayWithTail, exists, ofArray, choose, head, length, cons, reverse, toArray, map as map_1, ofSeq, empty, isEmpty, forAll } from \"./.fable/fable-library.3.2.11/List.js\";\r\nimport { partialApply, comparePrimitives, Lazy, getEnumerator } from \"./.fable/fable-library.3.2.11/Util.js\";\r\nimport { toArray as toArray_1, map, toList } from \"./.fable/fable-library.3.2.11/Seq.js\";\r\nimport { replace, printf, toText, join, isNullOrEmpty, substring } from \"./.fable/fable-library.3.2.11/String.js\";\r\nimport { some } from \"./.fable/fable-library.3.2.11/Option.js\";\r\nimport { isLetter, isLetterOrDigit, isWhiteSpace } from \"./.fable/fable-library.3.2.11/Char.js\";\r\nimport { replace as replace_1, create } from \"./.fable/fable-library.3.2.11/RegExp.js\";\r\nimport { StringReader_$ctor_Z721C83C5, StringReader__get_IsEndOfString, StringReader__PeekChar, StringReader__ReadChar, StringReader$reflection } from \"./Fable.IO.fs.js\";\r\nimport { reverse as reverse_1, equalsWith, append as append_1, map as map_2 } from \"./.fable/fable-library.3.2.11/Array.js\";\r\nimport { rangeDouble } from \"./.fable/fable-library.3.2.11/Range.js\";\r\nimport { substitute } from \"./HtmlCharRefs.fs.js\";\r\nimport { Stack$1_$ctor, Stack$1__Push_2B595, Stack$1__Pop, Stack$1__get_Count } from \"./Fable.Collections.fs.js\";\r\n\r\nexport class HtmlAttribute extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"HtmlAttribute\"];\r\n    }\r\n}\r\n\r\nexport function HtmlAttribute$reflection() {\r\n    return union_type(\"FSharp.Data.HtmlAttribute\", [], HtmlAttribute, () => [[[\"name\", string_type], [\"value\", string_type]]]);\r\n}\r\n\r\nexport function HtmlAttribute_New_Z384F8060(name, value) {\r\n    return new HtmlAttribute(0, name.toLowerCase(), value);\r\n}\r\n\r\nexport class HtmlNode extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"HtmlElement\", \"HtmlText\", \"HtmlComment\", \"HtmlCData\"];\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const serialize = (sb, indentation, canAddNewLine, html) => {\r\n            const append = (str) => {\r\n                void StringBuilder__Append_Z721C83C5(sb, str);\r\n            };\r\n            const appendEndTag = (name) => {\r\n                append(\"\\u003c/\");\r\n                append(name);\r\n                append(\"\\u003e\");\r\n            };\r\n            const newLine = (plus) => {\r\n                void StringBuilder__AppendLine(sb);\r\n                append(Array((indentation + plus) + 1).join(\" \"));\r\n            };\r\n            switch (html.tag) {\r\n                case 1: {\r\n                    append(html.fields[0]);\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    append(\"\\u003c!--\");\r\n                    append(html.fields[0]);\r\n                    append(\"--\\u003e\");\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    append(\"\\u003c![CDATA[\");\r\n                    append(html.fields[0]);\r\n                    append(\"]]\\u003e\");\r\n                    break;\r\n                }\r\n                default: {\r\n                    const name_2 = html.fields[0];\r\n                    const elements = html.fields[2];\r\n                    const onlyText = forAll((_arg1) => {\r\n                        if (_arg1.tag === 1) {\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }, elements);\r\n                    if (canAddNewLine ? (!onlyText) : false) {\r\n                        newLine(0);\r\n                    }\r\n                    append(\"\\u003c\");\r\n                    append(name_2);\r\n                    const enumerator = getEnumerator(html.fields[1]);\r\n                    try {\r\n                        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            append(\" \");\r\n                            append(forLoopVar.fields[0]);\r\n                            append(\"=\\\"\");\r\n                            append(forLoopVar.fields[1]);\r\n                            append(\"\\\"\");\r\n                        }\r\n                    }\r\n                    finally {\r\n                        enumerator.Dispose();\r\n                    }\r\n                    if (isEmpty(elements)) {\r\n                        if (name_2 === \"textarea\") {\r\n                            append(\"\\u003e\");\r\n                            appendEndTag(name_2);\r\n                        }\r\n                        else {\r\n                            append(\" /\\u003e\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        append(\"\\u003e\");\r\n                        if (!onlyText) {\r\n                            newLine(2);\r\n                        }\r\n                        let canAddNewLine_1 = false;\r\n                        const enumerator_1 = getEnumerator(elements);\r\n                        try {\r\n                            while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                const element = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                serialize(sb, indentation + 2, canAddNewLine_1, element);\r\n                                canAddNewLine_1 = true;\r\n                            }\r\n                        }\r\n                        finally {\r\n                            enumerator_1.Dispose();\r\n                        }\r\n                        if (!onlyText) {\r\n                            newLine(0);\r\n                        }\r\n                        appendEndTag(name_2);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        const sb_1 = StringBuilder_$ctor();\r\n        const value_3 = serialize(sb_1, 0, false, x);\r\n        return toString(sb_1);\r\n    }\r\n}\r\n\r\nexport function HtmlNode$reflection() {\r\n    return union_type(\"FSharp.Data.HtmlNode\", [], HtmlNode, () => [[[\"name\", string_type], [\"attributes\", list_type(HtmlAttribute$reflection())], [\"elements\", list_type(HtmlNode$reflection())]], [[\"content\", string_type]], [[\"content\", string_type]], [[\"content\", string_type]]]);\r\n}\r\n\r\nexport function HtmlNode_NewElement_Z721C83C5(name) {\r\n    return new HtmlNode(0, name.toLowerCase(), empty(), empty());\r\n}\r\n\r\nexport function HtmlNode_NewElement_1418A03B(name, attrs) {\r\n    const attrs_1 = toList(map((tupledArg) => HtmlAttribute_New_Z384F8060(tupledArg[0], tupledArg[1]), attrs));\r\n    return new HtmlNode(0, name.toLowerCase(), attrs_1, empty());\r\n}\r\n\r\nexport function HtmlNode_NewElement_Z2AB6DE7E(name, children) {\r\n    return new HtmlNode(0, name.toLowerCase(), empty(), ofSeq(children));\r\n}\r\n\r\nexport function HtmlNode_NewElement_8368582(name, attrs, children) {\r\n    const attrs_1 = toList(map((tupledArg) => HtmlAttribute_New_Z384F8060(tupledArg[0], tupledArg[1]), attrs));\r\n    return new HtmlNode(0, name.toLowerCase(), attrs_1, ofSeq(children));\r\n}\r\n\r\nexport function HtmlNode_NewText_Z721C83C5(content) {\r\n    return new HtmlNode(1, content);\r\n}\r\n\r\nexport function HtmlNode_NewComment_Z721C83C5(content) {\r\n    return new HtmlNode(2, content);\r\n}\r\n\r\nexport function HtmlNode_NewCData_Z721C83C5(content) {\r\n    return new HtmlNode(3, content);\r\n}\r\n\r\nexport function HtmlNode__get__Print(x) {\r\n    const str = toString(x);\r\n    if (str.length > 512) {\r\n        return substring(str, 0, 509) + \"...\";\r\n    }\r\n    else {\r\n        return str;\r\n    }\r\n}\r\n\r\nexport class HtmlDocument extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"HtmlDocument\"];\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const docType = x.fields[0];\r\n        return (isNullOrEmpty(docType) ? \"\" : (((\"\\u003c!DOCTYPE \" + docType) + \"\\u003e\") + \"\\n\")) + join(\"\", map_1((x_1) => toString(x_1), x.fields[1]));\r\n    }\r\n}\r\n\r\nexport function HtmlDocument$reflection() {\r\n    return union_type(\"FSharp.Data.HtmlDocument\", [], HtmlDocument, () => [[[\"docType\", string_type], [\"elements\", list_type(HtmlNode$reflection())]]]);\r\n}\r\n\r\nexport function HtmlDocument_New_Z2AB6DE7E(docType, children) {\r\n    return new HtmlDocument(0, docType, ofSeq(children));\r\n}\r\n\r\nexport function HtmlDocument_New_Z60E5DDE7(children) {\r\n    return new HtmlDocument(0, \"\", ofSeq(children));\r\n}\r\n\r\nexport function HtmlDocument__get__Print(x) {\r\n    const str = toString(x);\r\n    if (str.length > 512) {\r\n        return substring(str, 0, 509) + \"...\";\r\n    }\r\n    else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction TextParser_toPattern(f, c) {\r\n    if (f(c)) {\r\n        return some(c);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nfunction TextParser_$007CEndOfFile$007C_$007C(c) {\r\n    const value_1 = c.charCodeAt(0) | 0;\r\n    if ((value_1 === -1) ? true : (value_1 === 65535)) {\r\n        return c;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nconst TextParser_$007CWhitespace$007C_$007C = (c) => TextParser_toPattern((arg00) => isWhiteSpace(arg00), c);\r\n\r\nconst TextParser_$007CLetterDigit$007C_$007C = (c) => TextParser_toPattern((arg00) => isLetterOrDigit(arg00), c);\r\n\r\nconst TextParser_$007CLetter$007C_$007C = (c) => TextParser_toPattern((arg00) => isLetter(arg00), c);\r\n\r\nexport const HtmlParser_wsRegex = new Lazy(() => create(\"\\\\s+\"));\r\n\r\nexport const HtmlParser_invalidTypeNameRegex = new Lazy(() => create(\"[^0-9a-zA-Z_]+\"));\r\n\r\nexport const HtmlParser_headingRegex = new Lazy(() => create(\"h\\\\d\"));\r\n\r\nexport class HtmlParser_HtmlToken extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"DocType\", \"Tag\", \"TagEnd\", \"Text\", \"Comment\", \"CData\", \"EOF\"];\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        switch (x.tag) {\r\n            case 1: {\r\n                return toText(printf(\"tag %b %s\"))(x.fields[0])(x.fields[1]);\r\n            }\r\n            case 2: {\r\n                return toText(printf(\"tagEnd %s\"))(x.fields[0]);\r\n            }\r\n            case 3: {\r\n                return \"text\";\r\n            }\r\n            case 4: {\r\n                return \"comment\";\r\n            }\r\n            case 6: {\r\n                return \"eof\";\r\n            }\r\n            case 5: {\r\n                return \"cdata\";\r\n            }\r\n            default: {\r\n                return toText(printf(\"doctype %s\"))(x.fields[0]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlToken$reflection() {\r\n    return union_type(\"FSharp.Data.HtmlParser.HtmlToken\", [], HtmlParser_HtmlToken, () => [[[\"Item\", string_type]], [[\"isSelfClosing\", bool_type], [\"name\", string_type], [\"attrs\", list_type(HtmlAttribute$reflection())]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], []]);\r\n}\r\n\r\nexport function HtmlParser_HtmlToken__IsEndTag_Z721C83C5(x, name) {\r\n    let pattern_matching_result;\r\n    if (x.tag === 2) {\r\n        if (name === x.fields[0]) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HtmlParser_CharList extends Record {\r\n    constructor(Contents) {\r\n        super();\r\n        this.Contents = Contents;\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        return toArray(reverse(x.Contents)).join('');\r\n    }\r\n}\r\n\r\nexport function HtmlParser_CharList$reflection() {\r\n    return record_type(\"FSharp.Data.HtmlParser.CharList\", [], HtmlParser_CharList, () => [[\"Contents\", list_type(char_type)]]);\r\n}\r\n\r\nexport function HtmlParser_CharList_get_Empty() {\r\n    return new HtmlParser_CharList(empty());\r\n}\r\n\r\nexport function HtmlParser_CharList__Cons_244C7CD6(x, c) {\r\n    x.Contents = cons(c, x.Contents);\r\n}\r\n\r\nexport function HtmlParser_CharList__get_Length(x) {\r\n    return length(x.Contents);\r\n}\r\n\r\nexport function HtmlParser_CharList__Clear(x) {\r\n    x.Contents = empty();\r\n}\r\n\r\nexport class HtmlParser_InsertionMode extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"DefaultMode\", \"FormattedMode\", \"ScriptMode\", \"CharRefMode\", \"CommentMode\", \"DocTypeMode\", \"CDATAMode\"];\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        switch (x.tag) {\r\n            case 1: {\r\n                return \"formatted\";\r\n            }\r\n            case 2: {\r\n                return \"script\";\r\n            }\r\n            case 3: {\r\n                return \"charref\";\r\n            }\r\n            case 4: {\r\n                return \"comment\";\r\n            }\r\n            case 5: {\r\n                return \"doctype\";\r\n            }\r\n            case 6: {\r\n                return \"cdata\";\r\n            }\r\n            default: {\r\n                return \"default\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function HtmlParser_InsertionMode$reflection() {\r\n    return union_type(\"FSharp.Data.HtmlParser.InsertionMode\", [], HtmlParser_InsertionMode, () => [[], [], [], [], [], [], []]);\r\n}\r\n\r\nexport class HtmlParser_HtmlState extends Record {\r\n    constructor(Attributes, CurrentTag, Content, InsertionMode, Tokens, Reader) {\r\n        super();\r\n        this.Attributes = Attributes;\r\n        this.CurrentTag = CurrentTag;\r\n        this.Content = Content;\r\n        this.InsertionMode = InsertionMode;\r\n        this.Tokens = Tokens;\r\n        this.Reader = Reader;\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState$reflection() {\r\n    return record_type(\"FSharp.Data.HtmlParser.HtmlState\", [], HtmlParser_HtmlState, () => [[\"Attributes\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [list_type(tuple_type(HtmlParser_CharList$reflection(), HtmlParser_CharList$reflection()))], FSharpRef, () => [[\"contents\", list_type(tuple_type(HtmlParser_CharList$reflection(), HtmlParser_CharList$reflection()))]])], [\"CurrentTag\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [HtmlParser_CharList$reflection()], FSharpRef, () => [[\"contents\", HtmlParser_CharList$reflection()]])], [\"Content\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [HtmlParser_CharList$reflection()], FSharpRef, () => [[\"contents\", HtmlParser_CharList$reflection()]])], [\"InsertionMode\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [HtmlParser_InsertionMode$reflection()], FSharpRef, () => [[\"contents\", HtmlParser_InsertionMode$reflection()]])], [\"Tokens\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [list_type(HtmlParser_HtmlToken$reflection())], FSharpRef, () => [[\"contents\", list_type(HtmlParser_HtmlToken$reflection())]])], [\"Reader\", StringReader$reflection()]]);\r\n}\r\n\r\nexport function HtmlParser_HtmlState_Create_25CF1C9F(reader) {\r\n    return new HtmlParser_HtmlState(new FSharpRef(empty()), new FSharpRef(HtmlParser_CharList_get_Empty()), new FSharpRef(HtmlParser_CharList_get_Empty()), new FSharpRef(new HtmlParser_InsertionMode(0)), new FSharpRef(empty()), reader);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Pop(x) {\r\n    void StringReader__ReadChar(x.Reader);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Peek(x) {\r\n    return StringReader__PeekChar(x.Reader);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Pop_Z524259A4(x, count) {\r\n    return map_2((_arg1) => StringReader__ReadChar(x.Reader), toArray_1(rangeDouble(0, 1, count - 1)));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__get_Contents(x) {\r\n    return toString(x.Content.contents);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__get_ContentLength(x) {\r\n    return HtmlParser_CharList__get_Length(x.Content.contents);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__NewAttribute(x) {\r\n    x.Attributes.contents = cons([HtmlParser_CharList_get_Empty(), HtmlParser_CharList_get_Empty()], x.Attributes.contents);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__ConsAttrName(x) {\r\n    const matchValue = x.Attributes.contents;\r\n    if (!isEmpty(matchValue)) {\r\n        HtmlParser_CharList__Cons_244C7CD6(head(matchValue)[0], StringReader__ReadChar(x.Reader).toLowerCase());\r\n    }\r\n    else {\r\n        HtmlParser_HtmlState__NewAttribute(x);\r\n        HtmlParser_HtmlState__ConsAttrName(x);\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__CurrentTagName(x) {\r\n    return toString(x.CurrentTag.contents).trim();\r\n}\r\n\r\nexport function HtmlParser_HtmlState__CurrentAttrName(x) {\r\n    const matchValue = x.Attributes.contents;\r\n    if (!isEmpty(matchValue)) {\r\n        return toString(head(matchValue)[0]);\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__ConsAttrValue_244C7CD6(x_mut, c_mut) {\r\n    HtmlParser_HtmlState__ConsAttrValue_244C7CD6:\r\n    while (true) {\r\n        const x = x_mut, c = c_mut;\r\n        const matchValue = x.Attributes.contents;\r\n        if (!isEmpty(matchValue)) {\r\n            HtmlParser_CharList__Cons_244C7CD6(head(matchValue)[1], c);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__NewAttribute(x);\r\n            x_mut = x;\r\n            c_mut = c;\r\n            continue HtmlParser_HtmlState__ConsAttrValue_244C7CD6;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__ConsAttrValue(x) {\r\n    HtmlParser_HtmlState__ConsAttrValue_244C7CD6(x, StringReader__ReadChar(x.Reader));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__GetAttributes(x) {\r\n    return reverse(choose((tupledArg) => {\r\n        const key = tupledArg[0];\r\n        if (HtmlParser_CharList__get_Length(key) > 0) {\r\n            return new HtmlAttribute(0, toString(key), toString(tupledArg[1]));\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, x.Attributes.contents));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__EmitSelfClosingTag(x) {\r\n    const result = new HtmlParser_HtmlToken(1, true, toString(x.CurrentTag.contents).trim(), HtmlParser_HtmlState__GetAttributes(x));\r\n    x.CurrentTag.contents = HtmlParser_CharList_get_Empty();\r\n    x.InsertionMode.contents = (new HtmlParser_InsertionMode(0));\r\n    x.Attributes.contents = empty();\r\n    x.Tokens.contents = cons(result, x.Tokens.contents);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__get_IsFormattedTag(x) {\r\n    const matchValue = HtmlParser_HtmlState__CurrentTagName(x);\r\n    switch (matchValue) {\r\n        case \"pre\":\r\n        case \"code\": {\r\n            return true;\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__get_IsScriptTag(x) {\r\n    const matchValue = HtmlParser_HtmlState__CurrentTagName(x).trim().toLocaleLowerCase();\r\n    switch (matchValue) {\r\n        case \"script\":\r\n        case \"style\": {\r\n            return true;\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__EmitTag_Z1FBCCD16(x, isEnd) {\r\n    const name = toString(x.CurrentTag.contents).trim();\r\n    let result;\r\n    if (isEnd) {\r\n        if (HtmlParser_HtmlState__get_ContentLength(x) > 0) {\r\n            HtmlParser_HtmlState__Emit(x);\r\n            result = (new HtmlParser_HtmlToken(2, name));\r\n        }\r\n        else {\r\n            result = (new HtmlParser_HtmlToken(2, name));\r\n        }\r\n    }\r\n    else {\r\n        result = (new HtmlParser_HtmlToken(1, false, name, HtmlParser_HtmlState__GetAttributes(x)));\r\n    }\r\n    x.InsertionMode.contents = ((HtmlParser_HtmlState__get_IsFormattedTag(x) ? (!isEnd) : false) ? (new HtmlParser_InsertionMode(1)) : ((HtmlParser_HtmlState__get_IsScriptTag(x) ? (!isEnd) : false) ? (new HtmlParser_InsertionMode(2)) : (new HtmlParser_InsertionMode(0))));\r\n    x.CurrentTag.contents = HtmlParser_CharList_get_Empty();\r\n    x.Attributes.contents = empty();\r\n    x.Tokens.contents = cons(result, x.Tokens.contents);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__EmitToAttributeValue(x) {\r\n    const arr = substitute(toString(x.Content.contents)).split(\"\");\r\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\r\n        HtmlParser_HtmlState__ConsAttrValue_244C7CD6(x, arr[idx]);\r\n    }\r\n    x.Content.contents = HtmlParser_CharList_get_Empty();\r\n    x.InsertionMode.contents = (new HtmlParser_InsertionMode(0));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Emit(x) {\r\n    let result;\r\n    const content = toString(x.Content.contents);\r\n    const matchValue = x.InsertionMode.contents;\r\n    switch (matchValue.tag) {\r\n        case 1: {\r\n            result = (new HtmlParser_HtmlToken(3, content));\r\n            break;\r\n        }\r\n        case 2: {\r\n            result = (new HtmlParser_HtmlToken(3, content));\r\n            break;\r\n        }\r\n        case 3: {\r\n            result = (new HtmlParser_HtmlToken(3, substitute(content.trim())));\r\n            break;\r\n        }\r\n        case 4: {\r\n            result = (new HtmlParser_HtmlToken(4, content));\r\n            break;\r\n        }\r\n        case 5: {\r\n            result = (new HtmlParser_HtmlToken(0, content));\r\n            break;\r\n        }\r\n        case 6: {\r\n            result = (new HtmlParser_HtmlToken(5, replace(replace(content, \"\\u003c![CDATA[\", \"\"), \"]]\\u003e\", \"\")));\r\n            break;\r\n        }\r\n        default: {\r\n            const normalizedContent = replace_1(HtmlParser_wsRegex.Value, content, \" \");\r\n            result = ((normalizedContent === \" \") ? (new HtmlParser_HtmlToken(3, \"\")) : (new HtmlParser_HtmlToken(3, normalizedContent)));\r\n        }\r\n    }\r\n    x.Content.contents = HtmlParser_CharList_get_Empty();\r\n    x.InsertionMode.contents = (new HtmlParser_InsertionMode(0));\r\n    let pattern_matching_result;\r\n    if (result.tag === 3) {\r\n        if (isNullOrEmpty(result.fields[0])) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            break;\r\n        }\r\n        case 1: {\r\n            x.Tokens.contents = cons(result, x.Tokens.contents);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Cons(x) {\r\n    HtmlParser_CharList__Cons_244C7CD6(x.Content.contents, StringReader__ReadChar(x.Reader));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Cons_244C7CD6(x, char) {\r\n    HtmlParser_CharList__Cons_244C7CD6(x.Content.contents, char);\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Cons_695F1130(x, char) {\r\n    let objectArg;\r\n    char.forEach((objectArg = x.Content.contents, (arg00) => {\r\n        HtmlParser_CharList__Cons_244C7CD6(objectArg, arg00);\r\n    }));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__Cons_Z721C83C5(x, char) {\r\n    HtmlParser_HtmlState__Cons_695F1130(x, char.split(\"\"));\r\n}\r\n\r\nexport function HtmlParser_HtmlState__ConsTag(x) {\r\n    const matchValue = StringReader__ReadChar(x.Reader);\r\n    if (TextParser_$007CWhitespace$007C_$007C(matchValue) != null) {\r\n    }\r\n    else {\r\n        HtmlParser_CharList__Cons_244C7CD6(x.CurrentTag.contents, matchValue.toLowerCase());\r\n    }\r\n}\r\n\r\nexport function HtmlParser_HtmlState__ClearContent(x) {\r\n    HtmlParser_CharList__Clear(x.Content.contents);\r\n}\r\n\r\nfunction HtmlParser_tokenise(reader) {\r\n    const state = HtmlParser_HtmlState_Create_25CF1C9F(reader);\r\n    const data = (state_1_mut) => {\r\n        data:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = HtmlParser_HtmlState__Peek(state_1);\r\n            if (matchValue === \"\\u003c\") {\r\n                if (HtmlParser_HtmlState__get_ContentLength(state_1) > 0) {\r\n                    HtmlParser_HtmlState__Emit(state_1);\r\n                }\r\n                else {\r\n                    HtmlParser_HtmlState__Pop(state_1);\r\n                    tagOpen(state_1);\r\n                }\r\n            }\r\n            else if (TextParser_$007CEndOfFile$007C_$007C(matchValue) != null) {\r\n                state_1.Tokens.contents = cons(new HtmlParser_HtmlToken(6), state_1.Tokens.contents);\r\n            }\r\n            else if (matchValue === \"\\u0026\") {\r\n                if (HtmlParser_HtmlState__get_ContentLength(state_1) > 0) {\r\n                    HtmlParser_HtmlState__Emit(state_1);\r\n                }\r\n                else {\r\n                    state_1.InsertionMode.contents = (new HtmlParser_InsertionMode(3));\r\n                    charRef(state_1);\r\n                }\r\n            }\r\n            else {\r\n                const matchValue_1 = state_1.InsertionMode.contents;\r\n                switch (matchValue_1.tag) {\r\n                    case 2: {\r\n                        script(state_1);\r\n                        break;\r\n                    }\r\n                    case 1: {\r\n                        HtmlParser_HtmlState__Cons(state_1);\r\n                        state_1_mut = state_1;\r\n                        continue data;\r\n                        break;\r\n                    }\r\n                    case 3: {\r\n                        charRef(state_1);\r\n                        break;\r\n                    }\r\n                    case 5: {\r\n                        docType(state_1);\r\n                        break;\r\n                    }\r\n                    case 4: {\r\n                        comment(state_1);\r\n                        break;\r\n                    }\r\n                    case 6: {\r\n                        state_1_mut = state_1;\r\n                        continue data;\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_1);\r\n                        state_1_mut = state_1;\r\n                        continue data;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const script = (state_2_mut) => {\r\n        script:\r\n        while (true) {\r\n            const state_2 = state_2_mut;\r\n            const matchValue_2 = HtmlParser_HtmlState__Peek(state_2);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_2) != null) {\r\n                data(state_2);\r\n            }\r\n            else {\r\n                switch (matchValue_2) {\r\n                    case \"\\\"\": {\r\n                        HtmlParser_HtmlState__Cons(state_2);\r\n                        scriptDoubleQuoteString(state_2);\r\n                        break;\r\n                    }\r\n                    case \"\\u0027\": {\r\n                        HtmlParser_HtmlState__Cons(state_2);\r\n                        scriptSingleQuoteString(state_2);\r\n                        break;\r\n                    }\r\n                    case \"/\": {\r\n                        HtmlParser_HtmlState__Cons(state_2);\r\n                        scriptSlash(state_2);\r\n                        break;\r\n                    }\r\n                    case \"\\u003c\": {\r\n                        HtmlParser_HtmlState__Pop(state_2);\r\n                        scriptLessThanSign(state_2);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_2);\r\n                        state_2_mut = state_2;\r\n                        continue script;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptSingleQuoteString = (state_3_mut) => {\r\n        scriptSingleQuoteString:\r\n        while (true) {\r\n            const state_3 = state_3_mut;\r\n            const matchValue_3 = HtmlParser_HtmlState__Peek(state_3);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_3) != null) {\r\n                data(state_3);\r\n            }\r\n            else {\r\n                switch (matchValue_3) {\r\n                    case \"\\u0027\": {\r\n                        HtmlParser_HtmlState__Cons(state_3);\r\n                        script(state_3);\r\n                        break;\r\n                    }\r\n                    case \"\\\\\": {\r\n                        HtmlParser_HtmlState__Cons(state_3);\r\n                        scriptSingleQuoteStringBackslash(state_3);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_3);\r\n                        state_3_mut = state_3;\r\n                        continue scriptSingleQuoteString;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDoubleQuoteString = (state_4_mut) => {\r\n        scriptDoubleQuoteString:\r\n        while (true) {\r\n            const state_4 = state_4_mut;\r\n            const matchValue_4 = HtmlParser_HtmlState__Peek(state_4);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_4) != null) {\r\n                data(state_4);\r\n            }\r\n            else {\r\n                switch (matchValue_4) {\r\n                    case \"\\\"\": {\r\n                        HtmlParser_HtmlState__Cons(state_4);\r\n                        script(state_4);\r\n                        break;\r\n                    }\r\n                    case \"\\\\\": {\r\n                        HtmlParser_HtmlState__Cons(state_4);\r\n                        scriptDoubleQuoteStringBackslash(state_4);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_4);\r\n                        state_4_mut = state_4;\r\n                        continue scriptDoubleQuoteString;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptSingleQuoteStringBackslash = (state_5) => {\r\n        const matchValue_5 = HtmlParser_HtmlState__Peek(state_5);\r\n        HtmlParser_HtmlState__Cons(state_5);\r\n        scriptSingleQuoteString(state_5);\r\n    };\r\n    const scriptDoubleQuoteStringBackslash = (state_6) => {\r\n        const matchValue_6 = HtmlParser_HtmlState__Peek(state_6);\r\n        HtmlParser_HtmlState__Cons(state_6);\r\n        scriptDoubleQuoteString(state_6);\r\n    };\r\n    const scriptSlash = (state_7) => {\r\n        const matchValue_7 = HtmlParser_HtmlState__Peek(state_7);\r\n        switch (matchValue_7) {\r\n            case \"*\": {\r\n                HtmlParser_HtmlState__Cons(state_7);\r\n                scriptMultiLineComment(state_7);\r\n                break;\r\n            }\r\n            case \"/\": {\r\n                HtmlParser_HtmlState__Cons(state_7);\r\n                scriptSingleLineComment(state_7);\r\n                break;\r\n            }\r\n            default: {\r\n                script(state_7);\r\n            }\r\n        }\r\n    };\r\n    const scriptMultiLineComment = (state_8_mut) => {\r\n        scriptMultiLineComment:\r\n        while (true) {\r\n            const state_8 = state_8_mut;\r\n            const matchValue_8 = HtmlParser_HtmlState__Peek(state_8);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_8) != null) {\r\n                data(state_8);\r\n            }\r\n            else if (matchValue_8 === \"*\") {\r\n                HtmlParser_HtmlState__Cons(state_8);\r\n                scriptMultiLineCommentStar(state_8);\r\n            }\r\n            else {\r\n                HtmlParser_HtmlState__Cons(state_8);\r\n                state_8_mut = state_8;\r\n                continue scriptMultiLineComment;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptMultiLineCommentStar = (state_9) => {\r\n        const matchValue_9 = HtmlParser_HtmlState__Peek(state_9);\r\n        if (TextParser_$007CEndOfFile$007C_$007C(matchValue_9) != null) {\r\n            data(state_9);\r\n        }\r\n        else if (matchValue_9 === \"/\") {\r\n            HtmlParser_HtmlState__Cons(state_9);\r\n            script(state_9);\r\n        }\r\n        else {\r\n            scriptMultiLineComment(state_9);\r\n        }\r\n    };\r\n    const scriptSingleLineComment = (state_10_mut) => {\r\n        scriptSingleLineComment:\r\n        while (true) {\r\n            const state_10 = state_10_mut;\r\n            const matchValue_10 = HtmlParser_HtmlState__Peek(state_10);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_10) != null) {\r\n                data(state_10);\r\n            }\r\n            else if (matchValue_10 === \"\\n\") {\r\n                HtmlParser_HtmlState__Cons(state_10);\r\n                script(state_10);\r\n            }\r\n            else {\r\n                HtmlParser_HtmlState__Cons(state_10);\r\n                state_10_mut = state_10;\r\n                continue scriptSingleLineComment;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptLessThanSign = (state_11) => {\r\n        const matchValue_11 = HtmlParser_HtmlState__Peek(state_11);\r\n        switch (matchValue_11) {\r\n            case \"!\": {\r\n                HtmlParser_HtmlState__Cons_244C7CD6(state_11, \"\\u003c\");\r\n                HtmlParser_HtmlState__Cons(state_11);\r\n                scriptDataEscapeStart(state_11);\r\n                break;\r\n            }\r\n            case \"/\": {\r\n                HtmlParser_HtmlState__Pop(state_11);\r\n                scriptEndTagOpen(state_11);\r\n                break;\r\n            }\r\n            default: {\r\n                HtmlParser_HtmlState__Cons_244C7CD6(state_11, \"\\u003c\");\r\n                HtmlParser_HtmlState__Cons(state_11);\r\n                script(state_11);\r\n            }\r\n        }\r\n    };\r\n    const scriptDataEscapeStart = (state_12) => {\r\n        if (HtmlParser_HtmlState__Peek(state_12) === \"-\") {\r\n            HtmlParser_HtmlState__Cons(state_12);\r\n            scriptDataEscapeStartDash(state_12);\r\n        }\r\n        else {\r\n            script(state_12);\r\n        }\r\n    };\r\n    const scriptDataEscapeStartDash = (state_13) => {\r\n        if (HtmlParser_HtmlState__Peek(state_13) === \"-\") {\r\n            HtmlParser_HtmlState__Cons(state_13);\r\n            scriptDataEscapedDashDash(state_13);\r\n        }\r\n        else {\r\n            script(state_13);\r\n        }\r\n    };\r\n    const scriptDataEscapedDashDash = (state_14_mut) => {\r\n        scriptDataEscapedDashDash:\r\n        while (true) {\r\n            const state_14 = state_14_mut;\r\n            const matchValue_14 = HtmlParser_HtmlState__Peek(state_14);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_14) != null) {\r\n                data(state_14);\r\n            }\r\n            else {\r\n                switch (matchValue_14) {\r\n                    case \"-\": {\r\n                        HtmlParser_HtmlState__Cons(state_14);\r\n                        state_14_mut = state_14;\r\n                        continue scriptDataEscapedDashDash;\r\n                        break;\r\n                    }\r\n                    case \"\\u003c\": {\r\n                        HtmlParser_HtmlState__Pop(state_14);\r\n                        scriptDataEscapedLessThanSign(state_14);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Cons(state_14);\r\n                        script(state_14);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_14);\r\n                        scriptDataEscaped(state_14);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataEscapedLessThanSign = (state_15) => {\r\n        const matchValue_15 = HtmlParser_HtmlState__Peek(state_15);\r\n        if (matchValue_15 === \"/\") {\r\n            HtmlParser_HtmlState__Pop(state_15);\r\n            scriptDataEscapedEndTagOpen(state_15);\r\n        }\r\n        else if (TextParser_$007CLetter$007C_$007C(matchValue_15) != null) {\r\n            HtmlParser_HtmlState__Cons_244C7CD6(state_15, \"\\u003c\");\r\n            HtmlParser_HtmlState__Cons(state_15);\r\n            scriptDataDoubleEscapeStart(state_15);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons_244C7CD6(state_15, \"\\u003c\");\r\n            HtmlParser_HtmlState__Cons(state_15);\r\n            scriptDataEscaped(state_15);\r\n        }\r\n    };\r\n    const scriptDataDoubleEscapeStart = (state_16_mut) => {\r\n        scriptDataDoubleEscapeStart:\r\n        while (true) {\r\n            const state_16 = state_16_mut;\r\n            const matchValue_16 = HtmlParser_HtmlState__Peek(state_16);\r\n            let pattern_matching_result;\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_16) != null) {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_16)) {\r\n                    pattern_matching_result = 0;\r\n                }\r\n                else if (matchValue_16 === \"/\") {\r\n                    if (HtmlParser_HtmlState__get_IsScriptTag(state_16)) {\r\n                        pattern_matching_result = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else if (matchValue_16 === \"\\u003e\") {\r\n                    if (HtmlParser_HtmlState__get_IsScriptTag(state_16)) {\r\n                        pattern_matching_result = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else if (matchValue_16 === \"/\") {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_16)) {\r\n                    pattern_matching_result = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else if (matchValue_16 === \"\\u003e\") {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_16)) {\r\n                    pattern_matching_result = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    HtmlParser_HtmlState__Cons(state_16);\r\n                    scriptDataDoubleEscaped(state_16);\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    if (TextParser_$007CLetter$007C_$007C(matchValue_16) != null) {\r\n                        HtmlParser_HtmlState__Cons(state_16);\r\n                        state_16_mut = state_16;\r\n                        continue scriptDataDoubleEscapeStart;\r\n                    }\r\n                    else {\r\n                        HtmlParser_HtmlState__Cons(state_16);\r\n                        scriptDataEscaped(state_16);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataDoubleEscaped = (state_17_mut) => {\r\n        scriptDataDoubleEscaped:\r\n        while (true) {\r\n            const state_17 = state_17_mut;\r\n            const matchValue_17 = HtmlParser_HtmlState__Peek(state_17);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_17) != null) {\r\n                data(state_17);\r\n            }\r\n            else {\r\n                switch (matchValue_17) {\r\n                    case \"-\": {\r\n                        HtmlParser_HtmlState__Cons(state_17);\r\n                        scriptDataDoubleEscapedDash(state_17);\r\n                        break;\r\n                    }\r\n                    case \"\\u003c\": {\r\n                        HtmlParser_HtmlState__Cons(state_17);\r\n                        scriptDataDoubleEscapedLessThanSign(state_17);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_17);\r\n                        state_17_mut = state_17;\r\n                        continue scriptDataDoubleEscaped;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataDoubleEscapedDash = (state_18) => {\r\n        const matchValue_18 = HtmlParser_HtmlState__Peek(state_18);\r\n        if (TextParser_$007CEndOfFile$007C_$007C(matchValue_18) != null) {\r\n            data(state_18);\r\n        }\r\n        else {\r\n            switch (matchValue_18) {\r\n                case \"-\": {\r\n                    HtmlParser_HtmlState__Cons(state_18);\r\n                    scriptDataDoubleEscapedDashDash(state_18);\r\n                    break;\r\n                }\r\n                case \"\\u003c\": {\r\n                    HtmlParser_HtmlState__Cons(state_18);\r\n                    scriptDataDoubleEscapedLessThanSign(state_18);\r\n                    break;\r\n                }\r\n                default: {\r\n                    HtmlParser_HtmlState__Cons(state_18);\r\n                    scriptDataDoubleEscaped(state_18);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const scriptDataDoubleEscapedLessThanSign = (state_19) => {\r\n        if (HtmlParser_HtmlState__Peek(state_19) === \"/\") {\r\n            HtmlParser_HtmlState__Cons(state_19);\r\n            scriptDataDoubleEscapeEnd(state_19);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons(state_19);\r\n            scriptDataDoubleEscaped(state_19);\r\n        }\r\n    };\r\n    const scriptDataDoubleEscapeEnd = (state_20_mut) => {\r\n        scriptDataDoubleEscapeEnd:\r\n        while (true) {\r\n            const state_20 = state_20_mut;\r\n            const matchValue_20 = HtmlParser_HtmlState__Peek(state_20);\r\n            let pattern_matching_result_1;\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_20) != null) {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_20)) {\r\n                    pattern_matching_result_1 = 0;\r\n                }\r\n                else if (matchValue_20 === \"/\") {\r\n                    if (HtmlParser_HtmlState__get_IsScriptTag(state_20)) {\r\n                        pattern_matching_result_1 = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else if (matchValue_20 === \"\\u003e\") {\r\n                    if (HtmlParser_HtmlState__get_IsScriptTag(state_20)) {\r\n                        pattern_matching_result_1 = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n            }\r\n            else if (matchValue_20 === \"/\") {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_20)) {\r\n                    pattern_matching_result_1 = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n            }\r\n            else if (matchValue_20 === \"\\u003e\") {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_20)) {\r\n                    pattern_matching_result_1 = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result_1 = 1;\r\n            }\r\n            switch (pattern_matching_result_1) {\r\n                case 0: {\r\n                    HtmlParser_HtmlState__Cons(state_20);\r\n                    scriptDataDoubleEscaped(state_20);\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    if (TextParser_$007CLetter$007C_$007C(matchValue_20) != null) {\r\n                        HtmlParser_HtmlState__Cons(state_20);\r\n                        state_20_mut = state_20;\r\n                        continue scriptDataDoubleEscapeEnd;\r\n                    }\r\n                    else {\r\n                        HtmlParser_HtmlState__Cons(state_20);\r\n                        scriptDataDoubleEscaped(state_20);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataDoubleEscapedDashDash = (state_21_mut) => {\r\n        scriptDataDoubleEscapedDashDash:\r\n        while (true) {\r\n            const state_21 = state_21_mut;\r\n            const matchValue_21 = HtmlParser_HtmlState__Peek(state_21);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_21) != null) {\r\n                data(state_21);\r\n            }\r\n            else {\r\n                switch (matchValue_21) {\r\n                    case \"-\": {\r\n                        HtmlParser_HtmlState__Cons(state_21);\r\n                        state_21_mut = state_21;\r\n                        continue scriptDataDoubleEscapedDashDash;\r\n                        break;\r\n                    }\r\n                    case \"\\u003c\": {\r\n                        HtmlParser_HtmlState__Cons(state_21);\r\n                        scriptDataDoubleEscapedLessThanSign(state_21);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Cons(state_21);\r\n                        script(state_21);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_21);\r\n                        scriptDataDoubleEscaped(state_21);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataEscapedEndTagOpen = (state_22) => {\r\n        const matchValue_22 = HtmlParser_HtmlState__Peek(state_22);\r\n        if (TextParser_$007CLetter$007C_$007C(matchValue_22) != null) {\r\n            scriptDataEscapedEndTagName(state_22);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons_695F1130(state_22, [\"\\u003c\", \"/\"]);\r\n            HtmlParser_HtmlState__Cons(state_22);\r\n            scriptDataEscaped(state_22);\r\n        }\r\n    };\r\n    const scriptDataEscapedEndTagName = (state_23_mut) => {\r\n        scriptDataEscapedEndTagName:\r\n        while (true) {\r\n            const state_23 = state_23_mut;\r\n            const matchValue_23 = HtmlParser_HtmlState__Peek(state_23);\r\n            let pattern_matching_result_2;\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_23) != null) {\r\n                if (HtmlParser_HtmlState__get_IsScriptTag(state_23)) {\r\n                    pattern_matching_result_2 = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result_2 = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result_2 = 1;\r\n            }\r\n            switch (pattern_matching_result_2) {\r\n                case 0: {\r\n                    HtmlParser_HtmlState__Pop(state_23);\r\n                    beforeAttributeName(state_23);\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    let pattern_matching_result_3;\r\n                    if (matchValue_23 === \"/\") {\r\n                        if (HtmlParser_HtmlState__get_IsScriptTag(state_23)) {\r\n                            pattern_matching_result_3 = 0;\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_3 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_3 = 1;\r\n                    }\r\n                    switch (pattern_matching_result_3) {\r\n                        case 0: {\r\n                            HtmlParser_HtmlState__Pop(state_23);\r\n                            selfClosingStartTag(state_23);\r\n                            break;\r\n                        }\r\n                        case 1: {\r\n                            let pattern_matching_result_4;\r\n                            if (matchValue_23 === \"\\u003e\") {\r\n                                if (HtmlParser_HtmlState__get_IsScriptTag(state_23)) {\r\n                                    pattern_matching_result_4 = 0;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_4 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_4 = 1;\r\n                            }\r\n                            switch (pattern_matching_result_4) {\r\n                                case 0: {\r\n                                    HtmlParser_HtmlState__Pop(state_23);\r\n                                    HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_23, true);\r\n                                    break;\r\n                                }\r\n                                case 1: {\r\n                                    if (matchValue_23 === \"\\u003e\") {\r\n                                        HtmlParser_HtmlState__Cons_695F1130(state_23, [\"\\u003c\", \"/\"]);\r\n                                        HtmlParser_HtmlState__Cons_Z721C83C5(state_23, HtmlParser_HtmlState__CurrentTagName(state_23));\r\n                                        HtmlParser_CharList__Clear(state_23.CurrentTag.contents);\r\n                                        script(state_23);\r\n                                    }\r\n                                    else if (TextParser_$007CLetter$007C_$007C(matchValue_23) != null) {\r\n                                        HtmlParser_HtmlState__ConsTag(state_23);\r\n                                        state_23_mut = state_23;\r\n                                        continue scriptDataEscapedEndTagName;\r\n                                    }\r\n                                    else {\r\n                                        HtmlParser_HtmlState__Cons_695F1130(state_23, [\"\\u003c\", \"/\"]);\r\n                                        HtmlParser_HtmlState__Cons(state_23);\r\n                                        scriptDataEscaped(state_23);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataEscaped = (state_24_mut) => {\r\n        scriptDataEscaped:\r\n        while (true) {\r\n            const state_24 = state_24_mut;\r\n            const matchValue_24 = HtmlParser_HtmlState__Peek(state_24);\r\n            if (TextParser_$007CEndOfFile$007C_$007C(matchValue_24) != null) {\r\n                data(state_24);\r\n            }\r\n            else {\r\n                switch (matchValue_24) {\r\n                    case \"-\": {\r\n                        HtmlParser_HtmlState__Cons(state_24);\r\n                        scriptDataEscapedDash(state_24);\r\n                        break;\r\n                    }\r\n                    case \"\\u003c\": {\r\n                        scriptDataEscapedLessThanSign(state_24);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__Cons(state_24);\r\n                        state_24_mut = state_24;\r\n                        continue scriptDataEscaped;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const scriptDataEscapedDash = (state_25) => {\r\n        const matchValue_25 = HtmlParser_HtmlState__Peek(state_25);\r\n        if (TextParser_$007CEndOfFile$007C_$007C(matchValue_25) != null) {\r\n            data(state_25);\r\n        }\r\n        else {\r\n            switch (matchValue_25) {\r\n                case \"-\": {\r\n                    HtmlParser_HtmlState__Cons(state_25);\r\n                    scriptDataEscapedDashDash(state_25);\r\n                    break;\r\n                }\r\n                case \"\\u003c\": {\r\n                    scriptDataEscapedLessThanSign(state_25);\r\n                    break;\r\n                }\r\n                default: {\r\n                    HtmlParser_HtmlState__Cons(state_25);\r\n                    scriptDataEscaped(state_25);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const scriptEndTagOpen = (state_26) => {\r\n        const matchValue_26 = HtmlParser_HtmlState__Peek(state_26);\r\n        if (TextParser_$007CLetter$007C_$007C(matchValue_26) != null) {\r\n            scriptEndTagName(state_26);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons_244C7CD6(state_26, \"\\u003c\");\r\n            HtmlParser_HtmlState__Cons_244C7CD6(state_26, \"/\");\r\n            script(state_26);\r\n        }\r\n    };\r\n    const scriptEndTagName = (state_27_mut) => {\r\n        scriptEndTagName:\r\n        while (true) {\r\n            const state_27 = state_27_mut;\r\n            const matchValue_27 = HtmlParser_HtmlState__Peek(state_27);\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_27) != null) {\r\n                HtmlParser_HtmlState__Pop(state_27);\r\n                beforeAttributeName(state_27);\r\n            }\r\n            else {\r\n                let pattern_matching_result_5;\r\n                if (matchValue_27 === \"/\") {\r\n                    if (HtmlParser_HtmlState__get_IsScriptTag(state_27)) {\r\n                        pattern_matching_result_5 = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_5 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_5 = 1;\r\n                }\r\n                switch (pattern_matching_result_5) {\r\n                    case 0: {\r\n                        HtmlParser_HtmlState__Pop(state_27);\r\n                        selfClosingStartTag(state_27);\r\n                        break;\r\n                    }\r\n                    case 1: {\r\n                        let pattern_matching_result_6;\r\n                        if (matchValue_27 === \"\\u003e\") {\r\n                            if (HtmlParser_HtmlState__get_IsScriptTag(state_27)) {\r\n                                pattern_matching_result_6 = 0;\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_6 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_6 = 1;\r\n                        }\r\n                        switch (pattern_matching_result_6) {\r\n                            case 0: {\r\n                                HtmlParser_HtmlState__Pop(state_27);\r\n                                HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_27, true);\r\n                                break;\r\n                            }\r\n                            case 1: {\r\n                                if (TextParser_$007CLetter$007C_$007C(matchValue_27) != null) {\r\n                                    HtmlParser_HtmlState__ConsTag(state_27);\r\n                                    state_27_mut = state_27;\r\n                                    continue scriptEndTagName;\r\n                                }\r\n                                else {\r\n                                    HtmlParser_HtmlState__Cons_695F1130(state_27, [\"\\u003c\", \"/\"]);\r\n                                    HtmlParser_HtmlState__Cons_Z721C83C5(state_27, HtmlParser_HtmlState__CurrentTagName(state_27));\r\n                                    HtmlParser_CharList__Clear(state_27.CurrentTag.contents);\r\n                                    script(state_27);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const charRef = (state_28_mut) => {\r\n        charRef:\r\n        while (true) {\r\n            const state_28 = state_28_mut;\r\n            const matchValue_28 = HtmlParser_HtmlState__Peek(state_28);\r\n            switch (matchValue_28) {\r\n                case \";\": {\r\n                    HtmlParser_HtmlState__Cons(state_28);\r\n                    HtmlParser_HtmlState__Emit(state_28);\r\n                    break;\r\n                }\r\n                case \"\\u003c\": {\r\n                    HtmlParser_HtmlState__Emit(state_28);\r\n                    break;\r\n                }\r\n                default: {\r\n                    HtmlParser_HtmlState__Cons(state_28);\r\n                    state_28_mut = state_28;\r\n                    continue charRef;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const tagOpen = (state_29) => {\r\n        const matchValue_29 = HtmlParser_HtmlState__Peek(state_29);\r\n        if (matchValue_29 === \"!\") {\r\n            HtmlParser_HtmlState__Pop(state_29);\r\n            markupDeclaration(state_29);\r\n        }\r\n        else if (matchValue_29 === \"/\") {\r\n            HtmlParser_HtmlState__Pop(state_29);\r\n            endTagOpen(state_29);\r\n        }\r\n        else if (matchValue_29 === \"?\") {\r\n            HtmlParser_HtmlState__Pop(state_29);\r\n            bogusComment(state_29);\r\n        }\r\n        else if (TextParser_$007CLetter$007C_$007C(matchValue_29) != null) {\r\n            HtmlParser_HtmlState__ConsTag(state_29);\r\n            tagName(false)(state_29);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons_244C7CD6(state_29, \"\\u003c\");\r\n            data(state_29);\r\n        }\r\n    };\r\n    const bogusComment = (state_30) => {\r\n        const bogusComment$0027 = (state_31_mut) => {\r\n            bogusComment$0027:\r\n            while (true) {\r\n                const state_31 = state_31_mut;\r\n                const exitBogusComment = (state_32) => {\r\n                    state_32.InsertionMode.contents = (new HtmlParser_InsertionMode(4));\r\n                    HtmlParser_HtmlState__Emit(state_32);\r\n                };\r\n                const matchValue_30 = HtmlParser_HtmlState__Peek(state_31);\r\n                if (matchValue_30 === \"\\u003e\") {\r\n                    HtmlParser_HtmlState__Cons(state_31);\r\n                    exitBogusComment(state_31);\r\n                }\r\n                else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_30) != null) {\r\n                    exitBogusComment(state_31);\r\n                }\r\n                else {\r\n                    HtmlParser_HtmlState__Cons(state_31);\r\n                    state_31_mut = state_31;\r\n                    continue bogusComment$0027;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        bogusComment$0027(state_30);\r\n    };\r\n    const markupDeclaration = (state_33) => {\r\n        const matchValue_31 = HtmlParser_HtmlState__Pop_Z524259A4(state_33, 2);\r\n        let pattern_matching_result_7, current;\r\n        if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue_31, null)) ? (matchValue_31.length === 2) : false) {\r\n            if (matchValue_31[0] === \"-\") {\r\n                if (matchValue_31[1] === \"-\") {\r\n                    pattern_matching_result_7 = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result_7 = 1;\r\n                    current = matchValue_31;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result_7 = 1;\r\n                current = matchValue_31;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result_7 = 1;\r\n            current = matchValue_31;\r\n        }\r\n        switch (pattern_matching_result_7) {\r\n            case 0: {\r\n                comment(state_33);\r\n                break;\r\n            }\r\n            case 1: {\r\n                const matchValue_32 = append_1(current, HtmlParser_HtmlState__Pop_Z524259A4(state_33, 5)).join('');\r\n                switch (matchValue_32) {\r\n                    case \"DOCTYPE\": {\r\n                        docType(state_33);\r\n                        break;\r\n                    }\r\n                    case \"[CDATA[\": {\r\n                        HtmlParser_HtmlState__Cons_695F1130(state_33, \"\\u003c![CDATA[\".split(\"\"));\r\n                        cData(0)(state_33);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        bogusComment(state_33);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    const cData = (i) => ((state_34) => {\r\n        const matchValue_33 = HtmlParser_HtmlState__Peek(state_34);\r\n        let pattern_matching_result_8;\r\n        if (matchValue_33 === \"]\") {\r\n            if ((i === 0) ? true : (i === 1)) {\r\n                pattern_matching_result_8 = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result_8 = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result_8 = 1;\r\n        }\r\n        switch (pattern_matching_result_8) {\r\n            case 0: {\r\n                HtmlParser_HtmlState__Cons(state_34);\r\n                cData(i + 1)(state_34);\r\n                break;\r\n            }\r\n            case 1: {\r\n                let pattern_matching_result_9;\r\n                if (matchValue_33 === \"\\u003e\") {\r\n                    if (i === 2) {\r\n                        pattern_matching_result_9 = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_9 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_9 = 1;\r\n                }\r\n                switch (pattern_matching_result_9) {\r\n                    case 0: {\r\n                        HtmlParser_HtmlState__Cons(state_34);\r\n                        state_34.InsertionMode.contents = (new HtmlParser_InsertionMode(6));\r\n                        HtmlParser_HtmlState__Emit(state_34);\r\n                        break;\r\n                    }\r\n                    case 1: {\r\n                        if (TextParser_$007CEndOfFile$007C_$007C(matchValue_33) != null) {\r\n                            state_34.InsertionMode.contents = (new HtmlParser_InsertionMode(6));\r\n                            HtmlParser_HtmlState__Emit(state_34);\r\n                        }\r\n                        else {\r\n                            HtmlParser_HtmlState__Cons(state_34);\r\n                            cData(0)(state_34);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    const docType = (state_35_mut) => {\r\n        docType:\r\n        while (true) {\r\n            const state_35 = state_35_mut;\r\n            if (HtmlParser_HtmlState__Peek(state_35) === \"\\u003e\") {\r\n                HtmlParser_HtmlState__Pop(state_35);\r\n                state_35.InsertionMode.contents = (new HtmlParser_InsertionMode(5));\r\n                HtmlParser_HtmlState__Emit(state_35);\r\n            }\r\n            else {\r\n                HtmlParser_HtmlState__Cons(state_35);\r\n                state_35_mut = state_35;\r\n                continue docType;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const comment = (state_36_mut) => {\r\n        comment:\r\n        while (true) {\r\n            const state_36 = state_36_mut;\r\n            const matchValue_35 = HtmlParser_HtmlState__Peek(state_36);\r\n            if (matchValue_35 === \"-\") {\r\n                HtmlParser_HtmlState__Pop(state_36);\r\n                commentEndDash(state_36);\r\n            }\r\n            else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_35) != null) {\r\n                state_36.InsertionMode.contents = (new HtmlParser_InsertionMode(4));\r\n                HtmlParser_HtmlState__Emit(state_36);\r\n            }\r\n            else {\r\n                HtmlParser_HtmlState__Cons(state_36);\r\n                state_36_mut = state_36;\r\n                continue comment;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const commentEndDash = (state_37) => {\r\n        const matchValue_36 = HtmlParser_HtmlState__Peek(state_37);\r\n        if (matchValue_36 === \"-\") {\r\n            HtmlParser_HtmlState__Pop(state_37);\r\n            commentEndState(state_37);\r\n        }\r\n        else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_36) != null) {\r\n            state_37.InsertionMode.contents = (new HtmlParser_InsertionMode(4));\r\n            HtmlParser_HtmlState__Emit(state_37);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons(state_37);\r\n            comment(state_37);\r\n        }\r\n    };\r\n    const commentEndState = (state_38) => {\r\n        const matchValue_37 = HtmlParser_HtmlState__Peek(state_38);\r\n        if (matchValue_37 === \"\\u003e\") {\r\n            HtmlParser_HtmlState__Pop(state_38);\r\n            state_38.InsertionMode.contents = (new HtmlParser_InsertionMode(4));\r\n            HtmlParser_HtmlState__Emit(state_38);\r\n        }\r\n        else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_37) != null) {\r\n            state_38.InsertionMode.contents = (new HtmlParser_InsertionMode(4));\r\n            HtmlParser_HtmlState__Emit(state_38);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons(state_38);\r\n            comment(state_38);\r\n        }\r\n    };\r\n    const tagName = (isEndTag) => ((state_39) => {\r\n        const matchValue_38 = HtmlParser_HtmlState__Peek(state_39);\r\n        if (TextParser_$007CWhitespace$007C_$007C(matchValue_38) != null) {\r\n            HtmlParser_HtmlState__Pop(state_39);\r\n            beforeAttributeName(state_39);\r\n        }\r\n        else {\r\n            switch (matchValue_38) {\r\n                case \"/\": {\r\n                    HtmlParser_HtmlState__Pop(state_39);\r\n                    selfClosingStartTag(state_39);\r\n                    break;\r\n                }\r\n                case \"\\u003e\": {\r\n                    HtmlParser_HtmlState__Pop(state_39);\r\n                    HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_39, isEndTag);\r\n                    break;\r\n                }\r\n                default: {\r\n                    HtmlParser_HtmlState__ConsTag(state_39);\r\n                    tagName(isEndTag)(state_39);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    const selfClosingStartTag = (state_40) => {\r\n        const matchValue_39 = HtmlParser_HtmlState__Peek(state_40);\r\n        if (matchValue_39 === \"\\u003e\") {\r\n            HtmlParser_HtmlState__Pop(state_40);\r\n            HtmlParser_HtmlState__EmitSelfClosingTag(state_40);\r\n        }\r\n        else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_39) != null) {\r\n            data(state_40);\r\n        }\r\n        else {\r\n            beforeAttributeName(state_40);\r\n        }\r\n    };\r\n    const endTagOpen = (state_41) => {\r\n        const matchValue_40 = HtmlParser_HtmlState__Peek(state_41);\r\n        if (TextParser_$007CEndOfFile$007C_$007C(matchValue_40) != null) {\r\n            data(state_41);\r\n        }\r\n        else if (TextParser_$007CLetter$007C_$007C(matchValue_40) != null) {\r\n            HtmlParser_HtmlState__ConsTag(state_41);\r\n            tagName(true)(state_41);\r\n        }\r\n        else if (matchValue_40 === \"\\u003e\") {\r\n            HtmlParser_HtmlState__Pop(state_41);\r\n            data(state_41);\r\n        }\r\n        else {\r\n            comment(state_41);\r\n        }\r\n    };\r\n    const beforeAttributeName = (state_42_mut) => {\r\n        beforeAttributeName:\r\n        while (true) {\r\n            const state_42 = state_42_mut;\r\n            const matchValue_41 = HtmlParser_HtmlState__Peek(state_42);\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_41) != null) {\r\n                HtmlParser_HtmlState__Pop(state_42);\r\n                state_42_mut = state_42;\r\n                continue beforeAttributeName;\r\n            }\r\n            else {\r\n                switch (matchValue_41) {\r\n                    case \"/\": {\r\n                        HtmlParser_HtmlState__Pop(state_42);\r\n                        selfClosingStartTag(state_42);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Pop(state_42);\r\n                        HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_42, false);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        attributeName(state_42);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const attributeName = (state_43_mut) => {\r\n        attributeName:\r\n        while (true) {\r\n            const state_43 = state_43_mut;\r\n            const matchValue_42 = HtmlParser_HtmlState__Peek(state_43);\r\n            if (matchValue_42 === \"/\") {\r\n                HtmlParser_HtmlState__Pop(state_43);\r\n                selfClosingStartTag(state_43);\r\n            }\r\n            else if (matchValue_42 === \"=\") {\r\n                HtmlParser_HtmlState__Pop(state_43);\r\n                beforeAttributeValue(state_43);\r\n            }\r\n            else if (matchValue_42 === \"\\u003e\") {\r\n                HtmlParser_HtmlState__Pop(state_43);\r\n                HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_43, false);\r\n            }\r\n            else if (TextParser_$007CLetterDigit$007C_$007C(matchValue_42) != null) {\r\n                HtmlParser_HtmlState__ConsAttrName(state_43);\r\n                state_43_mut = state_43;\r\n                continue attributeName;\r\n            }\r\n            else if (TextParser_$007CWhitespace$007C_$007C(matchValue_42) != null) {\r\n                afterAttributeName(state_43);\r\n            }\r\n            else {\r\n                HtmlParser_HtmlState__ConsAttrName(state_43);\r\n                state_43_mut = state_43;\r\n                continue attributeName;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const afterAttributeName = (state_44_mut) => {\r\n        afterAttributeName:\r\n        while (true) {\r\n            const state_44 = state_44_mut;\r\n            const matchValue_43 = HtmlParser_HtmlState__Peek(state_44);\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_43) != null) {\r\n                HtmlParser_HtmlState__Pop(state_44);\r\n                state_44_mut = state_44;\r\n                continue afterAttributeName;\r\n            }\r\n            else {\r\n                switch (matchValue_43) {\r\n                    case \"/\": {\r\n                        HtmlParser_HtmlState__Pop(state_44);\r\n                        selfClosingStartTag(state_44);\r\n                        break;\r\n                    }\r\n                    case \"=\": {\r\n                        HtmlParser_HtmlState__Pop(state_44);\r\n                        beforeAttributeValue(state_44);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Pop(state_44);\r\n                        HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_44, false);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__NewAttribute(state_44);\r\n                        attributeName(state_44);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const beforeAttributeValue = (state_45_mut) => {\r\n        beforeAttributeValue:\r\n        while (true) {\r\n            const state_45 = state_45_mut;\r\n            const matchValue_44 = HtmlParser_HtmlState__Peek(state_45);\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_44) != null) {\r\n                HtmlParser_HtmlState__Pop(state_45);\r\n                state_45_mut = state_45;\r\n                continue beforeAttributeValue;\r\n            }\r\n            else {\r\n                switch (matchValue_44) {\r\n                    case \"\\\"\": {\r\n                        HtmlParser_HtmlState__Pop(state_45);\r\n                        attributeValueQuoted(\"\\\"\")(state_45);\r\n                        break;\r\n                    }\r\n                    case \"\\u0027\": {\r\n                        HtmlParser_HtmlState__Pop(state_45);\r\n                        attributeValueQuoted(\"\\u0027\")(state_45);\r\n                        break;\r\n                    }\r\n                    case \"/\": {\r\n                        HtmlParser_HtmlState__Pop(state_45);\r\n                        selfClosingStartTag(state_45);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Pop(state_45);\r\n                        HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_45, false);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        attributeValueUnquoted(state_45);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const attributeValueUnquoted = (state_46_mut) => {\r\n        attributeValueUnquoted:\r\n        while (true) {\r\n            const state_46 = state_46_mut;\r\n            const matchValue_45 = HtmlParser_HtmlState__Peek(state_46);\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_45) != null) {\r\n                HtmlParser_HtmlState__Pop(state_46);\r\n                HtmlParser_HtmlState__NewAttribute(state_46);\r\n                beforeAttributeName(state_46);\r\n            }\r\n            else {\r\n                switch (matchValue_45) {\r\n                    case \"\\u0026\": {\r\n                        state_46.InsertionMode.contents = (new HtmlParser_InsertionMode(3));\r\n                        attributeValueUnquotedCharRef(ofArray([\"/\", \"\\u003e\"]))(state_46);\r\n                        break;\r\n                    }\r\n                    case \"/\": {\r\n                        HtmlParser_HtmlState__Pop(state_46);\r\n                        attributeValueUnquotedSlash(state_46);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Pop(state_46);\r\n                        HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_46, false);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__ConsAttrValue(state_46);\r\n                        state_46_mut = state_46;\r\n                        continue attributeValueUnquoted;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const attributeValueUnquotedSlash = (state_47) => {\r\n        if (HtmlParser_HtmlState__Peek(state_47) === \"\\u003e\") {\r\n            selfClosingStartTag(state_47);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__ConsAttrValue_244C7CD6(state_47, \"/\");\r\n            HtmlParser_HtmlState__ConsAttrValue(state_47);\r\n            attributeValueUnquoted(state_47);\r\n        }\r\n    };\r\n    const attributeValueQuoted = (quote) => ((state_48) => {\r\n        const matchValue_47 = HtmlParser_HtmlState__Peek(state_48);\r\n        if (TextParser_$007CEndOfFile$007C_$007C(matchValue_47) != null) {\r\n            data(state_48);\r\n        }\r\n        else if (matchValue_47 === quote) {\r\n            HtmlParser_HtmlState__Pop(state_48);\r\n            afterAttributeValueQuoted(state_48);\r\n        }\r\n        else if (matchValue_47 === \"\\u0026\") {\r\n            state_48.InsertionMode.contents = (new HtmlParser_InsertionMode(3));\r\n            attributeValueQuotedCharRef(quote)(state_48);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__ConsAttrValue(state_48);\r\n            attributeValueQuoted(quote)(state_48);\r\n        }\r\n    });\r\n    const attributeValueQuotedCharRef = (quote_1) => ((state_49) => {\r\n        const matchValue_48 = HtmlParser_HtmlState__Peek(state_49);\r\n        if (matchValue_48 === \";\") {\r\n            HtmlParser_HtmlState__Cons(state_49);\r\n            HtmlParser_HtmlState__EmitToAttributeValue(state_49);\r\n            attributeValueQuoted(quote_1)(state_49);\r\n        }\r\n        else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_48) != null) {\r\n            HtmlParser_HtmlState__EmitToAttributeValue(state_49);\r\n            attributeValueQuoted(quote_1)(state_49);\r\n        }\r\n        else if (matchValue_48 === quote_1) {\r\n            HtmlParser_HtmlState__EmitToAttributeValue(state_49);\r\n            attributeValueQuoted(quote_1)(state_49);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons(state_49);\r\n            attributeValueQuotedCharRef(quote_1)(state_49);\r\n        }\r\n    });\r\n    const attributeValueUnquotedCharRef = (stop) => ((state_50) => {\r\n        const matchValue_49 = HtmlParser_HtmlState__Peek(state_50);\r\n        if (matchValue_49 === \";\") {\r\n            HtmlParser_HtmlState__Cons(state_50);\r\n            HtmlParser_HtmlState__EmitToAttributeValue(state_50);\r\n            attributeValueUnquoted(state_50);\r\n        }\r\n        else if (TextParser_$007CEndOfFile$007C_$007C(matchValue_49) != null) {\r\n            HtmlParser_HtmlState__EmitToAttributeValue(state_50);\r\n            attributeValueUnquoted(state_50);\r\n        }\r\n        else if (exists((y_1) => (matchValue_49 === y_1), stop)) {\r\n            HtmlParser_HtmlState__EmitToAttributeValue(state_50);\r\n            attributeValueUnquoted(state_50);\r\n        }\r\n        else {\r\n            HtmlParser_HtmlState__Cons(state_50);\r\n            attributeValueUnquotedCharRef(stop)(state_50);\r\n        }\r\n    });\r\n    const afterAttributeValueQuoted = (state_51_mut) => {\r\n        afterAttributeValueQuoted:\r\n        while (true) {\r\n            const state_51 = state_51_mut;\r\n            const matchValue_50 = HtmlParser_HtmlState__Peek(state_51);\r\n            if (TextParser_$007CWhitespace$007C_$007C(matchValue_50) != null) {\r\n                HtmlParser_HtmlState__Pop(state_51);\r\n                HtmlParser_HtmlState__NewAttribute(state_51);\r\n                state_51_mut = state_51;\r\n                continue afterAttributeValueQuoted;\r\n            }\r\n            else {\r\n                switch (matchValue_50) {\r\n                    case \"/\": {\r\n                        HtmlParser_HtmlState__Pop(state_51);\r\n                        selfClosingStartTag(state_51);\r\n                        break;\r\n                    }\r\n                    case \"\\u003e\": {\r\n                        HtmlParser_HtmlState__Pop(state_51);\r\n                        HtmlParser_HtmlState__EmitTag_Z1FBCCD16(state_51, false);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        HtmlParser_HtmlState__NewAttribute(state_51);\r\n                        attributeName(state_51);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const isEos = new FSharpRef(StringReader__get_IsEndOfString(state.Reader));\r\n    while (!isEos.contents) {\r\n        data(state);\r\n        isEos.contents = StringReader__get_IsEndOfString(state.Reader);\r\n    }\r\n    return reverse(state.Tokens.contents);\r\n}\r\n\r\nfunction HtmlParser_parse(reader) {\r\n    const canNotHaveChildren = (name) => {\r\n        switch (name) {\r\n            case \"area\":\r\n            case \"base\":\r\n            case \"br\":\r\n            case \"col\":\r\n            case \"embed\":\r\n            case \"hr\":\r\n            case \"img\":\r\n            case \"input\":\r\n            case \"keygen\":\r\n            case \"link\":\r\n            case \"menuitem\":\r\n            case \"meta\":\r\n            case \"param\":\r\n            case \"source\":\r\n            case \"track\":\r\n            case \"wbr\": {\r\n                return true;\r\n            }\r\n            default: {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    const parse$0027 = (callstack, docType, elements, expectedTagEnd_4, parentTagName, tokens_2) => {\r\n        let tokens, expectedTagEnd_1, matchValue_1, tokens_1, expectedTagEnd_3, name_13, name_10, matchValue_2, matchValue;\r\n        const parse$0027_1 = partialApply(5, parse$0027, [callstack]);\r\n        const recursiveReturn = (tupledArg) => {\r\n            const dt = tupledArg[0];\r\n            const tokens_3 = tupledArg[1];\r\n            const content = tupledArg[2];\r\n            if (Stack$1__get_Count(callstack) === 0) {\r\n                return [dt, tokens_3, content];\r\n            }\r\n            else {\r\n                const patternInput = Stack$1__Pop(callstack);\r\n                return parse$0027_1(dt)(cons(new HtmlNode(0, patternInput[4], patternInput[5], content), patternInput[1]))(patternInput[2])(patternInput[3])(tokens_3);\r\n            }\r\n        };\r\n        let pattern_matching_result, dt_1, rest_2, rest_3, attributes_3, name_4, rest_4, attributes_4, name_5, rest_5;\r\n        if (!isEmpty(tokens_2)) {\r\n            if (head(tokens_2).tag === 0) {\r\n                pattern_matching_result = 0;\r\n                dt_1 = head(tokens_2).fields[0];\r\n                rest_2 = tail(tokens_2);\r\n            }\r\n            else if (head(tokens_2).tag === 1) {\r\n                if (head(tokens_2).fields[1] === \"br\") {\r\n                    if (isEmpty(head(tokens_2).fields[2])) {\r\n                        pattern_matching_result = 1;\r\n                        rest_3 = tail(tokens_2);\r\n                    }\r\n                    else if (head(tokens_2).fields[0]) {\r\n                        pattern_matching_result = 2;\r\n                        attributes_3 = head(tokens_2).fields[2];\r\n                        name_4 = head(tokens_2).fields[1];\r\n                        rest_4 = tail(tokens_2);\r\n                    }\r\n                    else if (canNotHaveChildren(head(tokens_2).fields[1])) {\r\n                        pattern_matching_result = 3;\r\n                        attributes_4 = head(tokens_2).fields[2];\r\n                        name_5 = head(tokens_2).fields[1];\r\n                        rest_5 = tail(tokens_2);\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 4;\r\n                    }\r\n                }\r\n                else if (head(tokens_2).fields[0]) {\r\n                    pattern_matching_result = 2;\r\n                    attributes_3 = head(tokens_2).fields[2];\r\n                    name_4 = head(tokens_2).fields[1];\r\n                    rest_4 = tail(tokens_2);\r\n                }\r\n                else if (canNotHaveChildren(head(tokens_2).fields[1])) {\r\n                    pattern_matching_result = 3;\r\n                    attributes_4 = head(tokens_2).fields[2];\r\n                    name_5 = head(tokens_2).fields[1];\r\n                    rest_5 = tail(tokens_2);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 4;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return parse$0027_1(dt_1.trim())(elements)(expectedTagEnd_4)(parentTagName)(rest_2);\r\n            }\r\n            case 1: {\r\n                return parse$0027_1(docType)(cons(new HtmlNode(1, \"\\n\"), elements))(expectedTagEnd_4)(parentTagName)(rest_3);\r\n            }\r\n            case 2: {\r\n                return parse$0027_1(docType)(cons(new HtmlNode(0, name_4, attributes_3, empty()), elements))(expectedTagEnd_4)(parentTagName)(rest_4);\r\n            }\r\n            case 3: {\r\n                return parse$0027_1(docType)(cons(new HtmlNode(0, name_5, attributes_4, empty()), elements))(expectedTagEnd_4)(parentTagName)(rest_5);\r\n            }\r\n            case 4: {\r\n                let pattern_matching_result_1, name_7;\r\n                if (!isEmpty(tokens_2)) {\r\n                    if (head(tokens_2).tag === 1) {\r\n                        if ((matchValue = [expectedTagEnd_4, head(tokens_2).fields[1]], (matchValue[0] === \"td\") ? ((matchValue[1] === \"tr\") ? true : ((matchValue[1] === \"td\") ? true : ((matchValue[1] === \"th\") ? true : false))) : ((matchValue[0] === \"th\") ? ((matchValue[1] === \"tr\") ? true : ((matchValue[1] === \"td\") ? true : ((matchValue[1] === \"th\") ? true : false))) : ((matchValue[0] === \"tr\") ? ((matchValue[1] === \"tr\") ? true : false) : ((matchValue[0] === \"li\") ? ((matchValue[1] === \"li\") ? true : false) : false))))) {\r\n                            pattern_matching_result_1 = 0;\r\n                            name_7 = head(tokens_2).fields[1];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        return parse$0027_1(docType)(elements)(expectedTagEnd_4)(parentTagName)((tokens = tokens_2, (expectedTagEnd_1 = expectedTagEnd_4, (matchValue_1 = [expectedTagEnd_1, name_7], (matchValue_1[0] === \"td\") ? ((matchValue_1[1] === \"tr\") ? ofArrayWithTail([new HtmlParser_HtmlToken(2, expectedTagEnd_1), new HtmlParser_HtmlToken(2, \"tr\")], tokens) : ((matchValue_1[1] === \"td\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_1), tokens) : ((matchValue_1[1] === \"th\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_1), tokens) : tokens))) : ((matchValue_1[0] === \"th\") ? ((matchValue_1[1] === \"tr\") ? ofArrayWithTail([new HtmlParser_HtmlToken(2, expectedTagEnd_1), new HtmlParser_HtmlToken(2, \"tr\")], tokens) : ((matchValue_1[1] === \"td\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_1), tokens) : ((matchValue_1[1] === \"th\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_1), tokens) : tokens))) : ((matchValue_1[0] === \"tr\") ? ((matchValue_1[1] === \"tr\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_1), tokens) : tokens) : ((matchValue_1[0] === \"li\") ? ((matchValue_1[1] === \"li\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_1), tokens) : tokens) : tokens)))))));\r\n                    }\r\n                    case 1: {\r\n                        let pattern_matching_result_2;\r\n                        if (!isEmpty(tokens_2)) {\r\n                            if (head(tokens_2).tag === 2) {\r\n                                if ((matchValue_2 = [expectedTagEnd_4, head(tokens_2).fields[0]], (matchValue_2[0] === \"td\") ? ((matchValue_2[1] === \"thead\") ? true : ((matchValue_2[1] === \"tbody\") ? true : ((matchValue_2[1] === \"tfoot\") ? true : ((matchValue_2[1] === \"table\") ? true : false)))) : ((matchValue_2[0] === \"th\") ? ((matchValue_2[1] === \"thead\") ? true : ((matchValue_2[1] === \"tbody\") ? true : ((matchValue_2[1] === \"tfoot\") ? true : ((matchValue_2[1] === \"table\") ? true : false)))) : ((matchValue_2[0] === \"tr\") ? ((matchValue_2[1] === \"thead\") ? true : ((matchValue_2[1] === \"tbody\") ? true : ((matchValue_2[1] === \"tfoot\") ? true : ((matchValue_2[1] === \"table\") ? true : false)))) : ((matchValue_2[0] === \"li\") ? ((matchValue_2[1] === \"ul\") ? true : false) : false))))) {\r\n                                    pattern_matching_result_2 = 0;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_2 = 1;\r\n                        }\r\n                        switch (pattern_matching_result_2) {\r\n                            case 0: {\r\n                                return parse$0027_1(docType)(elements)(expectedTagEnd_4)(parentTagName)((tokens_1 = tokens_2, (expectedTagEnd_3 = expectedTagEnd_4, (expectedTagEnd_3 === \"td\") ? ofArrayWithTail([new HtmlParser_HtmlToken(2, expectedTagEnd_3), new HtmlParser_HtmlToken(2, \"tr\")], tokens_1) : ((expectedTagEnd_3 === \"th\") ? ofArrayWithTail([new HtmlParser_HtmlToken(2, expectedTagEnd_3), new HtmlParser_HtmlToken(2, \"tr\")], tokens_1) : ((expectedTagEnd_3 === \"tr\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_3), tokens_1) : ((expectedTagEnd_3 === \"li\") ? cons(new HtmlParser_HtmlToken(2, expectedTagEnd_3), tokens_1) : tokens_1))))));\r\n                            }\r\n                            case 1: {\r\n                                let pattern_matching_result_3, attributes_5, name_11, rest_6;\r\n                                if (!isEmpty(tokens_2)) {\r\n                                    if (head(tokens_2).tag === 1) {\r\n                                        pattern_matching_result_3 = 0;\r\n                                        attributes_5 = head(tokens_2).fields[2];\r\n                                        name_11 = head(tokens_2).fields[1];\r\n                                        rest_6 = tail(tokens_2);\r\n                                    }\r\n                                    else if (head(tokens_2).tag === 2) {\r\n                                        if ((name_10 = head(tokens_2).fields[0], (name_10 !== expectedTagEnd_4) ? (name_10 === parentTagName) : false)) {\r\n                                            pattern_matching_result_3 = 1;\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_3 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_3 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_3 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_3) {\r\n                                    case 0: {\r\n                                        Stack$1__Push_2B595(callstack, [docType, elements, expectedTagEnd_4, parentTagName, name_11, attributes_5]);\r\n                                        return parse$0027_1(docType)(empty())(name_11)(expectedTagEnd_4)(rest_6);\r\n                                    }\r\n                                    case 1: {\r\n                                        return parse$0027_1(docType)(elements)(expectedTagEnd_4)(parentTagName)(cons(new HtmlParser_HtmlToken(2, expectedTagEnd_4), tokens_2));\r\n                                    }\r\n                                    case 2: {\r\n                                        let pattern_matching_result_4, name_14, rest_8;\r\n                                        if (!isEmpty(tokens_2)) {\r\n                                            if (head(tokens_2).tag === 2) {\r\n                                                if ((name_13 = head(tokens_2).fields[0], (name_13 !== expectedTagEnd_4) ? (name_13 !== (reverse_1(expectedTagEnd_4.split(\"\")).join(''))) : false)) {\r\n                                                    pattern_matching_result_4 = 0;\r\n                                                    name_14 = head(tokens_2).fields[0];\r\n                                                    rest_8 = tail(tokens_2);\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_4 = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_4 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_4 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_4) {\r\n                                            case 0: {\r\n                                                return parse$0027_1(docType)(elements)(expectedTagEnd_4)(parentTagName)(rest_8);\r\n                                            }\r\n                                            case 1: {\r\n                                                if (isEmpty(tokens_2)) {\r\n                                                    return recursiveReturn([docType, empty(), reverse(elements)]);\r\n                                                }\r\n                                                else if (head(tokens_2).tag === 2) {\r\n                                                    return recursiveReturn([docType, tail(tokens_2), reverse(elements)]);\r\n                                                }\r\n                                                else if (head(tokens_2).tag === 3) {\r\n                                                    if (head(tokens_2).fields[0] === \"\") {\r\n                                                        return parse$0027_1(docType)(elements)(expectedTagEnd_4)(parentTagName)(tail(tokens_2));\r\n                                                    }\r\n                                                    else {\r\n                                                        return parse$0027_1(docType)(cons(new HtmlNode(1, head(tokens_2).fields[0]), elements))(expectedTagEnd_4)(parentTagName)(tail(tokens_2));\r\n                                                    }\r\n                                                }\r\n                                                else if (head(tokens_2).tag === 4) {\r\n                                                    return parse$0027_1(docType)(cons(new HtmlNode(2, head(tokens_2).fields[0]), elements))(expectedTagEnd_4)(parentTagName)(tail(tokens_2));\r\n                                                }\r\n                                                else if (head(tokens_2).tag === 5) {\r\n                                                    return parse$0027_1(docType)(cons(new HtmlNode(3, head(tokens_2).fields[0]), elements))(expectedTagEnd_4)(parentTagName)(tail(tokens_2));\r\n                                                }\r\n                                                else if (head(tokens_2).tag === 6) {\r\n                                                    return recursiveReturn([docType, empty(), reverse(elements)]);\r\n                                                }\r\n                                                else {\r\n                                                    throw (new Error(\"Match failure: Microsoft.FSharp.Collections.FSharpList`1\"));\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const tokens_4 = HtmlParser_tokenise(reader);\r\n    const patternInput_1 = parse$0027(Stack$1_$ctor(), \"\", empty(), \"\", \"\", tokens_4);\r\n    const elements_2 = patternInput_1[2];\r\n    if (isEmpty(elements_2)) {\r\n        throw (new Error(\"Invalid HTML\"));\r\n    }\r\n    return [patternInput_1[0], elements_2];\r\n}\r\n\r\nexport function HtmlParser_parseDocument(reader) {\r\n    const tupledArg = HtmlParser_parse(reader);\r\n    return new HtmlDocument(0, tupledArg[0], tupledArg[1]);\r\n}\r\n\r\nexport function HtmlParser_parseFragment(reader) {\r\n    return HtmlParser_parse(reader)[1];\r\n}\r\n\r\nexport function HtmlDocument_Parse_Z721C83C5(text) {\r\n    return HtmlParser_parseDocument(StringReader_$ctor_Z721C83C5(text));\r\n}\r\n\r\nexport function HtmlNode_Parse_Z721C83C5(text) {\r\n    return HtmlParser_parseFragment(StringReader_$ctor_Z721C83C5(text));\r\n}\r\n\r\nexport function HtmlNode_ParseRooted_Z384F8060(rootName, text) {\r\n    return new HtmlNode(0, rootName, empty(), HtmlParser_parseFragment(StringReader_$ctor_Z721C83C5(text)));\r\n}\r\n\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w))));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.2.11/List.js\";\r\nimport { catchAsync, startImmediate } from \"../fable-library.3.2.11/Async.js\";\r\nimport { singleton as singleton_1 } from \"../fable-library.3.2.11/AsyncBuilder.js\";\r\n\r\nexport function Cmd_exec(dispatch, cmd) {\r\n    iterate((sub) => {\r\n        sub(dispatch);\r\n    }, cmd);\r\n}\r\n\r\nexport function Cmd_none() {\r\n    return empty();\r\n}\r\n\r\nexport function Cmd_map(f, cmd) {\r\n    return map((g) => ((arg_1) => {\r\n        g((arg) => {\r\n            arg_1(f(arg));\r\n        });\r\n    }), cmd);\r\n}\r\n\r\nexport function Cmd_batch(cmds) {\r\n    return concat(cmds);\r\n}\r\n\r\nexport function Cmd_ofSub(sub) {\r\n    return singleton(sub);\r\n}\r\n\r\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            return dispatch(ofSuccess(task(arg)));\r\n        }\r\n        catch (x) {\r\n            return dispatch(ofError(x));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            dispatch(ofSuccess(task(arg)));\r\n        }\r\n        catch (x) {\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            task(arg);\r\n        }\r\n        catch (x) {\r\n            dispatch(ofError(x));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_result(msg) {\r\n    return singleton((dispatch) => {\r\n        dispatch(msg);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((arg_1) => {\r\n        startImmediate(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\r\n            return singleton_1.Zero();\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_perform(task, arg, ofSuccess) {\r\n    return singleton((arg_1) => {\r\n        startImmediate(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 0) {\r\n                arg_1(ofSuccess(r.fields[0]));\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_attempt(task, arg, ofError) {\r\n    return singleton((arg_1) => {\r\n        startImmediate(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 1) {\r\n                arg_1(ofError(r.fields[0]));\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_result(task) {\r\n    return singleton((arg) => {\r\n        startImmediate(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 0) {\r\n                arg(r.fields[0]);\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((dispatch) => {\r\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\r\n    return singleton((dispatch) => {\r\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\r\n    return singleton((dispatch) => {\r\n        void task(arg).catch((arg_2) => {\r\n            dispatch(ofError(arg_2));\r\n        });\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_result(task) {\r\n    return singleton((dispatch) => {\r\n        void task.then(dispatch);\r\n    });\r\n}\r\n\r\nexport function Cmd_attemptFunc(task, arg, ofError) {\r\n    return Cmd_OfFunc_attempt(task, arg, ofError);\r\n}\r\n\r\n","import { Record, Union } from \"../fable-library.3.2.11/Types.js\";\r\nimport { int32_type, obj_type, record_type, option_type, bool_type, list_type, class_type, string_type, union_type } from \"../fable-library.3.2.11/Reflection.js\";\r\n\r\nexport class HttpMethod extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"HEAD\", \"OPTIONS\"];\r\n    }\r\n}\r\n\r\nexport function HttpMethod$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.HttpMethod\", [], HttpMethod, () => [[], [], [], [], [], [], []]);\r\n}\r\n\r\nexport class Header extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Header\"];\r\n    }\r\n}\r\n\r\nexport function Header$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.Header\", [], Header, () => [[[\"Item1\", string_type], [\"Item2\", string_type]]]);\r\n}\r\n\r\nexport class BodyContent extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Empty\", \"Text\", \"Binary\", \"Form\"];\r\n    }\r\n}\r\n\r\nexport function BodyContent$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.BodyContent\", [], BodyContent, () => [[], [[\"Item\", string_type]], [[\"Item\", class_type(\"Browser.Types.Blob\")]], [[\"Item\", class_type(\"Browser.Types.FormData\")]]]);\r\n}\r\n\r\nexport class ResponseTypes extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Text\", \"Blob\", \"ArrayBuffer\"];\r\n    }\r\n}\r\n\r\nexport function ResponseTypes$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.ResponseTypes\", [], ResponseTypes, () => [[], [], []]);\r\n}\r\n\r\nexport class HttpRequest extends Record {\r\n    constructor(url, method, headers, withCredentials, overridenMimeType, overridenResponseType, content) {\r\n        super();\r\n        this.url = url;\r\n        this.method = method;\r\n        this.headers = headers;\r\n        this.withCredentials = withCredentials;\r\n        this.overridenMimeType = overridenMimeType;\r\n        this.overridenResponseType = overridenResponseType;\r\n        this.content = content;\r\n    }\r\n}\r\n\r\nexport function HttpRequest$reflection() {\r\n    return record_type(\"Fable.SimpleHttp.HttpRequest\", [], HttpRequest, () => [[\"url\", string_type], [\"method\", HttpMethod$reflection()], [\"headers\", list_type(Header$reflection())], [\"withCredentials\", bool_type], [\"overridenMimeType\", option_type(string_type)], [\"overridenResponseType\", option_type(ResponseTypes$reflection())], [\"content\", BodyContent$reflection()]]);\r\n}\r\n\r\nexport class ResponseContent extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Text\", \"Blob\", \"ArrayBuffer\", \"Unknown\"];\r\n    }\r\n}\r\n\r\nexport function ResponseContent$reflection() {\r\n    return union_type(\"Fable.SimpleHttp.ResponseContent\", [], ResponseContent, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Browser.Types.Blob\")]], [[\"Item\", class_type(\"Fable.Core.JS.ArrayBuffer\")]], [[\"Item\", obj_type]]]);\r\n}\r\n\r\nexport class HttpResponse extends Record {\r\n    constructor(statusCode, responseText, responseType, responseHeaders, content) {\r\n        super();\r\n        this.statusCode = (statusCode | 0);\r\n        this.responseText = responseText;\r\n        this.responseType = responseType;\r\n        this.responseHeaders = responseHeaders;\r\n        this.content = content;\r\n    }\r\n}\r\n\r\nexport function HttpResponse$reflection() {\r\n    return record_type(\"Fable.SimpleHttp.HttpResponse\", [], HttpResponse, () => [[\"statusCode\", int32_type], [\"responseText\", string_type], [\"responseType\", string_type], [\"responseHeaders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, string_type])], [\"content\", ResponseContent$reflection()]]);\r\n}\r\n\r\n","import { fromContinuations } from \"../fable-library.3.2.11/Async.js\";\r\nimport { HttpResponse, ResponseContent, HttpRequest, BodyContent, HttpMethod, Header } from \"./Types.fs.js\";\r\nimport { tail, head, isEmpty, ofArray as ofArray_1, singleton, append, empty } from \"../fable-library.3.2.11/List.js\";\r\nimport { ofArray, empty as empty_1 } from \"../fable-library.3.2.11/Map.js\";\r\nimport { join, split, isNullOrEmpty } from \"../fable-library.3.2.11/String.js\";\r\nimport { choose } from \"../fable-library.3.2.11/Array.js\";\r\nimport { getEnumerator } from \"../fable-library.3.2.11/Util.js\";\r\nimport { some } from \"../fable-library.3.2.11/Option.js\";\r\nimport { singleton as singleton_1 } from \"../fable-library.3.2.11/AsyncBuilder.js\";\r\n\r\nexport function FileReader_readBlobAsText(blob) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg1) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n\r\nexport function FileReader_readFileAsText(file) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg1) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsText(file);\r\n    });\r\n}\r\n\r\nexport function FormData_append(key, value, form) {\r\n    form.append(key, value);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendFile(key, file, form) {\r\n    form.append(key, file);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendNamedFile(key, fileName, file, form) {\r\n    form.append(key, file, fileName);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendBlob(key, blob, form) {\r\n    form.append(key, blob);\r\n    return form;\r\n}\r\n\r\nexport function FormData_appendNamedBlob(key, fileName, blob, form) {\r\n    form.append(key, blob, fileName);\r\n    return form;\r\n}\r\n\r\nexport function Headers_contentType(value) {\r\n    return new Header(0, \"Content-Type\", value);\r\n}\r\n\r\nexport function Headers_accept(value) {\r\n    return new Header(0, \"Accept\", value);\r\n}\r\n\r\nexport function Headers_acceptCharset(value) {\r\n    return new Header(0, \"Accept-Charset\", value);\r\n}\r\n\r\nexport function Headers_acceptEncoding(value) {\r\n    return new Header(0, \"Accept-Encoding\", value);\r\n}\r\n\r\nexport function Headers_acceptLanguage(value) {\r\n    return new Header(0, \"Accept-Language\", value);\r\n}\r\n\r\nexport function Headers_acceptDateTime(value) {\r\n    return new Header(0, \"Accept-Datetime\", value);\r\n}\r\n\r\nexport function Headers_authorization(value) {\r\n    return new Header(0, \"Authorization\", value);\r\n}\r\n\r\nexport function Headers_cacheControl(value) {\r\n    return new Header(0, \"Cache-Control\", value);\r\n}\r\n\r\nexport function Headers_connection(value) {\r\n    return new Header(0, \"Connection\", value);\r\n}\r\n\r\nexport function Headers_cookie(value) {\r\n    return new Header(0, \"Cookie\", value);\r\n}\r\n\r\nexport function Headers_contentMD5(value) {\r\n    return new Header(0, \"Content-MD5\", value);\r\n}\r\n\r\nexport function Headers_date(value) {\r\n    return new Header(0, \"Date\", value);\r\n}\r\n\r\nexport function Headers_expect(value) {\r\n    return new Header(0, \"Expect\", value);\r\n}\r\n\r\nexport function Headers_ifMatch(value) {\r\n    return new Header(0, \"If-Match\", value);\r\n}\r\n\r\nexport function Headers_ifModifiedSince(value) {\r\n    return new Header(0, \"If-Modified-Since\", value);\r\n}\r\n\r\nexport function Headers_ifNoneMatch(value) {\r\n    return new Header(0, \"If-None-Match\", value);\r\n}\r\n\r\nexport function Headers_ifRange(value) {\r\n    return new Header(0, \"If-Range\", value);\r\n}\r\n\r\nexport function Headers_IfUnmodifiedSince(value) {\r\n    return new Header(0, \"If-Unmodified-Since\", value);\r\n}\r\n\r\nexport function Headers_maxForwards(value) {\r\n    return new Header(0, \"Max-Forwards\", value);\r\n}\r\n\r\nexport function Headers_origin(value) {\r\n    return new Header(0, \"Origin\", value);\r\n}\r\n\r\nexport function Headers_pragma(value) {\r\n    return new Header(0, \"Pragma\", value);\r\n}\r\n\r\nexport function Headers_proxyAuthorization(value) {\r\n    return new Header(0, \"Proxy-Authorization\", value);\r\n}\r\n\r\nexport function Headers_range(value) {\r\n    return new Header(0, \"Range\", value);\r\n}\r\n\r\nexport function Headers_referer(value) {\r\n    return new Header(0, \"Referer\", value);\r\n}\r\n\r\nexport function Headers_userAgent(value) {\r\n    return new Header(0, \"User-Agent\", value);\r\n}\r\n\r\nexport function Headers_create(key, value) {\r\n    return new Header(0, key, value);\r\n}\r\n\r\nconst Http_defaultRequest = new HttpRequest(\"\", new HttpMethod(0), empty(), false, void 0, void 0, new BodyContent(0));\r\n\r\nconst Http_emptyResponse = new HttpResponse(0, \"\", \"\", empty_1(), new ResponseContent(0, \"\"));\r\n\r\nfunction Http_splitAt(delimiter, input) {\r\n    if (isNullOrEmpty(input)) {\r\n        return [input];\r\n    }\r\n    else {\r\n        return split(input, [delimiter], null, 0);\r\n    }\r\n}\r\n\r\nfunction Http_serializeMethod(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 1: {\r\n            return \"POST\";\r\n        }\r\n        case 3: {\r\n            return \"PATCH\";\r\n        }\r\n        case 2: {\r\n            return \"PUT\";\r\n        }\r\n        case 4: {\r\n            return \"DELETE\";\r\n        }\r\n        case 6: {\r\n            return \"OPTIONS\";\r\n        }\r\n        case 5: {\r\n            return \"HEAD\";\r\n        }\r\n        default: {\r\n            return \"GET\";\r\n        }\r\n    }\r\n}\r\n\r\nexport function Http_request(url) {\r\n    return new HttpRequest(url, Http_defaultRequest.method, Http_defaultRequest.headers, Http_defaultRequest.withCredentials, Http_defaultRequest.overridenMimeType, Http_defaultRequest.overridenResponseType, Http_defaultRequest.content);\r\n}\r\n\r\nexport function Http_method(httpVerb, req) {\r\n    return new HttpRequest(req.url, httpVerb, req.headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_header(singleHeader, req) {\r\n    return new HttpRequest(req.url, req.method, append(req.headers, singleton(singleHeader)), req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_headers(values, req) {\r\n    return new HttpRequest(req.url, req.method, append(req.headers, values), req.withCredentials, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_withCredentials(enabled, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, enabled, req.overridenMimeType, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_overrideMimeType(value, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, value, req.overridenResponseType, req.content);\r\n}\r\n\r\nexport function Http_overrideResponseType(value, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, req.overridenMimeType, value, req.content);\r\n}\r\n\r\nexport function Http_content(bodyContent, req) {\r\n    return new HttpRequest(req.url, req.method, req.headers, req.withCredentials, req.overridenMimeType, req.overridenResponseType, bodyContent);\r\n}\r\n\r\nexport function Http_send(req) {\r\n    return fromContinuations((tupledArg) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(Http_serializeMethod(req.method), req.url);\r\n        xhr.onreadystatechange = (() => {\r\n            let responseText, matchValue_1, statusCode, responseType, content, matchValue_2;\r\n            if (xhr.readyState === 4) {\r\n                tupledArg[0]((responseText = ((matchValue_1 = xhr.responseType, (matchValue_1 === \"\") ? xhr.responseText : ((matchValue_1 === \"text\") ? xhr.responseText : \"\"))), (statusCode = (xhr.status | 0), (responseType = xhr.responseType, (content = ((matchValue_2 = xhr.responseType, (matchValue_2 === \"\") ? (new ResponseContent(0, xhr.responseText)) : ((matchValue_2 === \"text\") ? (new ResponseContent(0, xhr.responseText)) : ((matchValue_2 === \"arraybuffer\") ? (new ResponseContent(2, xhr.response)) : ((matchValue_2 === \"blob\") ? (new ResponseContent(1, xhr.response)) : (new ResponseContent(3, xhr.response))))))), new HttpResponse(statusCode, responseText, responseType, ofArray(choose((headerLine) => {\r\n                    const matchValue_3 = ofArray_1(Http_splitAt(\":\", headerLine));\r\n                    if (!isEmpty(matchValue_3)) {\r\n                        return [head(matchValue_3).toLocaleLowerCase(), join(\":\", tail(matchValue_3)).trim()];\r\n                    }\r\n                    else {\r\n                        return void 0;\r\n                    }\r\n                }, Http_splitAt(\"\\r\\n\", xhr.getAllResponseHeaders()))), content))))));\r\n            }\r\n        });\r\n        const enumerator = getEnumerator(req.headers);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                xhr.setRequestHeader(forLoopVar.fields[0], forLoopVar.fields[1]);\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        xhr.withCredentials = req.withCredentials;\r\n        const matchValue_4 = req.overridenMimeType;\r\n        if (matchValue_4 == null) {\r\n        }\r\n        else {\r\n            xhr.overrideMimeType(matchValue_4);\r\n        }\r\n        const matchValue_5 = req.overridenResponseType;\r\n        if (matchValue_5 == null) {\r\n        }\r\n        else if (matchValue_5.tag === 1) {\r\n            xhr.responseType = \"blob\";\r\n        }\r\n        else if (matchValue_5.tag === 2) {\r\n            xhr.responseType = \"arraybuffer\";\r\n        }\r\n        else {\r\n            xhr.responseType = \"text\";\r\n        }\r\n        const matchValue_6 = [req.method, req.content];\r\n        if (matchValue_6[0].tag === 0) {\r\n            xhr.send(some(void 0));\r\n        }\r\n        else if (matchValue_6[1].tag === 1) {\r\n            xhr.send(some(matchValue_6[1].fields[0]));\r\n        }\r\n        else if (matchValue_6[1].tag === 3) {\r\n            xhr.send(some(matchValue_6[1].fields[0]));\r\n        }\r\n        else if (matchValue_6[1].tag === 2) {\r\n            xhr.send(some(matchValue_6[1].fields[0]));\r\n        }\r\n        else {\r\n            xhr.send(some(void 0));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Http_get(url) {\r\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_method(new HttpMethod(0), Http_request(url))), (_arg1) => {\r\n        const response = _arg1;\r\n        return singleton_1.Return([response.statusCode, response.responseText]);\r\n    }));\r\n}\r\n\r\nexport function Http_put(url, data) {\r\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_content(new BodyContent(1, data), Http_method(new HttpMethod(2), Http_request(url)))), (_arg1) => {\r\n        const response = _arg1;\r\n        return singleton_1.Return([response.statusCode, response.responseText]);\r\n    }));\r\n}\r\n\r\nexport function Http_delete(url) {\r\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_method(new HttpMethod(4), Http_request(url))), (_arg1) => {\r\n        const response = _arg1;\r\n        return singleton_1.Return([response.statusCode, response.responseText]);\r\n    }));\r\n}\r\n\r\nexport function Http_patch(url, data) {\r\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_content(new BodyContent(1, data), Http_method(new HttpMethod(3), Http_request(url)))), (_arg1) => {\r\n        const response = _arg1;\r\n        return singleton_1.Return([response.statusCode, response.responseText]);\r\n    }));\r\n}\r\n\r\nexport function Http_post(url, data) {\r\n    return singleton_1.Delay(() => singleton_1.Bind(Http_send(Http_content(new BodyContent(1, data), Http_method(new HttpMethod(1), Http_request(url)))), (_arg1) => {\r\n        const response = _arg1;\r\n        return singleton_1.Return([response.statusCode, response.responseText]);\r\n    }));\r\n}\r\n\r\n","import { Record } from \"../fable-library.3.2.11/Types.js\";\r\nimport { string_type, record_type, int32_type } from \"../fable-library.3.2.11/Reflection.js\";\r\nimport { some } from \"../fable-library.3.2.11/Option.js\";\r\nimport { seq, noneOf, optWhitespace, whitespace, oneOf, string, takeWhile, test, fail, all, any, digit, lookahead, succeed, eof, letters, letter, lazy, index } from \"./Parsimmon.js\";\r\nimport { join } from \"../fable-library.3.2.11/String.js\";\r\nimport { reduce } from \"../fable-library.3.2.11/List.js\";\r\n\r\nexport class TokenPosition extends Record {\r\n    constructor(offset, line, column) {\r\n        super();\r\n        this.offset = (offset | 0);\r\n        this.line = (line | 0);\r\n        this.column = (column | 0);\r\n    }\r\n}\r\n\r\nexport function TokenPosition$reflection() {\r\n    return record_type(\"Fable.Parsimmon.TokenPosition\", [], TokenPosition, () => [[\"offset\", int32_type], [\"line\", int32_type], [\"column\", int32_type]]);\r\n}\r\n\r\nexport class NodeResult$1 extends Record {\r\n    constructor(name, value, start, end) {\r\n        super();\r\n        this.name = name;\r\n        this.value = value;\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nexport function NodeResult$1$reflection(gen0) {\r\n    return record_type(\"Fable.Parsimmon.NodeResult`1\", [gen0], NodeResult$1, () => [[\"name\", string_type], [\"value\", gen0], [\"start\", TokenPosition$reflection()], [\"end\", TokenPosition$reflection()]]);\r\n}\r\n\r\nexport function Parsimmon_parseRaw(input, parser) {\r\n    return parser.parse(input);\r\n}\r\n\r\nexport function Parsimmon_parse(input, parser) {\r\n    const result = parser.parse(input);\r\n    if (result.status) {\r\n        return some(result.value);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const Parsimmon_index = index;\r\n\r\nexport function Parsimmon_orTry(otherParser, parser) {\r\n    return parser.or(otherParser);\r\n}\r\n\r\nexport function Parsimmon_times(n, parser) {\r\n    return parser.times(n);\r\n}\r\n\r\nexport function Parsimmon_atLeast(n, parser) {\r\n    return parser.atLeast(n);\r\n}\r\n\r\nexport function Parsimmon_atMost(n, parser) {\r\n    return parser.atMost(n);\r\n}\r\n\r\nexport function Parsimmon_skip(skipped, keep) {\r\n    return keep.skip(skipped);\r\n}\r\n\r\nexport function Parsimmon_many(parser) {\r\n    return parser.many();\r\n}\r\n\r\nexport const Parsimmon_ofLazy = lazy;\r\n\r\nexport function Parsimmon_seperateByAtLeastOne(seperator, parser) {\r\n    return parser.sepBy1(seperator);\r\n}\r\n\r\nexport function Parsimmon_chain(after, before) {\r\n    return before.then(after);\r\n}\r\n\r\nexport function Parsimmon_bind(f, p) {\r\n    return p.chain(f);\r\n}\r\n\r\nexport const Parsimmon_letter = letter;\r\n\r\nexport function Parsimmon_timesBetween(min, max, parser) {\r\n    return parser.times(min, max);\r\n}\r\n\r\nexport const Parsimmon_letters = letters;\r\n\r\nexport const Parsimmon_endOfFile = eof;\r\n\r\nexport function Parsimmon_notFollowedBy(p, before) {\r\n    return before.notFollowedBy(p);\r\n}\r\n\r\nexport const Parsimmon_succeed = succeed;\r\n\r\nexport const Parsimmon_lookahead = lookahead;\r\n\r\nexport const Parsimmon_digit = digit;\r\n\r\nexport const Parsimmon_digits = Parsimmon_many(Parsimmon_digit);\r\n\r\nexport function Parsimmon_fallback(value, parser) {\r\n    return parser.fallback(value);\r\n}\r\n\r\nexport function Parsimmon_seperateBy(content, others) {\r\n    return others.sepBy(content);\r\n}\r\n\r\nexport function Parsimmon_between(left, right, middle) {\r\n    return Parsimmon_skip(right, Parsimmon_chain(middle, left));\r\n}\r\n\r\nexport function Parsimmon_map(f, parser) {\r\n    return parser.map(f);\r\n}\r\n\r\nexport function Parsimmon_tie(parser) {\r\n    return Parsimmon_map((strings) => join(\"\", strings), parser);\r\n}\r\n\r\nexport const Parsimmon_any = any;\r\n\r\nexport function Parsimmon_choose(ps) {\r\n    return reduce((acc, parser) => (acc.or(parser)), ps);\r\n}\r\n\r\nexport const Parsimmon_all = all;\r\n\r\nexport const Parsimmon_fail = fail;\r\n\r\nexport const Parsimmon_satisfy = test;\r\n\r\nexport const Parsimmon_takeWhile = takeWhile;\r\n\r\nexport const Parsimmon_str = string;\r\n\r\nexport const Parsimmon_oneOf = oneOf;\r\n\r\nexport const Parsimmon_whitespace = whitespace;\r\n\r\nexport const Parsimmon_optionalWhitespace = optWhitespace;\r\n\r\nexport function Parsimmon_atLeastOneOrMany(parser) {\r\n    return Parsimmon_atLeast(1, parser);\r\n}\r\n\r\nexport function Parsimmon_stringReturn(input, value) {\r\n    return Parsimmon_map((_arg1) => value, Parsimmon_str(input));\r\n}\r\n\r\nexport const Parsimmon_noneOf = noneOf;\r\n\r\nexport const Parsimmon_seq2 = seq;\r\n\r\nexport function Parsimmon_trim(trimmed, p) {\r\n    return p.trim(trimmed);\r\n}\r\n\r\nexport function Parsimmon_concat(parser) {\r\n    return parser.map((strings) => join(\"\", strings));\r\n}\r\n\r\nexport const Parsimmon_seq3 = seq;\r\n\r\nexport const Parsimmon_seq4 = seq;\r\n\r\nexport const Parsimmon_seq5 = seq;\r\n\r\nexport function Parsimmon_node(description, p) {\r\n    return p.node(description);\r\n}\r\n\r\n","import { printf, toText, join } from \"../fable-library.3.2.11/String.js\";\r\nimport { Parsimmon_ofLazy, Parsimmon_atLeastOneOrMany, Parsimmon_whitespace, Parsimmon_seq3, Parsimmon_seq2, Parsimmon_satisfy, Parsimmon_digit, Parsimmon_letter, Parsimmon_choose, Parsimmon_skip, Parsimmon_takeWhile, Parsimmon_seperateBy, Parsimmon_bind, Parsimmon_str, Parsimmon_map, Parsimmon_chain, Parsimmon_oneOf, Parsimmon_many, Parsimmon_concat, Parsimmon_optionalWhitespace, Parsimmon_between } from \"../Fable.Parsimmon.4.1.0/Parsimmon.fs.js\";\r\nimport { empty as empty_1, contains, append, ofArray, map } from \"../fable-library.3.2.11/List.js\";\r\nimport { toList } from \"../fable-library.3.2.11/Seq.js\";\r\nimport { rangeChar, rangeDouble } from \"../fable-library.3.2.11/Range.js\";\r\nimport { Lazy, stringHash } from \"../fable-library.3.2.11/Util.js\";\r\nimport { empty, ofList } from \"../fable-library.3.2.11/Map.js\";\r\nimport { regexp } from \"../Fable.Parsimmon.4.1.0/./Parsimmon.js\";\r\nimport { XmlDocument, XmlElement } from \"./AST.fs.js\";\r\n\r\nexport function Tuple_concat(a, b) {\r\n    return join(\"\", [a, b]);\r\n}\r\n\r\nexport function Parser_withWhitespace(p) {\r\n    return Parsimmon_between(Parsimmon_optionalWhitespace, Parsimmon_optionalWhitespace, p);\r\n}\r\n\r\nexport const Parser_asciiString = Parsimmon_concat(Parsimmon_many(Parsimmon_oneOf(join(\"\", map((arg) => String.fromCharCode(arg), toList(rangeDouble(32, 1, 126)))))));\r\n\r\nexport const Parser_escapedString = (() => {\r\n    const escapedCharSnippet = Parsimmon_chain(Parsimmon_map((_arg1) => {\r\n        switch (_arg1) {\r\n            case \"b\": {\r\n                return \"\\b\";\r\n            }\r\n            case \"f\": {\r\n                return \"\\f\";\r\n            }\r\n            case \"n\": {\r\n                return \"\\n\";\r\n            }\r\n            case \"r\": {\r\n                return \"\\r\";\r\n            }\r\n            case \"t\": {\r\n                return \"\\t\";\r\n            }\r\n            default: {\r\n                return _arg1;\r\n            }\r\n        }\r\n    }, Parsimmon_oneOf(\"\\u0027\\\\/bfnrt\")), Parsimmon_str(\"\\\\\"));\r\n    const keep = Parsimmon_bind((_arg1_1) => Parsimmon_concat(Parsimmon_seperateBy(escapedCharSnippet, Parsimmon_takeWhile((c_1) => (c_1 !== \"\\\"\")))), Parsimmon_str(\"\\\"\"));\r\n    return Parsimmon_skip(Parsimmon_str(\"\\\"\"), keep);\r\n})();\r\n\r\nexport const Parser_escapedStringTick = (() => {\r\n    const escapedCharSnippet = Parsimmon_chain(Parsimmon_map((_arg1) => {\r\n        switch (_arg1) {\r\n            case \"b\": {\r\n                return \"\\b\";\r\n            }\r\n            case \"f\": {\r\n                return \"\\f\";\r\n            }\r\n            case \"n\": {\r\n                return \"\\n\";\r\n            }\r\n            case \"r\": {\r\n                return \"\\r\";\r\n            }\r\n            case \"t\": {\r\n                return \"\\t\";\r\n            }\r\n            default: {\r\n                return _arg1;\r\n            }\r\n        }\r\n    }, Parsimmon_oneOf(\"\\\"\\\\/bfnrt\")), Parsimmon_str(\"\\\\\"));\r\n    const keep = Parsimmon_bind((_arg1_1) => Parsimmon_concat(Parsimmon_seperateBy(escapedCharSnippet, Parsimmon_takeWhile((c_1) => (c_1 !== \"\\u0027\")))), Parsimmon_str(\"\\u0027\"));\r\n    return Parsimmon_skip(Parsimmon_str(\"\\u0027\"), keep);\r\n})();\r\n\r\nexport const Parser_attributKey = Parsimmon_concat(Parsimmon_many(Parsimmon_choose(ofArray([Parsimmon_letter, Parsimmon_str(\"-\"), Parsimmon_str(\":\"), Parsimmon_str(\"_\"), Parsimmon_digit]))));\r\n\r\nexport const Parser_integer = Parsimmon_concat(Parsimmon_many(Parsimmon_digit));\r\n\r\nexport const Parser_letters = (() => {\r\n    let list2;\r\n    const acceptableChars = map((value_1) => value_1, toList((\"_-\" + join(\"\", map((value) => value, (list2 = toList(rangeChar(\"a\", \"z\")), append(toList(rangeChar(\"A\", \"Z\")), list2))))).split(\"\")));\r\n    return Parsimmon_concat(Parsimmon_many(Parsimmon_satisfy((token) => contains(token, acceptableChars, {\r\n        Equals: (x_1, y_1) => (x_1 === y_1),\r\n        GetHashCode: (x_1) => stringHash(x_1),\r\n    }))));\r\n})();\r\n\r\nexport const Parser_identifier = Parsimmon_map((tupledArg) => Tuple_concat(tupledArg[0], tupledArg[1]), Parsimmon_seq2(Parser_letters, Parser_integer));\r\n\r\nexport const Parser_attributeValue = Parsimmon_choose(ofArray([Parser_escapedStringTick, Parser_escapedString, Parsimmon_str(\"true\"), Parsimmon_str(\"false\"), Parser_integer]));\r\n\r\nexport const Parser_attribute = Parsimmon_map((tupledArg) => [tupledArg[0], tupledArg[2]], Parsimmon_seq3(Parser_attributKey, Parser_withWhitespace(Parsimmon_str(\"=\")), Parser_attributeValue));\r\n\r\nexport const Parser_manyAttributes = Parsimmon_map((array) => ofArray(array), Parser_withWhitespace(Parsimmon_seperateBy(Parsimmon_whitespace, Parser_attribute)));\r\n\r\nexport const Parser_simpleTag = Parsimmon_choose(ofArray([Parser_identifier, Parser_letters]));\r\n\r\nexport const Parser_tagWithoutNamespace = Parsimmon_map((tag) => [void 0, tag], Parser_simpleTag);\r\n\r\nexport const Parser_tagWithNamespace = Parsimmon_map((tupledArg) => [tupledArg[0], tupledArg[2]], Parsimmon_seq3(Parser_simpleTag, Parsimmon_str(\":\"), Parser_simpleTag));\r\n\r\nexport const Parser_tagName = Parsimmon_choose(ofArray([Parser_tagWithNamespace, Parser_tagWithoutNamespace]));\r\n\r\nexport const Parser_openingTagName = Parsimmon_chain(Parser_tagName, Parsimmon_str(\"\\u003c\"));\r\n\r\nexport const Parser_declaration = Parser_withWhitespace(Parsimmon_map((tupledArg) => ofList(tupledArg[1]), Parsimmon_seq3(Parsimmon_str(\"\\u003c?xml\"), Parser_withWhitespace(Parser_manyAttributes), Parsimmon_str(\"?\\u003e\"))));\r\n\r\nexport const Parser_selfClosingTag = Parsimmon_map((tupledArg) => [tupledArg[0], tupledArg[1]], Parsimmon_seq3(Parser_openingTagName, Parser_withWhitespace(Parser_manyAttributes), Parsimmon_chain(Parsimmon_str(\"/\\u003e\"), Parsimmon_optionalWhitespace)));\r\n\r\nexport const Parser_textSnippet = Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_satisfy((token) => ((token !== \"\\u003c\") ? (token !== \"\\u003e\") : false))));\r\n\r\nexport const Parser_comment = Parsimmon_choose(ofArray([Parsimmon_map((tupledArg) => tupledArg[1], Parsimmon_seq3(Parsimmon_str(\"\\u003c!--\"), Parsimmon_optionalWhitespace, Parsimmon_str(\"--\\u003e\"))), regexp(new RegExp(\"\\u003c!--([\\\\s\\\\S\\\\n]*?)--\\u003e\"), 1)]));\r\n\r\nexport const Parser_cdataNode = Parsimmon_choose(ofArray([Parsimmon_map((_arg1) => \"\", Parsimmon_str(\"\\u003c![CDATA[]]\\u003e\")), Parsimmon_map((tupledArg) => tupledArg[1], Parsimmon_seq3(Parsimmon_str(\"\\u003c![CDATA[\"), Parsimmon_optionalWhitespace, Parsimmon_str(\"]]\\u003e\"))), regexp(new RegExp(\"\\u003c![CDATA[(.*?)]]\\u003e\"), 1), regexp(new RegExp(\"\\u003c!\\\\[CDATA\\\\[([\\\\s\\\\S\\\\n]*?)\\\\]\\\\]\\u003e\"), 1)]));\r\n\r\nexport const Parser_nodeOpening = Parsimmon_bind((tupledArg) => Parsimmon_map((_arg1) => [tupledArg[0], tupledArg[1]], Parsimmon_str(\"\\u003e\")), Parsimmon_seq2(Parser_openingTagName, Parser_withWhitespace(Parser_manyAttributes)));\r\n\r\nexport function Parser_nodeClosing(ns, tagName) {\r\n    let before_1;\r\n    let matchingTag;\r\n    if (ns == null) {\r\n        matchingTag = tagName;\r\n    }\r\n    else {\r\n        const ns$0027 = ns;\r\n        matchingTag = toText(printf(\"%s:%s\"))(ns$0027)(tagName);\r\n    }\r\n    return Parsimmon_map((_arg1) => [ns, tagName], (before_1 = Parsimmon_chain(Parsimmon_optionalWhitespace, Parsimmon_seq2(Parsimmon_str(\"\\u003c/\"), Parsimmon_str(matchingTag))), Parsimmon_chain(Parsimmon_str(\"\\u003e\"), before_1)));\r\n}\r\n\r\nexport const Parser_emptyNode = Parsimmon_bind((tupledArg) => {\r\n    const _arg2 = tupledArg[0];\r\n    const tagName = _arg2[1];\r\n    const ns = _arg2[0];\r\n    return Parsimmon_map((_arg1) => [[ns, tagName], tupledArg[1]], Parsimmon_chain(Parser_nodeClosing(ns, tagName), Parsimmon_optionalWhitespace));\r\n}, Parser_nodeOpening);\r\n\r\nexport const Parser_emptyNodeWithTextContent = Parsimmon_bind((tupledArg) => {\r\n    const _arg1 = tupledArg[0];\r\n    const tagName = _arg1[1];\r\n    const ns = _arg1[0];\r\n    return Parsimmon_map((text) => [text, ns, tagName, tupledArg[1]], Parsimmon_skip(Parser_nodeClosing(ns, tagName), Parser_textSnippet));\r\n}, Parser_nodeOpening);\r\n\r\nexport const Parser_textNode = Parsimmon_map((content) => (new XmlElement(void 0, \"\", empty(), content, empty_1(), false, true, false)), Parser_textSnippet);\r\n\r\nexport const Parser_cdata = Parsimmon_map((content) => (new XmlElement(void 0, \"\", empty(), content, empty_1(), false, true, false)), Parser_cdataNode);\r\n\r\nfunction simpleXmlElement$0040278() {\r\n    return Parsimmon_ofLazy(() => {\r\n        const selfClosingElement = Parsimmon_map((tupledArg) => {\r\n            const _arg1 = tupledArg[0];\r\n            return new XmlElement(_arg1[0], _arg1[1], ofList(tupledArg[1]), \"\", empty_1(), true, false, false);\r\n        }, Parser_selfClosingTag);\r\n        const emptyElement = Parsimmon_map((tupledArg_1) => {\r\n            const _arg2 = tupledArg_1[0];\r\n            return new XmlElement(_arg2[0], _arg2[1], ofList(tupledArg_1[1]), \"\", empty_1(), false, false, false);\r\n        }, Parser_emptyNode);\r\n        return Parsimmon_choose(ofArray([Parsimmon_map((text) => (new XmlElement(void 0, \"\", empty(), text, empty_1(), false, false, true)), Parser_comment), Parsimmon_map((tupledArg_2) => (new XmlElement(tupledArg_2[1], tupledArg_2[2], ofList(tupledArg_2[3]), tupledArg_2[0], empty_1(), false, false, false)), Parser_emptyNodeWithTextContent), emptyElement, selfClosingElement, Parser_cdata, Parsimmon_bind((tupledArg_3) => {\r\n            let keep;\r\n            const _arg3 = tupledArg_3[0];\r\n            const tag_1 = _arg3[1];\r\n            const ns_3 = _arg3[0];\r\n            return Parsimmon_map((children) => (new XmlElement(ns_3, tag_1, ofList(tupledArg_3[1]), \"\", ofArray(children), false, false, false)), (keep = Parsimmon_atLeastOneOrMany(Parsimmon_choose(ofArray([simpleXmlElement$0040278$002D1.Value, Parser_textNode, Parser_cdata]))), Parsimmon_skip(Parser_nodeClosing(ns_3, tag_1), keep)));\r\n        }, Parser_nodeOpening)]));\r\n    });\r\n}\r\n\r\nconst simpleXmlElement$0040278$002D1 = new Lazy(simpleXmlElement$0040278);\r\n\r\nexport const Parser_simpleXmlElement = simpleXmlElement$0040278$002D1.Value;\r\n\r\nfunction xmlElement$0040363() {\r\n    return Parsimmon_ofLazy(() => Parsimmon_choose(map((p_1) => Parser_withWhitespace(p_1), ofArray([Parser_simpleXmlElement, Parsimmon_bind((tupledArg) => {\r\n        let keep;\r\n        const _arg1 = tupledArg[0];\r\n        const tagName = _arg1[1];\r\n        const ns = _arg1[0];\r\n        return Parsimmon_map((children) => (new XmlElement(ns, tagName, ofList(tupledArg[1]), \"\", children, false, false, false)), (keep = Parsimmon_map((array) => ofArray(array), Parsimmon_many(xmlElement$0040363$002D1.Value)), Parsimmon_skip(Parser_nodeClosing(ns, tagName), keep)));\r\n    }, Parser_nodeOpening)]))));\r\n}\r\n\r\nconst xmlElement$0040363$002D1 = new Lazy(xmlElement$0040363);\r\n\r\nexport const Parser_xmlElement = xmlElement$0040363$002D1.Value;\r\n\r\nexport const Parser_xmlDocument = Parsimmon_choose(ofArray([Parsimmon_bind((declAttrs) => Parsimmon_map((root) => (new XmlDocument(declAttrs, root)), Parser_withWhitespace(Parser_xmlElement)), Parser_withWhitespace(Parser_declaration)), Parsimmon_map((root_1) => (new XmlDocument(void 0, root_1)), Parser_xmlElement)]));\r\n\r\n","import { Parsimmon_parse } from \"../Fable.Parsimmon.4.1.0/Parsimmon.fs.js\";\r\nimport { Parser_xmlDocument, Parser_xmlElement } from \"./Parser.fs.js\";\r\nimport { toText, printf, toFail } from \"../fable-library.3.2.11/String.js\";\r\nimport { collect, empty, singleton, append, delay, toList } from \"../fable-library.3.2.11/Seq.js\";\r\nimport { tryFind, containsKey, forAll } from \"../fable-library.3.2.11/Map.js\";\r\nimport { filter, map, tryHead } from \"../fable-library.3.2.11/List.js\";\r\nimport { XmlDocument, XmlElement } from \"./AST.fs.js\";\r\nimport { map as map_1 } from \"../fable-library.3.2.11/Option.js\";\r\n\r\nexport function children(node) {\r\n    return node.Children;\r\n}\r\n\r\nexport function isTextNode(node) {\r\n    return node.IsTextNode;\r\n}\r\n\r\nexport function attributes(node) {\r\n    return node.Attributes;\r\n}\r\n\r\nexport function content(node) {\r\n    return node.Content;\r\n}\r\n\r\nexport function tryParseElement(input) {\r\n    return Parsimmon_parse(input, Parser_xmlElement);\r\n}\r\n\r\nexport function parseElement(input) {\r\n    const matchValue = tryParseElement(input);\r\n    if (matchValue == null) {\r\n        return toFail(printf(\"Could not parse XML input as an element: %s\"))(input);\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\n\r\nexport function tryParseDocument(input) {\r\n    return Parsimmon_parse(input, Parser_xmlDocument);\r\n}\r\n\r\nexport function parseDocument(input) {\r\n    const matchValue = tryParseDocument(input);\r\n    if (matchValue == null) {\r\n        return toFail(printf(\"Could not parse XML input as a document: %s\"))(input);\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\n\r\nexport function findElementsBy(pred, node) {\r\n    const findElements = (root) => toList(delay(() => append(pred(root) ? singleton(root) : empty(), delay(() => collect((child) => findElements(child), root.Children)))));\r\n    return findElements(node);\r\n}\r\n\r\nexport function findElementsByName(tagName, node) {\r\n    return findElementsBy((el) => (el.Name === tagName), node);\r\n}\r\n\r\nexport function findElementsByExactAttributes(attrs, node) {\r\n    return findElementsBy((el) => el.Attributes.Equals(attrs), node);\r\n}\r\n\r\nfunction mapIsSubsetOf(x, y) {\r\n    return forAll((key, _arg1) => containsKey(key, y), x);\r\n}\r\n\r\nexport function findElementsByAttributes(attrs, node) {\r\n    return findElementsBy((el) => mapIsSubsetOf(attrs, el.Attributes), node);\r\n}\r\n\r\nexport function tryFindElementByAttributes(attrs, node) {\r\n    return tryHead(findElementsByAttributes(attrs, node));\r\n}\r\n\r\nexport function findElementByAttributes(attrs, node) {\r\n    const _arg1 = tryFindElementByAttributes(attrs, node);\r\n    if (_arg1 == null) {\r\n        throw (new Error(\"Could not find an element with the given attributes\"));\r\n    }\r\n    else {\r\n        return _arg1;\r\n    }\r\n}\r\n\r\nexport function excludeWhere(pred, node) {\r\n    return new XmlElement(node.Namespace, node.Name, node.Attributes, node.Content, map((node_1) => excludeWhere(pred, node_1), filter((arg) => (!pred(arg)), node.Children)), node.SelfClosing, node.IsTextNode, node.IsComment);\r\n}\r\n\r\nexport const parseElementNonStrict = (arg) => excludeWhere((node_1) => isTextNode(node_1), parseElement(arg));\r\n\r\nexport const tryParseElementNonStrict = (arg) => map_1((node) => excludeWhere((node_1) => isTextNode(node_1), node), tryParseElement(arg));\r\n\r\nexport function parseDocumentNonStrict(input) {\r\n    const document$ = parseDocument(input);\r\n    return new XmlDocument(document$.Declaration, excludeWhere((node) => isTextNode(node), document$.Root));\r\n}\r\n\r\nexport function tryParseDocumentNonStrict(input) {\r\n    const matchValue = tryParseDocument(input);\r\n    if (matchValue == null) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        const document$ = matchValue;\r\n        return new XmlDocument(document$.Declaration, excludeWhere((node) => isTextNode(node), document$.Root));\r\n    }\r\n}\r\n\r\nexport function findElementsByAttribute(key, value, node) {\r\n    return findElementsBy((el) => {\r\n        const matchValue = tryFind(key, el.Attributes);\r\n        let pattern_matching_result;\r\n        if (matchValue != null) {\r\n            if (value === matchValue) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return false;\r\n            }\r\n        }\r\n    }, node);\r\n}\r\n\r\nexport function tryParseManyElements(input) {\r\n    return map_1((node) => children(node), tryParseElement(toText(printf(\"\\u003cdummyRoot\\u003e%s\\u003c/dummyRoot\\u003e\"))(input)));\r\n}\r\n\r\nexport function parseManyElements(input) {\r\n    const _arg1 = tryParseElement(toText(printf(\"\\u003cdummyRoot\\u003e%s\\u003c/dummyRoot\\u003e\"))(input));\r\n    if (_arg1 == null) {\r\n        return toFail(printf(\"Could not parse input \\u0027%s\\u0027 as a list of XML elements\"))(input);\r\n    }\r\n    else {\r\n        return _arg1.Children;\r\n    }\r\n}\r\n\r\nexport function tryFindElementByName(tagName, root) {\r\n    return tryHead(findElementsByName(tagName, root));\r\n}\r\n\r\nexport function findElementByName(tagName, root) {\r\n    const matchValue = tryFindElementByName(tagName, root);\r\n    if (matchValue == null) {\r\n        return toFail(printf(\"Could not find element with name \\u0027%s\\u0027 inside \\u0027%s\\u0027\"))(tagName)(root.Name);\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\n\r\n","import { map, equalsWith, mapIndexed } from \"./.fable/fable-library.3.2.11/Array.js\";\r\nimport { printf, toText, isNullOrWhiteSpace, replace, split, join } from \"./.fable/fable-library.3.2.11/String.js\";\r\nimport { Union } from \"./.fable/fable-library.3.2.11/Types.js\";\r\nimport { union_type } from \"./.fable/fable-library.3.2.11/Reflection.js\";\r\nimport { forAll, empty, mapIndexed as mapIndexed_1, length, singleton, head, tail, isEmpty } from \"./.fable/fable-library.3.2.11/List.js\";\r\nimport { FSharpChoice$7 } from \"./.fable/fable-library.3.2.11/Choice.js\";\r\nimport { comparePrimitives } from \"./.fable/fable-library.3.2.11/Util.js\";\r\nimport { toList, collect, map as map_1, append, singleton as singleton_1, empty as empty_1, delay } from \"./.fable/fable-library.3.2.11/Seq.js\";\r\nimport { FSharpMap__get_IsEmpty, isEmpty as isEmpty_1 } from \"./.fable/fable-library.3.2.11/Map.js\";\r\nimport { tryParseManyElements, parseManyElements } from \"./.fable/Fable.SimpleXml.3.2.0/SimpleXml.fs.js\";\r\n\r\nexport function capitalize(s) {\r\n    let copyOfStruct;\r\n    return ((copyOfStruct = s[0], copyOfStruct)).toUpperCase() + s.slice(1, s.length).toLowerCase();\r\n}\r\n\r\nexport function toCamelCase(words) {\r\n    return mapIndexed((i, word) => {\r\n        if (i > 0) {\r\n            return capitalize(word);\r\n        }\r\n        else {\r\n            return word.toLowerCase();\r\n        }\r\n    }, words);\r\n}\r\n\r\nexport function formatAttributeName(attr) {\r\n    return join(\"\", toCamelCase(split(attr, [\"-\"], null, 0)));\r\n}\r\n\r\nexport function compressSpaces(text_mut) {\r\n    compressSpaces:\r\n    while (true) {\r\n        const text = text_mut;\r\n        const compressed = replace(text, \"  \", \" \");\r\n        if (compressed !== text) {\r\n            text_mut = compressed;\r\n            continue compressSpaces;\r\n        }\r\n        else {\r\n            return compressed;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport class ChildPosition extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"FirstChild\", \"MiddleChild\", \"LastChild\", \"SingleChild\"];\r\n    }\r\n}\r\n\r\nexport function ChildPosition$reflection() {\r\n    return union_type(\"Xml2Feliz.ChildPosition\", [], ChildPosition, () => [[], [], [], []]);\r\n}\r\n\r\nexport function toPositionedChildren(children) {\r\n    if (!isEmpty(children)) {\r\n        if (isEmpty(tail(children))) {\r\n            return singleton([new ChildPosition(3), head(children)]);\r\n        }\r\n        else {\r\n            const lastIdx = (length(children) - 1) | 0;\r\n            return mapIndexed_1((idx, child_1) => {\r\n                if (idx === 0) {\r\n                    return [new ChildPosition(0), child_1];\r\n                }\r\n                else if (idx === lastIdx) {\r\n                    return [new ChildPosition(2), child_1];\r\n                }\r\n                else {\r\n                    return [new ChildPosition(1), child_1];\r\n                }\r\n            }, children);\r\n        }\r\n    }\r\n    else {\r\n        return empty();\r\n    }\r\n}\r\n\r\nexport function formatTextProp(pos, text) {\r\n    const formatted = compressSpaces(replace(replace(text, \"\\n\", \" \"), \"\\r\", \" \"));\r\n    switch (pos.tag) {\r\n        case 2: {\r\n            return formatted.trimEnd();\r\n        }\r\n        case 3: {\r\n            return formatted.trim();\r\n        }\r\n        case 1: {\r\n            return formatted;\r\n        }\r\n        default: {\r\n            return formatted.trimStart();\r\n        }\r\n    }\r\n}\r\n\r\nexport function $007CCommentNode$007CTextNode$007CSelfClosingElement$007CEmptyElement$007CEmptyElementWithText$007CMixedNode$007CEmptyTextNode$007C(node) {\r\n    if (node.IsComment) {\r\n        return new FSharpChoice$7(0, node.Content);\r\n    }\r\n    else if (node.IsTextNode ? isNullOrWhiteSpace(node.Content.trim()) : false) {\r\n        return new FSharpChoice$7(6, void 0);\r\n    }\r\n    else if (node.IsTextNode) {\r\n        return new FSharpChoice$7(1, node.Content);\r\n    }\r\n    else if (node.SelfClosing) {\r\n        return new FSharpChoice$7(2, [node.Name, node.Attributes]);\r\n    }\r\n    else if (isEmpty(node.Children) ? (node.Content === \"\") : false) {\r\n        return new FSharpChoice$7(3, [node.Name, node.Attributes]);\r\n    }\r\n    else if (isEmpty(node.Children) ? (node.Content !== \"\") : false) {\r\n        return new FSharpChoice$7(4, [node.Name, node.Attributes, node.Content]);\r\n    }\r\n    else {\r\n        return new FSharpChoice$7(5, [node.Name, node.Attributes, node.Children]);\r\n    }\r\n}\r\n\r\nexport function formatAttribute(indent, level, attr) {\r\n    let clo1_1;\r\n    const indentStr = Array((indent * level) + 1).join(\" \");\r\n    if (attr[0] === \"class\") {\r\n        const classes = split(attr[1], [\" \"], null, 0);\r\n        if ((!equalsWith((x, y) => comparePrimitives(x, y), classes, null)) ? (classes.length === 1) : false) {\r\n            const single = classes[0];\r\n            return toText(printf(\"%sprop.className \\\"%s\\\"\"))(indentStr)(single);\r\n        }\r\n        else {\r\n            const classes_1 = join(\"; \", map((clo1_1 = toText(printf(\"\\\"%s\\\"\")), (arg10_1) => clo1_1(arg10_1)), classes));\r\n            return toText(printf(\"%sprop.classes [ %s ]\"))(indentStr)(classes_1);\r\n        }\r\n    }\r\n    else {\r\n        const arg20_2 = formatAttributeName(attr[0]);\r\n        return toText(printf(\"%sprop.%s \\\"%s\\\"\"))(indentStr)(arg20_2)(attr[1]);\r\n    }\r\n}\r\n\r\nexport function containsOnlyCommentsOrEmptyText(elements) {\r\n    return forAll((element) => {\r\n        if (element.IsComment) {\r\n            return true;\r\n        }\r\n        else if (element.IsTextNode) {\r\n            return isNullOrWhiteSpace(element.Content.trim());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, elements);\r\n}\r\n\r\nexport function formatNode(indent, level, pos, node) {\r\n    const line = (level_1, text) => {\r\n        const indentStr = Array((indent * level_1) + 1).join(\" \");\r\n        return toText(printf(\"%s%s\"))(indentStr)(text);\r\n    };\r\n    return delay(() => {\r\n        let arg10_2, arg20_1;\r\n        let pattern_matching_result, text_1, attrs, name_1, attrs_1, name_2, text_2, attrs_2, children, name_3;\r\n        const activePatternResult9025 = $007CCommentNode$007CTextNode$007CSelfClosingElement$007CEmptyElement$007CEmptyElementWithText$007CMixedNode$007CEmptyTextNode$007C(node);\r\n        if (activePatternResult9025.tag === 0) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (activePatternResult9025.tag === 1) {\r\n            pattern_matching_result = 2;\r\n            text_1 = activePatternResult9025.fields[0];\r\n        }\r\n        else if (activePatternResult9025.tag === 2) {\r\n            pattern_matching_result = 3;\r\n            attrs = activePatternResult9025.fields[0][1];\r\n            name_1 = activePatternResult9025.fields[0][0];\r\n        }\r\n        else if (activePatternResult9025.tag === 3) {\r\n            pattern_matching_result = 3;\r\n            attrs = activePatternResult9025.fields[0][1];\r\n            name_1 = activePatternResult9025.fields[0][0];\r\n        }\r\n        else if (activePatternResult9025.tag === 4) {\r\n            pattern_matching_result = 4;\r\n            attrs_1 = activePatternResult9025.fields[0][1];\r\n            name_2 = activePatternResult9025.fields[0][0];\r\n            text_2 = activePatternResult9025.fields[0][2];\r\n        }\r\n        else if (activePatternResult9025.tag === 5) {\r\n            pattern_matching_result = 5;\r\n            attrs_2 = activePatternResult9025.fields[0][1];\r\n            children = activePatternResult9025.fields[0][2];\r\n            name_3 = activePatternResult9025.fields[0][0];\r\n        }\r\n        else {\r\n            pattern_matching_result = 0;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return empty_1();\r\n            }\r\n            case 1: {\r\n                return empty_1();\r\n            }\r\n            case 2: {\r\n                return singleton_1(line(level, (arg10_2 = formatTextProp(pos, text_1), toText(printf(\"Html.text \\\"%s\\\"\"))(arg10_2))));\r\n            }\r\n            case 3: {\r\n                return isEmpty_1(attrs) ? singleton_1(line(level, toText(printf(\"Html.%s []\"))(name_1))) : append(singleton_1(line(level, toText(printf(\"Html.%s [\"))(name_1))), delay(() => append(map_1((attr) => formatAttribute(indent, level + 1, attr), attrs), delay(() => singleton_1(line(level, \"]\"))))));\r\n            }\r\n            case 4: {\r\n                return isEmpty_1(attrs_1) ? singleton_1(line(level, (arg20_1 = formatTextProp(pos, text_2), toText(printf(\"Html.%s \\\"%s\\\"\"))(name_2)(arg20_1)))) : append(singleton_1(line(level, toText(printf(\"Html.%s [\"))(name_2))), delay(() => append(map_1((attr_1) => formatAttribute(indent, level + 1, attr_1), attrs_1), delay(() => {\r\n                    let arg10_7;\r\n                    return append(singleton_1(line(level + 1, (arg10_7 = formatTextProp(pos, text_2), toText(printf(\"prop.text \\\"%s\\\"\"))(arg10_7)))), delay(() => singleton_1(line(level, \"]\"))));\r\n                }))));\r\n            }\r\n            case 5: {\r\n                return (!FSharpMap__get_IsEmpty(attrs_2)) ? append(singleton_1(line(level, toText(printf(\"Html.%s [\"))(name_3))), delay(() => append(map_1((attr_2) => formatAttribute(indent, level + 1, attr_2), attrs_2), delay(() => append(((!isEmpty(children)) ? (!containsOnlyCommentsOrEmptyText(children)) : false) ? append(singleton_1(line(level + 1, \"prop.children [\")), delay(() => append(collect((child) => formatNode(indent, level + 2, child[0], child[1]), toPositionedChildren(children)), delay(() => singleton_1(line(level + 1, \"]\")))))) : empty_1(), delay(() => singleton_1(line(level, \"]\")))))))) : append(singleton_1(line(level, toText(printf(\"Html.%s [\"))(name_3))), delay(() => append(collect((child_1) => formatNode(indent, level + 1, child_1[0], child_1[1]), toPositionedChildren(children)), delay(() => singleton_1(line(level, \"]\"))))));\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function format(nodes) {\r\n    return join(\"\\n\", toList(delay(() => collect((node) => formatNode(4, 0, node[0], node[1]), toPositionedChildren(nodes)))));\r\n}\r\n\r\nexport const parse = (input) => parseManyElements(input);\r\n\r\nexport const tryParse = (input) => tryParseManyElements(input);\r\n\r\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { toString, Record } from \"./Types.js\";\r\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\r\nimport { fold as fold_1, fill } from \"./Array.js\";\r\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { join } from \"./String.js\";\r\nimport { fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\r\n\r\nexport class SetTreeLeaf$1 {\r\n    constructor(k) {\r\n        this.k = k;\r\n    }\r\n}\r\n\r\nexport function SetTreeLeaf$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\r\n}\r\n\r\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\r\n    return new SetTreeLeaf$1(k);\r\n}\r\n\r\nexport function SetTreeLeaf$1__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\r\n    constructor(v, left, right, h) {\r\n        super(v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function SetTreeNode$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\r\n}\r\n\r\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\r\n    return new SetTreeNode$1(v, left, right, h);\r\n}\r\n\r\nexport function SetTreeNode$1__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function SetTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\r\n    SetTreeModule_countAux:\r\n    while (true) {\r\n        const t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\r\n                continue SetTreeModule_countAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_count(s) {\r\n    return SetTreeModule_countAux(s, 0);\r\n}\r\n\r\nexport function SetTreeModule_mk(l, k, r) {\r\n    let hl;\r\n    const t = l;\r\n    if (t != null) {\r\n        const t2 = t;\r\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const t_1 = r;\r\n    if (t_1 != null) {\r\n        const t2_1 = t_1;\r\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m = ((hl < hr) ? hr : hl) | 0;\r\n    if (m === 0) {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n    else {\r\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_rebalance(t1, v, t2) {\r\n    let t_2, t2_3, t_3, t2_4;\r\n    let t1h;\r\n    const t = t1;\r\n    if (t != null) {\r\n        const t2_1 = t;\r\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const t_1 = t2;\r\n    if (t_1 != null) {\r\n        const t2_2 = t_1;\r\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof SetTreeNode$1) {\r\n            if (((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? ((t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\r\n                if (matchValue_1 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof SetTreeNode$1) {\r\n            if (((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? ((t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_mk(t1, v, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_add(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c_1 < 0) {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\r\n            }\r\n            else if (c_1 === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\r\n                    }\r\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\r\n                    }\r\n                    else {\r\n                        return SetTreeModule_mk(t1, k, t2);\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\r\n            }\r\n        }\r\n        else {\r\n            return SetTreeModule_add(comparer, k, t1);\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_add(comparer, k, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_split(comparer, pivot, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c < 0) {\r\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n            else if (c === 0) {\r\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\r\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\r\n            if (c_1 < 0) {\r\n                return [t, false, SetTreeModule_empty()];\r\n            }\r\n            else if (c_1 === 0) {\r\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\r\n            }\r\n            else {\r\n                return [SetTreeModule_empty(), false, t];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_spliceOutSuccessor(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (SetTreeNode$1__get_Left(t2) == null) {\r\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n        }\r\n        else {\r\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_remove(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                if (SetTreeNode$1__get_Left(t2) == null) {\r\n                    return SetTreeNode$1__get_Right(t2);\r\n                }\r\n                else if (SetTreeNode$1__get_Right(t2) == null) {\r\n                    return SetTreeNode$1__get_Left(t2);\r\n                }\r\n                else {\r\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\r\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return SetTreeModule_empty();\r\n        }\r\n        else {\r\n            return t;\r\n        }\r\n    }\r\n    else {\r\n        return t;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\r\n    SetTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Left(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_iter(f_mut, t_mut) {\r\n    SetTreeModule_iter:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_iter;\r\n            }\r\n            else {\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\r\n    SetTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut, x = x_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\r\n                continue SetTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBack(f, m, x) {\r\n    return SetTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\r\n    SetTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_fold(f, x, m) {\r\n    return SetTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function SetTreeModule_forall(f_mut, t_mut) {\r\n    SetTreeModule_forall:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_forall;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_exists(f_mut, t_mut) {\r\n    SetTreeModule_exists:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_exists;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_subset(comparer, a, b) {\r\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\r\n}\r\n\r\nexport function SetTreeModule_properSubset(comparer, a, b) {\r\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\r\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\r\n    SetTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\r\n                continue SetTreeModule_filterAux;\r\n            }\r\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filter(comparer, f, s) {\r\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\r\n    SetTreeModule_diffAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\r\n        if (acc == null) {\r\n            return acc;\r\n        }\r\n        else if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                comparer_mut = comparer;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\r\n                continue SetTreeModule_diffAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_diff(comparer, a, b) {\r\n    return SetTreeModule_diffAux(comparer, b, a);\r\n}\r\n\r\nexport function SetTreeModule_union(comparer, t1, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\r\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\r\n                    }\r\n                    else {\r\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n            }\r\n        }\r\n        else {\r\n            return t1;\r\n        }\r\n    }\r\n    else {\r\n        return t2;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\r\n    SetTreeModule_intersectionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\r\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\r\n                comparer_mut = comparer;\r\n                b_mut = b;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = acc_2;\r\n                continue SetTreeModule_intersectionAux;\r\n            }\r\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersection(comparer, a, b) {\r\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\r\n    if (f(k)) {\r\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\r\n    SetTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\r\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue SetTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partition(comparer, f, s) {\r\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_minimumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_minimumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_maximumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_maximumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElement(s) {\r\n    const matchValue = SetTreeModule_minimumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElement(s) {\r\n    const matchValue = SetTreeModule_maximumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport class SetTreeModule_SetIterator$1 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\r\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function SetTreeModule_collapseLHS(stack_mut) {\r\n    SetTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const x = head(stack);\r\n            const rest = tail(stack);\r\n            if (x != null) {\r\n                const x2 = x;\r\n                if (x2 instanceof SetTreeNode$1) {\r\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\r\n                    continue SetTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue SetTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIterator(s) {\r\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\r\n}\r\n\r\nexport function SetTreeModule_notStarted() {\r\n    throw (new Error(\"Enumeration not started\"));\r\n}\r\n\r\nexport function SetTreeModule_alreadyFinished() {\r\n    throw (new Error(\"Enumeration already started\"));\r\n}\r\n\r\nexport function SetTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (isEmpty_1(matchValue)) {\r\n            return SetTreeModule_alreadyFinished();\r\n        }\r\n        else if (head(matchValue) != null) {\r\n            const t = head(matchValue);\r\n            return SetTreeLeaf$1__get_Key(t);\r\n        }\r\n        else {\r\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const t = head(matchValue);\r\n                if (t instanceof SetTreeNode$1) {\r\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIEnumerator(s) {\r\n    let i = SetTreeModule_mkIterator(s);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return SetTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = SetTreeModule_mkIterator(s);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\r\n    SetTreeModule_compareStacks:\r\n    while (true) {\r\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\r\n        const matchValue = [l1, l2];\r\n        if (!isEmpty_1(matchValue[0])) {\r\n            if (!isEmpty_1(matchValue[1])) {\r\n                if (head(matchValue[1]) != null) {\r\n                    if (head(matchValue[0]) != null) {\r\n                        const x1_3 = head(matchValue[0]);\r\n                        const x2_3 = head(matchValue[1]);\r\n                        if (x1_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\r\n                                if (x2_3 instanceof SetTreeNode$1) {\r\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                        if (c !== 0) {\r\n                                            return c | 0;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        const matchValue_3 = [l1, l2];\r\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\r\n                                        if (!isEmpty_1(matchValue_3[0])) {\r\n                                            if (head(matchValue_3[0]) != null) {\r\n                                                pattern_matching_result = 0;\r\n                                                t1_6 = tail(matchValue_3[0]);\r\n                                                x1_4 = head(matchValue_3[0]);\r\n                                            }\r\n                                            else if (!isEmpty_1(matchValue_3[1])) {\r\n                                                if (head(matchValue_3[1]) != null) {\r\n                                                    pattern_matching_result = 1;\r\n                                                    t2_6 = tail(matchValue_3[1]);\r\n                                                    x2_4 = head(matchValue_3[1]);\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result = 2;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else if (!isEmpty_1(matchValue_3[1])) {\r\n                                            if (head(matchValue_3[1]) != null) {\r\n                                                pattern_matching_result = 1;\r\n                                                t2_6 = tail(matchValue_3[1]);\r\n                                                x2_4 = head(matchValue_3[1]);\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result = 2;\r\n                                        }\r\n                                        switch (pattern_matching_result) {\r\n                                            case 0: {\r\n                                                if (x1_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 1: {\r\n                                                if (x2_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 2: {\r\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                    if (c_1 !== 0) {\r\n                                        return c_1 | 0;\r\n                                    }\r\n                                    else {\r\n                                        comparer_mut = comparer;\r\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\r\n                                        continue SetTreeModule_compareStacks;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_4 = [l1, l2];\r\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\r\n                                if (!isEmpty_1(matchValue_4[0])) {\r\n                                    if (head(matchValue_4[0]) != null) {\r\n                                        pattern_matching_result_1 = 0;\r\n                                        t1_7 = tail(matchValue_4[0]);\r\n                                        x1_5 = head(matchValue_4[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_4[1])) {\r\n                                        if (head(matchValue_4[1]) != null) {\r\n                                            pattern_matching_result_1 = 1;\r\n                                            t2_7 = tail(matchValue_4[1]);\r\n                                            x2_5 = head(matchValue_4[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_1 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_4[1])) {\r\n                                    if (head(matchValue_4[1]) != null) {\r\n                                        pattern_matching_result_1 = 1;\r\n                                        t2_7 = tail(matchValue_4[1]);\r\n                                        x2_5 = head(matchValue_4[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_1 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_1) {\r\n                                    case 0: {\r\n                                        if (x1_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (x2_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                if (c_2 !== 0) {\r\n                                    return c_2 | 0;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\r\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_5 = [l1, l2];\r\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\r\n                                if (!isEmpty_1(matchValue_5[0])) {\r\n                                    if (head(matchValue_5[0]) != null) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        t1_8 = tail(matchValue_5[0]);\r\n                                        x1_6 = head(matchValue_5[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_5[1])) {\r\n                                        if (head(matchValue_5[1]) != null) {\r\n                                            pattern_matching_result_2 = 1;\r\n                                            t2_8 = tail(matchValue_5[1]);\r\n                                            x2_6 = head(matchValue_5[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_2 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_5[1])) {\r\n                                    if (head(matchValue_5[1]) != null) {\r\n                                        pattern_matching_result_2 = 1;\r\n                                        t2_8 = tail(matchValue_5[1]);\r\n                                        x2_6 = head(matchValue_5[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_2) {\r\n                                    case 0: {\r\n                                        if (x1_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                            if (c_3 !== 0) {\r\n                                return c_3 | 0;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = tail(matchValue[0]);\r\n                                l2_mut = tail(matchValue[1]);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const x2 = head(matchValue[1]);\r\n                        const matchValue_1 = [l1, l2];\r\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\r\n                        if (!isEmpty_1(matchValue_1[0])) {\r\n                            if (head(matchValue_1[0]) != null) {\r\n                                pattern_matching_result_3 = 0;\r\n                                t1_2 = tail(matchValue_1[0]);\r\n                                x1 = head(matchValue_1[0]);\r\n                            }\r\n                            else if (!isEmpty_1(matchValue_1[1])) {\r\n                                if (head(matchValue_1[1]) != null) {\r\n                                    pattern_matching_result_3 = 1;\r\n                                    t2_2 = tail(matchValue_1[1]);\r\n                                    x2_1 = head(matchValue_1[1]);\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_3 = 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_1[1])) {\r\n                            if (head(matchValue_1[1]) != null) {\r\n                                pattern_matching_result_3 = 1;\r\n                                t2_2 = tail(matchValue_1[1]);\r\n                                x2_1 = head(matchValue_1[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_3 = 2;\r\n                        }\r\n                        switch (pattern_matching_result_3) {\r\n                            case 0: {\r\n                                if (x1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 1: {\r\n                                if (x2_1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 2: {\r\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (head(matchValue[0]) != null) {\r\n                    const x1_1 = head(matchValue[0]);\r\n                    const matchValue_2 = [l1, l2];\r\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\r\n                    if (!isEmpty_1(matchValue_2[0])) {\r\n                        if (head(matchValue_2[0]) != null) {\r\n                            pattern_matching_result_4 = 0;\r\n                            t1_4 = tail(matchValue_2[0]);\r\n                            x1_2 = head(matchValue_2[0]);\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_2[1])) {\r\n                            if (head(matchValue_2[1]) != null) {\r\n                                pattern_matching_result_4 = 1;\r\n                                t2_4 = tail(matchValue_2[1]);\r\n                                x2_2 = head(matchValue_2[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_4 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else if (!isEmpty_1(matchValue_2[1])) {\r\n                        if (head(matchValue_2[1]) != null) {\r\n                            pattern_matching_result_4 = 1;\r\n                            t2_4 = tail(matchValue_2[1]);\r\n                            x2_2 = head(matchValue_2[1]);\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_4 = 2;\r\n                    }\r\n                    switch (pattern_matching_result_4) {\r\n                        case 0: {\r\n                            if (x1_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            if (x2_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 2: {\r\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    l1_mut = tail(matchValue[0]);\r\n                    l2_mut = tail(matchValue[1]);\r\n                    continue SetTreeModule_compareStacks;\r\n                }\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n        else if (isEmpty_1(matchValue[1])) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_compare(comparer, t1, t2) {\r\n    if (t1 == null) {\r\n        if (t2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (t2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_choose(s) {\r\n    return SetTreeModule_minimumElement(s);\r\n}\r\n\r\nexport function SetTreeModule_toList(t) {\r\n    const loop = (t$0027_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const t$0027 = t$0027_mut, acc = acc_mut;\r\n            if (t$0027 != null) {\r\n                const t2 = t$0027;\r\n                if (t2 instanceof SetTreeNode$1) {\r\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\r\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(t, empty_1());\r\n}\r\n\r\nexport function SetTreeModule_copyToArray(s, arr, i) {\r\n    let j = i;\r\n    SetTreeModule_iter((x) => {\r\n        arr[j] = x;\r\n        j = ((j + 1) | 0);\r\n    }, s);\r\n}\r\n\r\nexport function SetTreeModule_toArray(s) {\r\n    const n = SetTreeModule_count(s) | 0;\r\n    const res = fill(new Array(n), 0, n, null);\r\n    SetTreeModule_copyToArray(s, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    SetTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            comparer_mut = comparer;\r\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\r\n            e_mut = e;\r\n            continue SetTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_ofArray(comparer, l) {\r\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofList(comparer, l) {\r\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return SetTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return SetTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FSharpSet {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpSet__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"set [\" + join(\"; \", map_1((x) => {\r\n            let copyOfStruct = x;\r\n            return toString(copyOfStruct);\r\n        }, this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpSet\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(that) {\r\n        const s = this;\r\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const s = this;\r\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const s = this;\r\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    get size() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    add(k) {\r\n        const s = this;\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return s;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n    }\r\n    delete(k) {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return false;\r\n    }\r\n    has(k) {\r\n        const s = this;\r\n        return FSharpSet__Contains(s, k);\r\n    }\r\n    keys() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    values() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    entries() {\r\n        const s = this;\r\n        return map_1((v) => [v, v], s);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const s = this;\r\n        iterate_1((x) => {\r\n            f(x, x, s);\r\n        }, s);\r\n    }\r\n}\r\n\r\nexport function FSharpSet$reflection(gen0) {\r\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\r\n}\r\n\r\nexport function FSharpSet_$ctor(comparer, tree) {\r\n    return new FSharpSet(comparer, tree);\r\n}\r\n\r\nexport function FSharpSet__get_Comparer(set$) {\r\n    return set$.comparer;\r\n}\r\n\r\nexport function FSharpSet__get_Tree(set$) {\r\n    return set$.tree;\r\n}\r\n\r\nexport function FSharpSet_Empty(comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\r\n}\r\n\r\nexport function FSharpSet__Add(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Remove(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__get_Count(s) {\r\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Contains(s, value) {\r\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Iterate(s, x) {\r\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Fold(s, f, z) {\r\n    const f_1 = f;\r\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__get_IsEmpty(s) {\r\n    return FSharpSet__get_Tree(s) == null;\r\n}\r\n\r\nexport function FSharpSet__Partition(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return [s, s];\r\n    }\r\n    else {\r\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\r\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Filter(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return s;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Map(s, f, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Exists(s, f) {\r\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__ForAll(s, f) {\r\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet_op_Subtraction(set1, set2) {\r\n    if (FSharpSet__get_Tree(set1) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_op_Addition(set1, set2) {\r\n    if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set1) == null) {\r\n        return set2;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_Intersection(a, b) {\r\n    if (FSharpSet__get_Tree(b) == null) {\r\n        return b;\r\n    }\r\n    else if (FSharpSet__get_Tree(a) == null) {\r\n        return a;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_IntersectionMany(sets) {\r\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\r\n}\r\n\r\nexport function FSharpSet_Equality(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\r\n}\r\n\r\nexport function FSharpSet_Compare(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\r\n}\r\n\r\nexport function FSharpSet__get_Choose(x) {\r\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MinimumElement(x) {\r\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MaximumElement(x) {\r\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToList(x) {\r\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToArray(x) {\r\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ComputeHashCode(this$) {\r\n    let y;\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (((y = (structuralHash(x_1) | 0), ((res << 1) + y) + 631)) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return Math.abs(res) | 0;\r\n}\r\n\r\nexport function isEmpty(set$) {\r\n    return FSharpSet__get_IsEmpty(set$);\r\n}\r\n\r\nexport function contains(element, set$) {\r\n    return FSharpSet__Contains(set$, element);\r\n}\r\n\r\nexport function add(value, set$) {\r\n    return FSharpSet__Add(set$, value);\r\n}\r\n\r\nexport function singleton(value, comparer) {\r\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\r\n}\r\n\r\nexport function remove(value, set$) {\r\n    return FSharpSet__Remove(set$, value);\r\n}\r\n\r\nexport function union(set1, set2) {\r\n    return FSharpSet_op_Addition(set1, set2);\r\n}\r\n\r\nexport function unionMany(sets, comparer) {\r\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\r\n}\r\n\r\nexport function intersect(set1, set2) {\r\n    return FSharpSet_Intersection(set1, set2);\r\n}\r\n\r\nexport function intersectMany(sets) {\r\n    return FSharpSet_IntersectionMany(sets);\r\n}\r\n\r\nexport function iterate(action, set$) {\r\n    FSharpSet__Iterate(set$, action);\r\n}\r\n\r\nexport function empty(comparer) {\r\n    return FSharpSet_Empty(comparer);\r\n}\r\n\r\nexport function forAll(predicate, set$) {\r\n    return FSharpSet__ForAll(set$, predicate);\r\n}\r\n\r\nexport function exists(predicate, set$) {\r\n    return FSharpSet__Exists(set$, predicate);\r\n}\r\n\r\nexport function filter(predicate, set$) {\r\n    return FSharpSet__Filter(set$, predicate);\r\n}\r\n\r\nexport function partition(predicate, set$) {\r\n    return FSharpSet__Partition(set$, predicate);\r\n}\r\n\r\nexport function fold(folder, state, set$) {\r\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\r\n}\r\n\r\nexport function foldBack(folder, set$, state) {\r\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\r\n}\r\n\r\nexport function map(mapping, set$, comparer) {\r\n    return FSharpSet__Map(set$, mapping, comparer);\r\n}\r\n\r\nexport function count(set$) {\r\n    return FSharpSet__get_Count(set$);\r\n}\r\n\r\nexport function ofList(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function ofArray(array, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\r\n}\r\n\r\nexport function toList(set$) {\r\n    return FSharpSet__ToList(set$);\r\n}\r\n\r\nexport function toArray(set$) {\r\n    return FSharpSet__ToArray(set$);\r\n}\r\n\r\nexport function toSeq(set$) {\r\n    return map_1((x) => x, set$);\r\n}\r\n\r\nexport function ofSeq(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function difference(set1, set2) {\r\n    return FSharpSet_op_Subtraction(set1, set2);\r\n}\r\n\r\nexport function isSubset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isSuperset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function isProperSubset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isProperSuperset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function minElement(set$) {\r\n    return FSharpSet__get_MinimumElement(set$);\r\n}\r\n\r\nexport function maxElement(set$) {\r\n    return FSharpSet__get_MaximumElement(set$);\r\n}\r\n\r\nexport function unionWith(s1, s2) {\r\n    return fold_3((acc, x) => acc.add(x), s1, s2);\r\n}\r\n\r\nexport function intersectWith(s1, s2, comparer) {\r\n    const s2_1 = ofSeq(s2, comparer);\r\n    const enumerator = getEnumerator(s1.keys());\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (!FSharpSet__Contains(s2_1, x)) {\r\n                void s1.delete(x);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function exceptWith(s1, s2) {\r\n    const enumerator = getEnumerator(s2);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function isSubsetOf(s1, s2, comparer) {\r\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isSupersetOf(s1, s2, comparer) {\r\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isProperSubsetOf(s1, s2, comparer) {\r\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isProperSupersetOf(s1, s2, comparer) {\r\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\n","import { zip, map, indexed, choose } from \"./.fable/fable-library.3.2.11/Array.js\";\r\nimport { join, split } from \"./.fable/fable-library.3.2.11/String.js\";\r\n\r\nfunction findAllIndexes(predicate, array) {\r\n    return choose((tupledArg) => {\r\n        if (predicate(tupledArg[1])) {\r\n            return tupledArg[0];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, indexed(array), Int32Array);\r\n}\r\n\r\nexport function getExamples(examplesHtml) {\r\n    const lines = split(examplesHtml, [\"\\n\", \"\\r\"]);\r\n    return map((tupledArg) => {\r\n        const s = tupledArg[0] | 0;\r\n        return [split(lines[s], [\" \"], null, 0)[2], join(\"\\n\", lines.slice(s + 1, (tupledArg[1] - 1) + 1))];\r\n    }, zip(findAllIndexes((line) => (line.indexOf(\"{% capture\") === 0), lines), findAllIndexes((line_1) => (line_1 === \"{% endcapture %}\"), lines)));\r\n}\r\n\r\n","import { createElement } from \"react\";\r\nimport react from \"react\";\r\n\r\nexport const reactApi = react;\r\n\r\nexport const reactElement = createElement;\r\n\r\nexport function mkAttr(key, value) {\r\n    return [key, value];\r\n}\r\n\r\nexport function mkStyle(key, value) {\r\n    return [key, value];\r\n}\r\n\r\n","import { reverse, empty, cons, fold } from \"../fable-library.3.2.11/List.js\";\r\nimport { uncurry } from \"../fable-library.3.2.11/Util.js\";\r\nimport { toString } from \"../fable-library.3.2.11/Types.js\";\r\nimport { mkAttr } from \"../Feliz.1.16.0/Interop.fs.js\";\r\nimport { join } from \"../fable-library.3.2.11/String.js\";\r\n\r\nexport function Helpers_extractClasses(xs) {\r\n    return fold(uncurry(2, (tupledArg) => {\r\n        const classes = tupledArg[0];\r\n        const props = tupledArg[1];\r\n        return (x) => {\r\n            const matchValue = x;\r\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\r\n        };\r\n    }), [empty(), empty()], reverse(xs));\r\n}\r\n\r\nexport function Helpers_combineClasses(cn, xs) {\r\n    const tupledArg = Helpers_extractClasses(xs);\r\n    return cons(mkAttr(\"className\", join(\" \", cons(cn, tupledArg[0]))), tupledArg[1]);\r\n}\r\n\r\n","import { map, equalsWith, mapIndexed } from \"./.fable/fable-library.3.2.11/Array.js\";\r\nimport { tryFind, ofList } from \"./.fable/fable-library.3.2.11/Map.js\";\r\nimport { sort, forAll, empty, mapIndexed as mapIndexed_1, length, singleton, head, tail, isEmpty, ofArray } from \"./.fable/fable-library.3.2.11/List.js\";\r\nimport { interpolate, printf, toText, replace, split, join } from \"./.fable/fable-library.3.2.11/String.js\";\r\nimport { defaultArg } from \"./.fable/fable-library.3.2.11/Option.js\";\r\nimport { Union } from \"./.fable/fable-library.3.2.11/Types.js\";\r\nimport { union_type } from \"./.fable/fable-library.3.2.11/Reflection.js\";\r\nimport { compare, comparePrimitives } from \"./.fable/fable-library.3.2.11/Util.js\";\r\nimport { FSharpChoice$3 } from \"./.fable/fable-library.3.2.11/Choice.js\";\r\nimport { toList, collect, map as map_1, append, singleton as singleton_1, empty as empty_1, delay } from \"./.fable/fable-library.3.2.11/Seq.js\";\r\n\r\nexport function capitalize(s) {\r\n    let copyOfStruct;\r\n    return ((copyOfStruct = s[0], copyOfStruct)).toUpperCase() + s.slice(1, s.length).toLowerCase();\r\n}\r\n\r\nexport function toCamelCase(words) {\r\n    return mapIndexed((i, word) => {\r\n        if (i > 0) {\r\n            return capitalize(word);\r\n        }\r\n        else {\r\n            return word.toLowerCase();\r\n        }\r\n    }, words);\r\n}\r\n\r\nexport const nameMaps = ofList(ofArray([[\"type\", \"type\\u0027\"], [\"fieldset\", \"fieldSet\"]]));\r\n\r\nexport function formatAttributeName(attr) {\r\n    const name = join(\"\", toCamelCase(split(attr, [\"-\"], null, 0)));\r\n    return defaultArg(tryFind(name, nameMaps), name);\r\n}\r\n\r\nexport function compressSpaces(text_mut) {\r\n    compressSpaces:\r\n    while (true) {\r\n        const text = text_mut;\r\n        const compressed = replace(text, \"  \", \" \");\r\n        if (compressed !== text) {\r\n            text_mut = compressed;\r\n            continue compressSpaces;\r\n        }\r\n        else {\r\n            return compressed;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport class ChildPosition extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"FirstChild\", \"MiddleChild\", \"LastChild\", \"SingleChild\"];\r\n    }\r\n}\r\n\r\nexport function ChildPosition$reflection() {\r\n    return union_type(\"Html2Feliz.ChildPosition\", [], ChildPosition, () => [[], [], [], []]);\r\n}\r\n\r\nexport function toPositionedChildren(children) {\r\n    if (!isEmpty(children)) {\r\n        if (isEmpty(tail(children))) {\r\n            return singleton([new ChildPosition(3), head(children)]);\r\n        }\r\n        else {\r\n            const lastIdx = (length(children) - 1) | 0;\r\n            return mapIndexed_1((idx, child_1) => {\r\n                if (idx === 0) {\r\n                    return [new ChildPosition(0), child_1];\r\n                }\r\n                else if (idx === lastIdx) {\r\n                    return [new ChildPosition(2), child_1];\r\n                }\r\n                else {\r\n                    return [new ChildPosition(1), child_1];\r\n                }\r\n            }, children);\r\n        }\r\n    }\r\n    else {\r\n        return empty();\r\n    }\r\n}\r\n\r\nexport function formatTextProp(pos, text) {\r\n    const formatted = compressSpaces(replace(replace(text, \"\\n\", \" \"), \"\\r\", \" \"));\r\n    switch (pos.tag) {\r\n        case 2: {\r\n            return formatted.trimEnd();\r\n        }\r\n        case 3: {\r\n            return formatted.trim();\r\n        }\r\n        case 1: {\r\n            return formatted;\r\n        }\r\n        default: {\r\n            return formatted.trimStart();\r\n        }\r\n    }\r\n}\r\n\r\nexport function formatAttribute(indent, level, _arg1) {\r\n    let clo1_1;\r\n    const value = _arg1.fields[1];\r\n    const name = _arg1.fields[0];\r\n    const indentStr = Array((indent * level) + 1).join(\" \");\r\n    if (name === \"class\") {\r\n        const classes = split(value, [\" \"], null, 0);\r\n        if ((!equalsWith((x, y) => comparePrimitives(x, y), classes, null)) ? (classes.length === 1) : false) {\r\n            const single = classes[0];\r\n            return toText(printf(\"%sprop.className \\\"%s\\\"\"))(indentStr)(single);\r\n        }\r\n        else {\r\n            const classes_1 = join(\"; \", map((clo1_1 = toText(printf(\"\\\"%s\\\"\")), (arg10_1) => clo1_1(arg10_1)), classes));\r\n            return toText(printf(\"%sprop.classes [ %s ]\"))(indentStr)(classes_1);\r\n        }\r\n    }\r\n    else {\r\n        return toText(interpolate(\"%P()prop.%P() \\\"%P()\\\"\", [indentStr, formatAttributeName(name), value]));\r\n    }\r\n}\r\n\r\nexport function containsOnlyCommentsOrEmptyText(elements) {\r\n    return forAll((_arg1) => {\r\n        let pattern_matching_result;\r\n        if (_arg1.tag === 2) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else if (_arg1.tag === 1) {\r\n            if (_arg1.fields[0] === \"\") {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return false;\r\n            }\r\n        }\r\n    }, elements);\r\n}\r\n\r\nexport function emptyChildren(elements) {\r\n    if (isEmpty(elements)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return containsOnlyCommentsOrEmptyText(elements);\r\n    }\r\n}\r\n\r\nexport function $007CEmptyChildren$007CSingleTextNode$007CChildren$007C(elements) {\r\n    if (emptyChildren(elements)) {\r\n        return new FSharpChoice$3(0, void 0);\r\n    }\r\n    else {\r\n        let pattern_matching_result, text;\r\n        if (!isEmpty(elements)) {\r\n            if (head(elements).tag === 1) {\r\n                if (isEmpty(tail(elements))) {\r\n                    pattern_matching_result = 0;\r\n                    text = head(elements).fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return new FSharpChoice$3(1, text);\r\n            }\r\n            case 1: {\r\n                return new FSharpChoice$3(2, elements);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function formatNodeName(name) {\r\n    return defaultArg(tryFind(name, nameMaps), name);\r\n}\r\n\r\nexport function formatNode(indent, level, pos, node) {\r\n    const line = (level_1, text) => {\r\n        const indentStr = Array((indent * level_1) + 1).join(\" \");\r\n        return toText(printf(\"%s%s\"))(indentStr)(text);\r\n    };\r\n    return delay(() => {\r\n        let pattern_matching_result, text_1, children_1, name_2;\r\n        if (node.tag === 1) {\r\n            if (node.fields[0] === \"\") {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n                text_1 = node.fields[0];\r\n            }\r\n        }\r\n        else if (node.tag === 2) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (node.tag === 0) {\r\n            if (isEmpty(node.fields[1])) {\r\n                if (emptyChildren(node.fields[2])) {\r\n                    pattern_matching_result = 3;\r\n                    children_1 = node.fields[2];\r\n                    name_2 = node.fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 4;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return empty_1();\r\n            }\r\n            case 1: {\r\n                return empty_1();\r\n            }\r\n            case 2: {\r\n                return singleton_1(line(level, toText(interpolate(\"Html.text \\\"%P()\\\"\", [formatTextProp(pos, text_1)]))));\r\n            }\r\n            case 3: {\r\n                return singleton_1(line(level, toText(interpolate(\"Html.%P() []\", [formatNodeName(name_2)]))));\r\n            }\r\n            case 4: {\r\n                let pattern_matching_result_1, name_3, text_2, attrs, name_4, children_2, name_5, attrs_1, children_3, name_6;\r\n                if (node.tag === 0) {\r\n                    if (isEmpty(node.fields[1])) {\r\n                        const activePatternResult8948 = $007CEmptyChildren$007CSingleTextNode$007CChildren$007C(node.fields[2]);\r\n                        if (activePatternResult8948.tag === 1) {\r\n                            pattern_matching_result_1 = 0;\r\n                            name_3 = node.fields[0];\r\n                            text_2 = activePatternResult8948.fields[0];\r\n                        }\r\n                        else if (activePatternResult8948.tag === 0) {\r\n                            pattern_matching_result_1 = 1;\r\n                            attrs = node.fields[1];\r\n                            name_4 = node.fields[0];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 2;\r\n                            children_2 = node.fields[2];\r\n                            name_5 = node.fields[0];\r\n                        }\r\n                    }\r\n                    else if ($007CEmptyChildren$007CSingleTextNode$007CChildren$007C(node.fields[2]).tag === 0) {\r\n                        pattern_matching_result_1 = 1;\r\n                        attrs = node.fields[1];\r\n                        name_4 = node.fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 3;\r\n                        attrs_1 = node.fields[1];\r\n                        children_3 = node.fields[2];\r\n                        name_6 = node.fields[0];\r\n                    }\r\n                }\r\n                else if (node.tag === 3) {\r\n                    pattern_matching_result_1 = 4;\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 5;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        return singleton_1(line(level, toText(interpolate(\"Html.%P() \\\"%P()\\\"\", [formatNodeName(name_3), formatTextProp(pos, text_2)]))));\r\n                    }\r\n                    case 1: {\r\n                        return append(singleton_1(line(level, toText(interpolate(\"Html.%P() [\", [formatNodeName(name_4)])))), delay(() => append(map_1((attr) => formatAttribute(indent, level + 1, attr), attrs), delay(() => singleton_1(line(level, \"]\"))))));\r\n                    }\r\n                    case 2: {\r\n                        return append(singleton_1(line(level, toText(interpolate(\"Html.%P() [\", [formatNodeName(name_5)])))), delay(() => append(collect((child) => formatNode(indent, level + 1, child[0], child[1]), toPositionedChildren(children_2)), delay(() => singleton_1(line(level, \"]\"))))));\r\n                    }\r\n                    case 3: {\r\n                        return append(singleton_1(line(level, toText(interpolate(\"Html.%P() [\", [formatNodeName(name_6)])))), delay(() => append(map_1((attr_1) => formatAttribute(indent, level + 1, attr_1), sort(attrs_1, {\r\n                            Compare: (x, y) => compare(x, y),\r\n                        })), delay(() => {\r\n                            let activePatternResult8942;\r\n                            return append((activePatternResult8942 = $007CEmptyChildren$007CSingleTextNode$007CChildren$007C(children_3), (activePatternResult8942.tag === 1) ? singleton_1(line(level + 1, toText(interpolate(\"prop.text \\\"%P()\", [formatTextProp(pos, activePatternResult8942.fields[0])])))) : ((activePatternResult8942.tag === 2) ? append(singleton_1(line(level + 1, \"prop.children [\")), delay(() => append(collect((child_1) => formatNode(indent, level + 2, child_1[0], child_1[1]), toPositionedChildren(activePatternResult8942.fields[0])), delay(() => singleton_1(line(level + 1, \"]\")))))) : ((empty_1())))), delay(() => singleton_1(line(level, \"]\"))));\r\n                        }))));\r\n                    }\r\n                    case 4: {\r\n                        return empty_1();\r\n                    }\r\n                    case 5: {\r\n                        throw (new Error(\"Match failure: FSharp.Data.HtmlNode\"));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function format(nodes) {\r\n    return join(\"\\n\", toList(delay(() => collect((node) => formatNode(4, 0, node[0], node[1]), toPositionedChildren(nodes)))));\r\n}\r\n\r\n","import { some } from \"../fable-library.3.2.11/Option.js\";\r\n\r\nexport function onError(text, ex) {\r\n    console.error(some(text), ex);\r\n}\r\n\r\nexport function toConsole(text, o) {\r\n    console.log(some(text), o);\r\n}\r\n\r\n","import { Union } from \"../fable-library.3.2.11/Types.js\";\r\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.2.11/Reflection.js\";\r\nimport { fill } from \"../fable-library.3.2.11/Array.js\";\r\nimport { comparePrimitives, max } from \"../fable-library.3.2.11/Util.js\";\r\nimport { some } from \"../fable-library.3.2.11/Option.js\";\r\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.2.11/Seq.js\";\r\nimport { rangeDouble } from \"../fable-library.3.2.11/Range.js\";\r\n\r\nexport class RingState$1 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Writable\", \"ReadWritable\"];\r\n    }\r\n}\r\n\r\nexport function RingState$1$reflection(gen0) {\r\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\r\n}\r\n\r\nexport class RingBuffer$1 {\r\n    constructor(size) {\r\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1$reflection(gen0) {\r\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\r\n}\r\n\r\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\r\n    return new RingBuffer$1(size);\r\n}\r\n\r\nexport function RingBuffer$1__Pop(__) {\r\n    const matchValue = __.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items = matchValue.fields[0];\r\n        const rix$0027 = ((rix + 1) % items.length) | 0;\r\n        if (rix$0027 === wix) {\r\n            __.state = (new RingState$1(0, items, wix));\r\n        }\r\n        else {\r\n            __.state = (new RingState$1(1, items, wix, rix$0027));\r\n        }\r\n        return some(items[rix]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1__Push_2B595(__, item) {\r\n    const matchValue = __.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix_1 = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items_1 = matchValue.fields[0];\r\n        items_1[wix_1] = item;\r\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\r\n        if (wix$0027 === rix) {\r\n            const items_3 = RingBuffer$1__doubleSize(__, rix, items_1);\r\n            __.state = (new RingState$1(1, items_3, wix$0027, 0));\r\n        }\r\n        else {\r\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\r\n        }\r\n    }\r\n    else {\r\n        const ix = matchValue.fields[1] | 0;\r\n        const items = matchValue.fields[0];\r\n        items[ix] = item;\r\n        const wix = ((ix + 1) % items.length) | 0;\r\n        __.state = (new RingState$1(1, items, wix, ix));\r\n    }\r\n}\r\n\r\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\r\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\r\n}\r\n\r\n","import { Record } from \"../fable-library.3.2.11/Types.js\";\r\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.2.11/Reflection.js\";\r\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\r\nimport { toConsole, onError as onError_1 } from \"./prelude.fs.js\";\r\nimport { curry, partialApply, uncurry } from \"../fable-library.3.2.11/Util.js\";\r\nimport { append, ofArray } from \"../fable-library.3.2.11/List.js\";\r\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\r\nimport { value as value_1, some } from \"../fable-library.3.2.11/Option.js\";\r\nimport { printf, toText } from \"../fable-library.3.2.11/String.js\";\r\n\r\nexport class Program$4 extends Record {\r\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\r\n        super();\r\n        this.init = init;\r\n        this.update = update;\r\n        this.subscribe = subscribe;\r\n        this.view = view;\r\n        this.setState = setState;\r\n        this.onError = onError;\r\n        this.syncDispatch = syncDispatch;\r\n    }\r\n}\r\n\r\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\r\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\r\n}\r\n\r\nexport function ProgramModule_mkProgram(init, update, view) {\r\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\r\n        void view(model, arg);\r\n    }, (tupledArg) => {\r\n        onError_1(tupledArg[0], tupledArg[1]);\r\n    }, uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_mkSimple(init, update, view) {\r\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\r\n        void view(model, arg_2);\r\n    }, (tupledArg) => {\r\n        onError_1(tupledArg[0], tupledArg[1]);\r\n    }, uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_withSubscription(subscribe, program) {\r\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withConsoleTrace(program) {\r\n    return new Program$4((arg) => {\r\n        const patternInput = program.init(arg);\r\n        const initModel = patternInput[0];\r\n        toConsole(\"Initial state:\", initModel);\r\n        return [initModel, patternInput[1]];\r\n    }, (msg, model) => {\r\n        toConsole(\"New message:\", msg);\r\n        const patternInput_1 = program.update(msg, model);\r\n        const newModel = patternInput_1[0];\r\n        toConsole(\"Updated state:\", newModel);\r\n        return [newModel, patternInput_1[1]];\r\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withTrace(trace, program) {\r\n    return new Program$4(program.init, (msg, model) => {\r\n        trace(msg, model);\r\n        return program.update(msg, model);\r\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withErrorHandler(onError, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_mapErrorHandler(map, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withSetState(setState, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_setState(program) {\r\n    return curry(2, program.setState);\r\n}\r\n\r\nexport function ProgramModule_view(program) {\r\n    return curry(2, program.view);\r\n}\r\n\r\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\r\n    const init = partialApply(1, mapInit, [program.init]);\r\n    const update = partialApply(2, mapUpdate, [program.update]);\r\n    const view = partialApply(2, mapView, [program.view]);\r\n    const setState = partialApply(2, mapSetState, [program.setState]);\r\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_runWith(arg, program) {\r\n    const patternInput = program.init(arg);\r\n    const model = patternInput[0];\r\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\r\n    let reentered = false;\r\n    let state = model;\r\n    const dispatch = (msg) => {\r\n        if (reentered) {\r\n            RingBuffer$1__Push_2B595(rb, msg);\r\n        }\r\n        else {\r\n            reentered = true;\r\n            let nextMsg = some(msg);\r\n            while (nextMsg != null) {\r\n                const msg_1 = value_1(nextMsg);\r\n                try {\r\n                    const patternInput_1 = program.update(msg_1, state);\r\n                    const model$0027 = patternInput_1[0];\r\n                    program.setState(model$0027, syncDispatch);\r\n                    Cmd_exec(syncDispatch, patternInput_1[1]);\r\n                    state = model$0027;\r\n                }\r\n                catch (ex) {\r\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex]);\r\n                }\r\n                nextMsg = RingBuffer$1__Pop(rb);\r\n            }\r\n            reentered = false;\r\n        }\r\n    };\r\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\r\n    program.setState(model, syncDispatch);\r\n    Cmd_exec(syncDispatch, append((() => {\r\n        try {\r\n            return program.subscribe(model);\r\n        }\r\n        catch (ex_1) {\r\n            program.onError([\"Unable to subscribe:\", ex_1]);\r\n            return Cmd_none();\r\n        }\r\n    })(), patternInput[1]));\r\n}\r\n\r\nexport function ProgramModule_run(program) {\r\n    ProgramModule_runWith(void 0, program);\r\n}\r\n\r\n","import { Record } from \"../fable-library.3.2.11/Types.js\";\r\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.2.11/Reflection.js\";\r\nimport { Component } from \"react\";\r\nimport * as react from \"react\";\r\nimport { equalArrays, equals } from \"../fable-library.3.2.11/Util.js\";\r\n\r\nexport class LazyProps$1 extends Record {\r\n    constructor(model, render, equal) {\r\n        super();\r\n        this.model = model;\r\n        this.render = render;\r\n        this.equal = equal;\r\n    }\r\n}\r\n\r\nexport function LazyProps$1$reflection(gen0) {\r\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\r\n}\r\n\r\nexport class Components_LazyView$1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, _nextState) {\r\n        const this$ = this;\r\n        return !(this$.props).equal((this$.props).model, nextProps.model);\r\n    }\r\n    render() {\r\n        const this$ = this;\r\n        return (this$.props).render();\r\n    }\r\n}\r\n\r\nexport function Components_LazyView$1$reflection(gen0) {\r\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\r\n}\r\n\r\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\r\n    return new Components_LazyView$1(props);\r\n}\r\n\r\nexport function Common_lazyViewWith(equal, view, state) {\r\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\r\n}\r\n\r\nexport function Common_lazyView2With(equal, view, state, dispatch) {\r\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\r\n}\r\n\r\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\r\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\r\n}\r\n\r\nexport function Common_lazyView(view) {\r\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\r\n}\r\n\r\nexport function Common_lazyView2(view) {\r\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\r\n}\r\n\r\nexport function Common_lazyView3(view) {\r\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\r\n}\r\n\r\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.0.0/program.fs.js\";\r\nimport * as react_dom from \"react-dom\";\r\nimport { uncurry } from \"../fable-library.3.2.11/Util.js\";\r\nimport { Common_lazyView2With } from \"./common.fs.js\";\r\n\r\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\r\n    let lastRequest = void 0;\r\n    return ProgramModule_withSetState((model, dispatch) => {\r\n        if (lastRequest != null) {\r\n            window.cancelAnimationFrame(lastRequest);\r\n        }\r\n        lastRequest = window.requestAnimationFrame((_arg1) => {\r\n            react_dom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n        });\r\n    }, program);\r\n}\r\n\r\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\r\n    return ProgramModule_withSetState((model, dispatch) => {\r\n        react_dom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n    }, program);\r\n}\r\n\r\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\r\n    return ProgramModule_withSetState((model, dispatch) => {\r\n        react_dom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n    }, program);\r\n}\r\n\r\nexport function Program_withReactBatched(placeholderId, program) {\r\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactSynchronous(placeholderId, program) {\r\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReact(placeholderId, program) {\r\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactUnoptimized(placeholderId, program) {\r\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactHydrate(placeholderId, program) {\r\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\n","import { Union, Record } from \"./.fable/fable-library.3.2.11/Types.js\";\r\nimport { union_type, anonRecord_type, int32_type, record_type, bool_type, list_type, class_type, array_type, tuple_type, string_type } from \"./.fable/fable-library.3.2.11/Reflection.js\";\r\nimport { XmlElement$reflection } from \"./.fable/Fable.SimpleXml.3.2.0/AST.fs.js\";\r\nimport { HtmlNode_Parse_Z721C83C5, HtmlNode$reflection } from \"./HtmlParser.fs.js\";\r\nimport { Cmd_none, Cmd_OfAsync_perform, Cmd_batch } from \"./.fable/Fable.Elmish.3.0.0/cmd.fs.js\";\r\nimport { sumBy, empty, singleton as singleton_2, append, collect, map, delay, toList } from \"./.fable/fable-library.3.2.11/Seq.js\";\r\nimport { Http_get } from \"./.fable/Fable.SimpleHttp.3.0.0/Http.fs.js\";\r\nimport { join, printf, toText } from \"./.fable/fable-library.3.2.11/String.js\";\r\nimport { singleton, concat, ofArray, map as map_1 } from \"./.fable/fable-library.3.2.11/List.js\";\r\nimport { choose, pick, head } from \"./.fable/fable-library.3.2.11/Array.js\";\r\nimport { add as add_1, FSharpMap__get_Item, ofList } from \"./.fable/fable-library.3.2.11/Map.js\";\r\nimport { format, tryParse, parse } from \"./Xml2Feliz.fs.js\";\r\nimport { add, remove, FSharpSet__Contains, singleton as singleton_1 } from \"./.fable/fable-library.3.2.11/Set.js\";\r\nimport { equals, min, createObj, comparePrimitives } from \"./.fable/fable-library.3.2.11/Util.js\";\r\nimport { map as map_2 } from \"./.fable/fable-library.3.2.11/Option.js\";\r\nimport { getExamples } from \"./BulmaExampleParser.fs.js\";\r\nimport { mkStyle, reactElement, reactApi, mkAttr } from \"./.fable/Feliz.1.16.0/Interop.fs.js\";\r\nimport { Helpers_combineClasses } from \"./.fable/Feliz.Bulma.2.4.0/ElementBuilders.fs.js\";\r\nimport { format as format_1 } from \"./Html2Feliz.fs.js\";\r\nimport { ProgramModule_mkProgram, ProgramModule_withConsoleTrace, ProgramModule_run } from \"./.fable/Fable.Elmish.3.0.0/program.fs.js\";\r\nimport { Program_withReactSynchronous } from \"./.fable/Fable.Elmish.React.3.0.1/react.fs.js\";\r\nimport \"./styles/main.scss\";\r\n\r\n\r\nexport const examples = [[\"simple header\", \"\\u003ch1\\u003eHello, World!\\u003c/h1\\u003e\"], [\"simple body\", \"\\u003cbody\\u003e\\r\\n  \\u003ch1\\u003eSome header\\u003c/h1\\u003e\\r\\n  \\u003cp\\u003eThis is a \\u003cstrong\\u003eparagraph\\u003c/strong\\u003e with some text in it.\\u003c/p\\u003e\\r\\n\\u003c/body\\u003e\"], [\"paragraph with class\", \"\\u003cp class=\\\"menu-label\\\"\\u003eTransactions\\u003c/p\\u003e\"], [\"comments are ignored\", \"\\u003cdiv\\u003e\\r\\n    \\u003c!--This is a comment node--\\u003e\\r\\n    \\u003ch1\\u003eSome header\\u003c/h1\\u003e\\r\\n\\u003c/div\\u003e\"], [\"self closing element\", \"\\u003c!-- Only strict xml is accepted so you need the \\u0027/\\u0027 at the end --\\u003e\\r\\n\\u003cinput id=\\\"some-id\\\" type=\\\"text\\\" /\\u003e\"], [\"empty element\", \"\\u003cdiv id=\\\"some-id\\\" class=\\\"image-placeholder\\\"\\u003e\\u003c/div\\u003e\"], [\"empty element with text\", \"\\u003ch1 class=\\\"title\\\"\\u003eSome title\\u003c/h1\\u003e\"], [\"significant spaces\", \"\\u003cdiv\\u003e\\r\\n    This is text with \\u003cstrong\\u003ebold\\u003c/strong\\u003e words in it.\\r\\n\\u003c/div\\u003e\"]];\r\n\r\nexport class Model extends Record {\r\n    constructor(Examples, Input, Output, Output2, DropdownIsActive, ExpandedExamples) {\r\n        super();\r\n        this.Examples = Examples;\r\n        this.Input = Input;\r\n        this.Output = Output;\r\n        this.Output2 = Output2;\r\n        this.DropdownIsActive = DropdownIsActive;\r\n        this.ExpandedExamples = ExpandedExamples;\r\n    }\r\n}\r\n\r\nexport function Model$reflection() {\r\n    return record_type(\"App.Model\", [], Model, () => [[\"Examples\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, array_type(tuple_type(string_type, string_type))])], [\"Input\", string_type], [\"Output\", list_type(XmlElement$reflection())], [\"Output2\", list_type(HtmlNode$reflection())], [\"DropdownIsActive\", bool_type], [\"ExpandedExamples\", class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [string_type])]]);\r\n}\r\n\r\nexport class Msg extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"InputChanged\", \"SelectExample\", \"BulmaExampleLoaded\", \"ToggleDropdown\", \"ToggleExampleExpanded\"];\r\n    }\r\n}\r\n\r\nexport function Msg$reflection() {\r\n    return union_type(\"App.Msg\", [], Msg, () => [[[\"Item\", string_type]], [[\"Item1\", string_type], [\"Item2\", string_type]], [[\"Item\", anonRecord_type([\"Content\", string_type], [\"Page\", string_type], [\"StatusCode\", int32_type])]], [], [[\"Item\", string_type]]]);\r\n}\r\n\r\nexport const BulmaExamples_docs = \"https://raw.githubusercontent.com/jgthms/bulma/master/docs/documentation/\";\r\n\r\nexport function BulmaExamples_getExamples(pages) {\r\n    return Cmd_batch(toList(delay(() => map((page_1) => Cmd_OfAsync_perform((url) => Http_get(url), toText(printf(\"%s/%s.html\"))(BulmaExamples_docs)(page_1), (tupledArg) => (new Msg(2, {\r\n        Content: tupledArg[1],\r\n        Page: page_1,\r\n        StatusCode: tupledArg[0],\r\n    }))), pages))));\r\n}\r\n\r\nexport const BulmaExamples_elements = map_1((() => {\r\n    const clo1 = toText(printf(\"elements/%s\"));\r\n    return (arg10) => clo1(arg10);\r\n})(), ofArray([\"block\", \"box\", \"button\", \"content\", \"delete\", \"form\", \"icon\", \"image\", \"notification\", \"progress\", \"table\", \"tag\", \"title\"]));\r\n\r\nexport const BulmaExamples_components = map_1((() => {\r\n    const clo1 = toText(printf(\"components/%s\"));\r\n    return (arg10) => clo1(arg10);\r\n})(), ofArray([\"breadcrumb\", \"card\", \"dropdown\", \"level\", \"media\", \"menu\", \"message\", \"modal\", \"nav\", \"navbar\", \"pagination\", \"panel\", \"tabs\"]));\r\n\r\nexport const BulmaExamples_getAllExamples = BulmaExamples_getExamples(concat([BulmaExamples_elements, BulmaExamples_components]));\r\n\r\nexport function init() {\r\n    const input = head(examples)[1];\r\n    return [new Model(ofList(singleton([\"Simple\", examples])), input, parse(input), HtmlNode_Parse_Z721C83C5(input), false, singleton_1(\"Simple\", {\r\n        Compare: (x, y) => comparePrimitives(x, y),\r\n    })), BulmaExamples_getAllExamples];\r\n}\r\n\r\nexport function update(msg, model) {\r\n    switch (msg.tag) {\r\n        case 1: {\r\n            const content_2 = pick((tupledArg) => {\r\n                if (tupledArg[0] === msg.fields[1]) {\r\n                    return tupledArg[1];\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n            }, FSharpMap__get_Item(model.Examples, msg.fields[0]));\r\n            return [new Model(model.Examples, content_2, parse(content_2), HtmlNode_Parse_Z721C83C5(content_2), false, model.ExpandedExamples), Cmd_none()];\r\n        }\r\n        case 3: {\r\n            return [new Model(model.Examples, model.Input, model.Output, model.Output2, !model.DropdownIsActive, model.ExpandedExamples), Cmd_none()];\r\n        }\r\n        case 4: {\r\n            const page_1 = msg.fields[0];\r\n            return [new Model(model.Examples, model.Input, model.Output, model.Output2, model.DropdownIsActive, FSharpSet__Contains(model.ExpandedExamples, page_1) ? remove(page_1, model.ExpandedExamples) : add(page_1, model.ExpandedExamples)), Cmd_none()];\r\n        }\r\n        case 2: {\r\n            const result = msg.fields[0];\r\n            const examples_1 = choose((tupledArg_1) => {\r\n                const example = tupledArg_1[1];\r\n                return map_2((_arg1) => [tupledArg_1[0], example], tryParse(example));\r\n            }, getExamples(result.Content));\r\n            if (examples_1.length === 0) {\r\n                return [model, Cmd_none()];\r\n            }\r\n            else {\r\n                return [new Model(add_1(result.Page, examples_1, model.Examples), model.Input, model.Output, model.Output2, model.DropdownIsActive, model.ExpandedExamples), Cmd_none()];\r\n            }\r\n        }\r\n        default: {\r\n            const content_1 = msg.fields[0];\r\n            return [new Model(model.Examples, content_1, parse(content_1), HtmlNode_Parse_Z721C83C5(content_1), model.DropdownIsActive, model.ExpandedExamples), Cmd_none()];\r\n        }\r\n    }\r\n}\r\n\r\nexport function Extensions_copyToClipboard(selector) {\r\n    window.getSelection().removeAllRanges();\r\n    const node = document.querySelector(selector);\r\n    const range = document.createRange();\r\n    range.selectNode(node);\r\n    window.getSelection().addRange(range);\r\n    try {\r\n        void document.execCommand(\"copy\");\r\n        window.getSelection().removeAllRanges();\r\n    }\r\n    catch (matchValue) {\r\n    }\r\n}\r\n\r\nexport function examplesMenu(model, dispatch) {\r\n    const menuIcon = (faIcon) => {\r\n        const props = ofArray([mkAttr(\"className\", \"is-small\"), mkAttr(\"children\", reactApi.Children.toArray([reactElement(\"i\", createObj(singleton(mkAttr(\"className\", join(\" \", [\"fas\", faIcon])))))]))]);\r\n        return reactElement(\"span\", createObj(Helpers_combineClasses(\"icon\", props)));\r\n    };\r\n    return reactElement(\"aside\", createObj(ofArray([mkAttr(\"className\", \"menu\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(toList(delay(() => collect((kv) => {\r\n        const page = kv[0];\r\n        const isExpanded = FSharpSet__Contains(model.ExpandedExamples, page);\r\n        return append(singleton_2(reactElement(\"p\", createObj(ofArray([mkAttr(\"className\", \"menu-label\"), mkAttr(\"style\", createObj(singleton(mkStyle(\"cursor\", \"pointer\")))), mkAttr(\"onClick\", (_arg1) => {\r\n            dispatch(new Msg(4, page));\r\n        }), mkAttr(\"children\", reactApi.Children.toArray(Array.from(toList(delay(() => append(singleton_2(reactElement(\"span\", {\r\n            children: [page],\r\n        })), delay(() => (isExpanded ? singleton_2(menuIcon(\"fa-angle-right\")) : singleton_2(menuIcon(\"fa-angle-down\"))))))))))])))), delay(() => (isExpanded ? singleton_2(reactElement(\"ul\", createObj(ofArray([mkAttr(\"className\", \"menu-list\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(toList(delay(() => collect((matchValue) => {\r\n            let children;\r\n            const name_4 = matchValue[0];\r\n            return singleton_2((children = singleton(reactElement(\"a\", createObj(ofArray([mkAttr(\"children\", name_4), mkAttr(\"onClick\", (_arg2) => {\r\n                dispatch(new Msg(1, page, name_4));\r\n            })])))), reactElement(\"li\", {\r\n                children: reactApi.Children.toArray(Array.from(children)),\r\n            })));\r\n        }, kv[1]))))))])))) : empty())));\r\n    }, model.Examples))))))])));\r\n}\r\n\r\nexport const navbar = (() => {\r\n    let children, elms_2, elms_1, props;\r\n    let brand;\r\n    const elms = singleton((children = ofArray([reactElement(\"h3\", createObj(ofArray([mkAttr(\"className\", \"title is-3\"), mkAttr(\"children\", \"Xml2Feliz\")]))), reactElement(\"p\", createObj(ofArray([mkAttr(\"className\", \"subtitle\"), mkAttr(\"children\", \"Convert HTML into Feliz style code to learn the syntax\")])))]), reactElement(\"div\", {\r\n        children: reactApi.Children.toArray(Array.from(children)),\r\n    })));\r\n    brand = reactElement(\"div\", createObj(ofArray([mkAttr(\"className\", \"navbar-brand\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms)))])));\r\n    let menu;\r\n    const elms_3 = singleton((elms_2 = singleton((elms_1 = singleton(reactElement(\"a\", createObj(ofArray([mkAttr(\"href\", \"https://github.com/ThisFunctionalTom/Xml2Feliz\"), mkAttr(\"children\", reactApi.Children.toArray([(props = ofArray([mkAttr(\"className\", \"is-size-2\"), mkAttr(\"className\", join(\" \", [\"fab\", \"fa-github-square\"]))]), reactElement(\"span\", createObj(Helpers_combineClasses(\"icon\", props))))]))])))), reactElement(\"div\", createObj(ofArray([mkAttr(\"className\", \"navbar-item\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms_1)))]))))), reactElement(\"div\", createObj(ofArray([mkAttr(\"className\", \"navbar-end\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms_2)))])))));\r\n    menu = reactElement(\"div\", createObj(ofArray([mkAttr(\"className\", \"navbar-menu\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms_3)))])));\r\n    return reactElement(\"nav\", createObj(ofArray([mkAttr(\"className\", \"navbar\"), mkAttr(\"children\", reactApi.Children.toArray([brand, menu]))])));\r\n})();\r\n\r\nexport function listOfExamplesCol(model, dispatch) {\r\n    const props = ofArray([mkAttr(\"className\", \"is-2\"), mkAttr(\"children\", reactApi.Children.toArray([examplesMenu(model, dispatch)]))]);\r\n    return reactElement(\"div\", createObj(Helpers_combineClasses(\"column\", props)));\r\n}\r\n\r\nexport function inputCol(model, dispatch) {\r\n    let elms, props, value_4;\r\n    const lineCount = sumBy((c) => {\r\n        if (c === \"\\n\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }, model.Input.split(\"\"), {\r\n        GetZero: () => 0,\r\n        Add: (x, y) => (x + y),\r\n    }) | 0;\r\n    const props_1 = ofArray([mkAttr(\"className\", \"is-4\"), mkAttr(\"children\", reactApi.Children.toArray([(elms = singleton((props = ofArray([mkAttr(\"wrap\", \"off\"), mkAttr(\"rows\", min((x_1, y_1) => comparePrimitives(x_1, y_1), lineCount + 1, 50)), mkAttr(\"style\", createObj(singleton(mkStyle(\"minWidth\", 40 + \"%\")))), (value_4 = model.Input, mkAttr(\"ref\", (e) => {\r\n        if ((!(e == null)) ? (!equals(e.value, value_4)) : false) {\r\n            e.value = value_4;\r\n        }\r\n    })), mkAttr(\"onChange\", (ev) => {\r\n        dispatch(new Msg(0, ev.target.value));\r\n    })]), reactElement(\"textarea\", createObj(Helpers_combineClasses(\"textarea\", props))))), reactElement(\"div\", createObj(ofArray([mkAttr(\"className\", \"box\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms)))]))))]))]);\r\n    return reactElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_1)));\r\n}\r\n\r\nexport function outputXml2Feliz(model, dispatch) {\r\n    let props_1, props, value_5;\r\n    const props_2 = ofArray([mkAttr(\"className\", \"is-6\"), mkAttr(\"children\", reactApi.Children.toArray([(props_1 = ofArray([mkAttr(\"id\", \"output\"), mkAttr(\"children\", reactApi.Children.toArray([(props = ofArray([mkAttr(\"className\", \"is-primary\"), mkAttr(\"className\", \"copy-button\"), mkAttr(\"children\", \"Copy\"), mkAttr(\"onClick\", (_arg1) => {\r\n        Extensions_copyToClipboard(\"#output\\u003epre\");\r\n    })]), reactElement(\"button\", createObj(Helpers_combineClasses(\"button\", props)))), (value_5 = format(model.Output), reactElement(\"pre\", {\r\n        children: [value_5],\r\n    }))]))]), reactElement(\"div\", createObj(Helpers_combineClasses(\"box\", props_1))))]))]);\r\n    return reactElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_2)));\r\n}\r\n\r\nexport function outputHtml2Feliz(model, dispatch) {\r\n    let props_1, props, value_5;\r\n    const props_2 = ofArray([mkAttr(\"className\", \"is-6\"), mkAttr(\"children\", reactApi.Children.toArray([(props_1 = ofArray([mkAttr(\"id\", \"output2\"), mkAttr(\"children\", reactApi.Children.toArray([(props = ofArray([mkAttr(\"className\", \"is-primary\"), mkAttr(\"className\", \"copy-button2\"), mkAttr(\"children\", \"Copy\"), mkAttr(\"onClick\", (_arg1) => {\r\n        Extensions_copyToClipboard(\"#output2\\u003epre\");\r\n    })]), reactElement(\"button\", createObj(Helpers_combineClasses(\"button\", props)))), (value_5 = format_1(model.Output2), reactElement(\"pre\", {\r\n        children: [value_5],\r\n    }))]))]), reactElement(\"div\", createObj(Helpers_combineClasses(\"box\", props_1))))]))]);\r\n    return reactElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_2)));\r\n}\r\n\r\nexport function content(model, dispatch) {\r\n    const elms = ofArray([listOfExamplesCol(model, dispatch), inputCol(model, dispatch), outputHtml2Feliz(model, dispatch)]);\r\n    return reactElement(\"div\", createObj(ofArray([mkAttr(\"className\", \"columns\"), mkAttr(\"children\", reactApi.Children.toArray(Array.from(elms)))])));\r\n}\r\n\r\nexport function view(model, dispatch) {\r\n    const props = ofArray([mkAttr(\"className\", \"is-fluid\"), mkAttr(\"children\", reactApi.Children.toArray([navbar, content(model, dispatch)]))]);\r\n    return reactElement(\"div\", createObj(Helpers_combineClasses(\"container\", props)));\r\n}\r\n\r\nProgramModule_run(ProgramModule_withConsoleTrace(Program_withReactSynchronous(\"feliz-app\", ProgramModule_mkProgram(init, (msg, model) => update(msg, model), (model_1, dispatch) => view(model_1, dispatch)))));\r\n\r\n","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);"],"sourceRoot":""}